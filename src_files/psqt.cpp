//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   70,   42), M(   -1,  -61), M(  -71,   -3), M( -102,   34), M(  -80,   13),
        M(  -51,  -24), M(  -20,  -33), M(   -9,  -73), M(  -18,  -24), M(  -49,   -8),
        M(  -33,   -3), M(  -63,   22), M(  -16,   28), M(  -15,   32), M(  -39,   50),
        M(  -22,  -19), M(  -32,   -5), M(  -22,  -11), M(  -30,   -6), M(  -26,   -8),
        M(  -46,   -8), M(   -1,  -19), M(  -34,  -10), M(  -22,  -24), M(  -19,  -16),
        M(  -11,  -21), M(  -15,    5), M(  -17,   11), M(    1,   11), M(    3,    3),
        M(  -19,  -37), M(  -15,   -4), M(   -3,   -1), M(   -7,   -7), M(  -31,    1),
        M(  -18,  -13), M(  -15,  -12), M(   -1,  -18), M(   -8,  -26), M(  -14,  -16),
        M(   -6,  -15), M(  -10,    3), M(   -5,    1), M(   -7,   -1), M(   -5,  -12),
        M(  -38,   10), M(    4,   -9), M(   -3,    7), M(   -0,   -2), M(  -13,    3),
        M(   -7,   -2), M(    7,    2), M(   18,  -11), M(    0,  -11), M(   -9,   -5),
        M(  -10,   -2), M(   -9,    1), M(   -5,   -1), M(   -3,   -2), M(    8,  -19),
        M(  -22,    0), M(    3,    3), M(   -9,    2), M(   -2,    4), M(   -6,    5),
        M(   -2,    9), M(   20,    6), M(   32,    2), M(    6,    5), M(    3,    7),
        M(   -5,    2), M(   -4,    2), M(   -9,    4), M(   -5,   -0), M(    7,  -18),
        M(  -40,   13), M(   -3,   -6), M(   -8,    5), M(    0,   -0), M(    3,    4),
        M(   -1,   11), M(   -5,  -14), M(   10,   -7), M(   -7,   -5), M(    1,    8),
        M(   -2,    7), M(   -7,    2), M(   -8,    3), M(   -4,    0), M(    5,  -14),
        M(  -34,    1), M(    7,   -2), M(  -12,    4), M(    3,    1), M(    6,    7),
        M(    0,   14), M(   -3,   -4), M(    0,    0), M(    8,   -2), M(   -0,   13),
        M(   -3,    8), M(  -11,    7), M(   -7,    3), M(   -5,    1), M(   10,  -13),
        M(  -13,   12), M(   17,   -3), M(    8,    3), M(    3,   -1), M(    0,    8),
        M(  -13,   14), M(  -42,    5), M(  -33,   27), M(  -50,    2), M(  -13,   15),
        M(  -14,   10), M(  -15,    8), M(  -11,    6), M(   -2,    2), M(  -21,    7),
        M(  -11,    9), M(   19,   -9), M(  -56,   10), M(  -58,    4), M(  -41,   12),
        M(  -79,   18), M(  -68,   24), M(  -37,   12), M(  -65,   17), M(  -44,    5),
        M(  -67,   23), M(  -30,    9), M(  -27,    7), M(  -30,   13), M(  -56,   24),
        M(  -22,   -6), M( -145,   29), M(  -22,   11), M(  -75,    7), M(  -80,   14),
        M( -102,   24), M(  -79,   18), M(  -96,   29), M( -114,   19), M(  -87,   12),
        M( -100,   27), M(  -69,   10), M( -127,   19), M(  -29,    9), M( -106,   22),
        M( -328,   44), M( -157,    3), M(   70,   -4), M( -162,   22), M(  -68,   17),
        M(  -92,   18), M( -116,   32), M(  -68,   33), M(  -91,   16), M(  -80,   21),
        M( -134,   32), M( -168,   16), M(  -55,    4), M(   -2,   -1), M( -431,   63),
        M( -239,   60), M( -235,   28), M( -166,   45), M( -246,   66), M( -159,   15),
        M( -109,   40), M(  -14,   42), M(  -74,   35), M(  -72,   24), M( -113,   53),
        M(  176,  -30), M( -140,   13), M( -157,    2), M( -122,   78), M( -482,   -7),
        M( -126,  111), M(-2404,  508), M(  174,   52), M( -773,  163), M(  377,  -17),
        M( -238,  142), M( -405,   63), M( -251,  149), M( -336,   38), M( -255,   -7),
        M(   46,  -25), M(  -71,  -21), M(  577,  -52), M(  -88,  -34), M( -127,   21),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   12,   43), M( -502,  199), M( -330,  158), M( -255,  144), M( -242,  206),
        M( -217,  201), M(  113,  190), M( -124,  301), M(    6,  227), M(  -13,  192),
        M(   17,  154), M( -658,  233), M( -497,  146), M( -290,  103), M( -294,   81),
        M( -218,  138), M( -429,  118), M( -323,  102), M( -355,  122), M( -251,  136),
        M( -242,  187), M( -202,  189), M( -168,  164), M(  -82,  146), M( -155,  156),
        M(  -95,  106), M( -325,   98), M( -443,  102), M( -581,  149), M( -291,   69),
        M( -239,   88), M( -258,   77), M( -236,   57), M( -198,   46), M(  -79,   58),
        M(  -77,   94), M(  -89,  113), M(  -74,   99), M(  -93,   96), M(  -76,   86),
        M(  -95,   61), M( -122,   19), M( -197,   33), M( -301,   68), M( -366,   61),
        M( -229,   43), M( -141,   32), M(  -84,   16), M( -105,   18), M(  -47,   26),
        M(  -64,   46), M(  -81,   58), M(  -66,   42), M(   16,   39), M(  -71,   43),
        M(  -59,   21), M(  -85,    2), M(  -91,   18), M( -150,   25), M( -216,   53),
        M( -103,   32), M(  -57,   15), M(  -58,   13), M(  -44,   -2), M(  -16,   12),
        M(  -58,   13), M(  -64,   18), M(  -85,   12), M(  -71,   15), M(  -45,    6),
        M(  -52,   21), M(  -53,   -2), M(  -57,    8), M(  -42,   17), M(  -67,   28),
        M(  -48,   20), M(    5,    5), M(  -14,    1), M(    2,   -6), M(   36,   -5),
        M(  -33,    6), M(  -54,   -6), M(  -82,   -6), M(  -89,   -2), M(  -44,    6),
        M(   -8,    4), M(  -11,   -0), M(   -8,    4), M(  -23,   20), M(  -23,   19),
        M(   -2,   20), M(   -1,    5), M(   21,   -2), M(   11,   -7), M(   14,   -2),
        M(    8,   -2), M(   27,  -51), M(    0,    0), M(   -4,  -52), M(  -22,    5),
        M(   -5,    3), M(   -1,    4), M(   -1,    8), M(   -4,   15), M(  -12,   27),
        M(  -11,   19), M(    7,    8), M(    8,    5), M(   14,   -1), M(   20,    0),
        M(   28,    1), M(  -66,  -22), M(  -73,  -27), M(  -72,  -23), M(   11,    4),
        M(    6,    9), M(    2,    9), M(    0,   15), M(   -5,   21), M(  -10,   28),
        M(   -5,   15), M(   -3,   17), M(    3,    9), M(   10,    7), M(   18,    1),
        M(   19,    7), M(   38,    1), M(   41,   -5), M(   43,    4), M(   14,    9),
        M(    6,    9), M(    1,   16), M(   -0,   18), M(    0,   23), M(   -3,   22),
        M(   -5,   22), M(    4,   15), M(   -1,   16), M(   10,   10), M(   20,    4),
        M(   20,    5), M(   18,    8), M(    3,    4), M(   22,    8), M(   15,    9),
        M(    5,   10), M(    7,   16), M(    4,   21), M(    6,   21), M(   -1,   23),
        M(   -8,   19), M(    3,   20), M(    6,   16), M(    2,   16), M(    9,   10),
        M(   10,    5), M(    6,    7), M(    0,    1), M(    8,    7), M(   10,    7),
        M(    7,   11), M(    5,   17), M(    9,   20), M(   12,   21), M(    5,   22),
        M(   -6,   20), M(    7,   21), M(   11,   18), M(    7,   18), M(    4,   14),
        M(    5,   11), M(   -6,   10), M(  -10,    9), M(   -2,   16), M(    2,   14),
        M(    4,   13), M(    5,   21), M(    7,   22), M(   13,   21), M(    6,   22),
        M(    2,   20), M(   14,   15), M(    9,   18), M(   -5,   23), M(   -4,   21),
        M(   -8,   18), M(  -10,    7), M(  -15,   10), M(   -9,   23), M(   -5,   15),
        M(    0,   17), M(   -0,   25), M(    6,   25), M(   12,   21), M(    8,   22),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    3,    5), M(   26,   19), M(   18,   39), M(   -2,   45),
            M(   -6,   31), M(   -9,   26), M(  -13,   25), M(  -14,   35),
            M(   -1,   16), M(    5,   21), M(    2,   36), M(    0,   34),
            M(   -2,   23), M(  -10,   25), M(  -16,   25), M(  -15,   32),
            M(   -7,   26), M(    3,   34), M(    6,   32), M(   17,   26),
            M(    9,   22), M(    5,   22), M(  -10,   37), M(  -14,   43),
            M(    5,   42), M(   12,   50), M(   32,   38), M(   33,   30),
            M(   26,   20), M(    8,   42), M(    2,   54), M(   -3,   66),
            M(    3,   67), M(   66,   57), M(   98,   40), M(   55,   32),
            M(   38,   44), M(   40,   72), M(   27,   96), M(   -7,  108),
            M(   59,  143), M(   79,  136), M(  199,   91), M(  207,  102),
            M(  180,  137), M(  173,  167), M(  144,  198), M(  163,  190),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   16,   17), M(   42,   12), M(   27,   26), M(    3,   36),
            M(    1,   40), M(   -4,   42), M(  -13,   47), M(  -16,   47),
            M(   19,   20), M(   25,   19), M(    5,   32), M(    2,   32),
            M(    4,   34), M(   -0,   37), M(  -20,   41), M(  -24,   45),
            M(   23,   43), M(   20,   47), M(   15,   37), M(   15,   33),
            M(   20,   28), M(   14,   33), M(   -8,   43), M(  -29,   45),
            M(   32,   88), M(   32,   79), M(   25,   66), M(   30,   45),
            M(   46,   27), M(   41,   30), M(   -2,   49), M(  -19,   47),
            M(   21,  164), M(   65,  154), M(   51,  128), M(   48,   77),
            M(   74,   26), M(   87,   18), M(   60,   26), M(   -6,   48),
            M(  218,  246), M(  199,  259), M(  166,  236), M(  202,  173),
            M(  229,   98), M(  245,   48), M(  115,   83), M(   73,   91),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -103,   20), M(  -72,   44), M(  -63,   48), M(  -63,   66),
            M(  -65,   68), M(  -72,   40), M(  -75,   26), M( -111,   -3),
            M(  -76,   57), M(  -82,   65), M(  -64,   51), M(  -64,   69),
            M(  -62,   69), M(  -80,   49), M(  -95,   54), M(  -99,   35),
            M(  -75,   47), M(  -61,   71), M(  -59,   74), M(  -55,   85),
            M(  -62,   84), M(  -74,   61), M(  -78,   46), M(  -91,   16),
            M(  -64,   74), M(  -34,   83), M(  -57,  100), M(  -51,  104),
            M(  -65,  100), M(  -70,   91), M(  -79,   71), M(  -84,   46),
            M(  -58,   70), M(  -64,   84), M(  -35,  101), M(  -64,  111),
            M(  -53,  113), M(  -59,   95), M(  -72,   65), M(  -79,   58),
            M(  -82,   62), M(  -52,   70), M(   -5,   90), M(  -16,   88),
            M(  -42,   97), M(  -47,   95), M(  -77,   65), M( -103,   47),
            M(  -61,   54), M( -108,   66), M(  -12,   49), M(  -31,   82),
            M(  -22,   85), M(  -44,   60), M(  -93,   62), M(  -89,   43),
            M( -200,   -5), M( -164,   74), M( -203,  109), M(  -81,   72),
            M( -115,   76), M( -216,  103), M( -204,   74), M( -278,   13),
        },
        {
            
            M(  -61,  -32), M(  -46,   20), M(  -17,   11), M(   -9,   32),
            M(  -14,   26), M(  -26,    8), M(  -33,    9), M(  -71,   -1),
            M(  -34,    9), M(  -41,   29), M(  -15,   13), M(  -11,   29),
            M(   -7,   32), M(  -21,   21), M(  -55,   30), M(  -55,    8),
            M(  -35,    4), M(  -20,   25), M(   -8,   32), M(   -5,   48),
            M(    1,   49), M(  -16,   30), M(  -15,   13), M(  -43,   -4),
            M(  -16,   28), M(    5,   37), M(    2,   56), M(    6,   59),
            M(   16,   55), M(    5,   48), M(   17,   29), M(  -13,   15),
            M(  -20,   33), M(   -1,   32), M(   20,   52), M(   27,   64),
            M(   11,   65), M(   24,   52), M(    3,   26), M(   -0,   16),
            M(  -55,   21), M(    8,   20), M(   25,   50), M(   36,   49),
            M(   49,   45), M(   61,   37), M(   17,   10), M(  -12,    1),
            M(  -30,    1), M(  -27,   23), M(   37,    9), M(   63,   35),
            M(   33,   30), M(   27,   11), M(  -39,   14), M(   -8,   -4),
            M( -211,  -30), M( -159,   37), M( -140,   48), M(  -63,   37),
            M(  -42,   20), M( -129,   39), M(  -24,    1), M( -179,  -42),
        },
    },
    {
        {
            
            M(  -52,    6), M(  -64,   22), M(  -55,   26), M(  -56,   38),
            M(  -51,   34), M(  -49,   38), M(  -45,   35), M(  -38,   11),
            M(  -44,   -9), M(  -30,   10), M(  -41,   25), M(  -48,   36),
            M(  -50,   41), M(  -45,   29), M(  -41,   12), M(  -45,   11),
            M(  -34,   33), M(  -38,   41), M(  -40,   48), M(  -42,   52),
            M(  -43,   50), M(  -43,   46), M(  -39,   35), M(  -51,   25),
            M(  -41,   30), M(  -44,   44), M(  -48,   56), M(  -30,   56),
            M(  -31,   60), M(  -43,   54), M(  -46,   38), M(  -61,   22),
            M(  -56,   43), M(  -36,   50), M(  -31,   55), M(  -27,   65),
            M(  -13,   59), M(  -41,   52), M(  -39,   44), M(  -69,   41),
            M(  -43,   44), M(  -19,   55), M(  -13,   60), M(   -9,   52),
            M(  -28,   53), M(  -24,   51), M(  -52,   54), M(  -62,   36),
            M(  -82,   46), M(  -55,   52), M(  -37,   47), M(  -57,   55),
            M(  -72,   56), M(  -57,   55), M(  -62,   56), M( -108,   54),
            M( -102,   51), M(  -89,   48), M( -189,   65), M( -146,   65),
            M( -171,   76), M( -181,   70), M( -121,   67), M( -114,   62),
        },
        {
            
            M(   21,  -18), M(   -6,   -3), M(   11,   -1), M(    2,    5),
            M(    2,    6), M(   -4,    2), M(   -1,    4), M(    2,  -15),
            M(   25,  -26), M(   54,  -17), M(   32,   -7), M(   23,    1),
            M(    6,    4), M(    5,   -2), M(    1,  -16), M(    7,  -22),
            M(   26,   -8), M(   43,    4), M(   46,    8), M(   26,    9),
            M(   21,   15), M(    9,    9), M(   10,    0), M(    1,   -6),
            M(   14,   -6), M(   29,    9), M(   29,   17), M(   52,   19),
            M(   31,   20), M(   22,   14), M(   19,   -0), M(   14,   -9),
            M(    6,   12), M(   29,   13), M(   31,   25), M(   48,   26),
            M(   66,   19), M(   34,    9), M(   40,    9), M(   13,   -4),
            M(   -1,   10), M(   31,   19), M(   35,   22), M(   44,   21),
            M(   73,   10), M(   81,    9), M(   58,    1), M(   21,   -3),
            M(  -38,   20), M(  -15,   31), M(    9,   26), M(  -21,   26),
            M(    5,   18), M(   47,    3), M(   19,    9), M(  -33,    1),
            M(  -40,   33), M(  -83,   31), M(  -84,   29), M(  -91,   35),
            M( -123,   30), M( -108,   24), M(   23,    5), M(  -16,   21),
        },
    },
    {
        {
            
            M( -100,   58), M(  -74,   68), M(  -73,   78), M(  -75,   72),
            M(  -75,   72), M(  -84,   80), M(  -89,   76), M(  -92,   71),
            M( -158,   77), M(  -81,   63), M(  -74,   64), M(  -84,   72),
            M(  -84,   74), M(  -94,   81), M(  -98,   73), M( -129,   80),
            M( -104,   68), M(  -70,   85), M(  -86,   86), M(  -88,   82),
            M(  -89,   85), M( -102,   91), M(  -96,   93), M( -109,   81),
            M(  -96,   92), M(  -71,  100), M(  -86,  106), M(  -89,  102),
            M(  -88,  105), M(  -99,  113), M( -103,  113), M( -103,   98),
            M(  -62,  104), M(  -44,   99), M(  -44,  103), M(  -46,  102),
            M(  -40,  105), M(  -66,  115), M(  -77,  111), M(  -89,  113),
            M(  -45,  108), M(   13,   87), M(    2,  101), M(   -9,   93),
            M(  -28,  103), M(  -55,  117), M(  -46,  106), M(  -91,  121),
            M(  -60,  118), M(  -59,  119), M(  -11,  102), M(  -56,  133),
            M(  -57,  135), M(  -71,  135), M(  -95,  138), M(  -90,  132),
            M(  -27,  127), M(  -46,  134), M(  -40,  135), M(  -86,  139),
            M(  -97,  144), M( -105,  150), M(  -76,  140), M(  -74,  134),
        },
        {
            
            M(  -46,   29), M(  -20,   27), M(  -11,   30), M(   -8,   25),
            M(   -7,   19), M(   -3,   23), M(    0,   19), M(  -23,   20),
            M(  -94,   35), M(  -40,   21), M(  -24,   26), M(  -25,   30),
            M(  -19,   26), M(  -14,   22), M(   -7,   14), M(  -54,   28),
            M(  -49,   26), M(  -12,   32), M(  -34,   40), M(  -28,   37),
            M(  -29,   34), M(  -24,   34), M(  -12,   35), M(  -29,   26),
            M(  -31,   46), M(   -3,   49), M(  -24,   60), M(  -22,   56),
            M(  -19,   47), M(  -19,   51), M(  -15,   50), M(  -25,   41),
            M(   -1,   57), M(    9,   54), M(   24,   52), M(   32,   54),
            M(   29,   45), M(   18,   51), M(   23,   42), M(   15,   44),
            M(    8,   59), M(   57,   39), M(   40,   58), M(   57,   45),
            M(   66,   40), M(   59,   43), M(   77,   32), M(   23,   49),
            M(    8,   66), M(   15,   67), M(   24,   69), M(   17,   80),
            M(   28,   68), M(   61,   44), M(   15,   58), M(   24,   53),
            M(   59,   54), M(   27,   71), M(   10,   82), M(  -11,   86),
            M(    3,   76), M(   66,   56), M(   56,   58), M(   31,   68),
        },
    },
    {
        {
            
            M( -154,  108), M( -145,   87), M( -137,  106), M( -130,  119),
            M( -129,  128), M( -136,  118), M( -141,  125), M( -141,  136),
            M( -151,  106), M( -127,   74), M( -119,   70), M( -128,  122),
            M( -130,  129), M( -128,  101), M( -135,  117), M( -145,  128),
            M( -121,  121), M( -118,  133), M( -130,  144), M( -133,  123),
            M( -136,  121), M( -136,  132), M( -132,  126), M( -146,  131),
            M( -119,  156), M( -121,  154), M( -132,  152), M( -145,  162),
            M( -149,  159), M( -145,  131), M( -142,  148), M( -147,  145),
            M( -130,  163), M( -121,  190), M( -140,  188), M( -151,  177),
            M( -161,  177), M( -157,  140), M( -157,  169), M( -159,  166),
            M( -173,  189), M( -128,  203), M( -139,  187), M( -133,  169),
            M( -149,  148), M( -159,  149), M( -163,  160), M( -171,  184),
            M( -138,  208), M( -192,  250), M(  -77,  146), M( -204,  220),
            M( -196,  202), M( -168,  175), M( -212,  219), M( -176,  201),
            M( -111,  158), M( -147,  203), M( -122,  163), M( -173,  175),
            M( -158,  166), M( -167,  192), M( -166,  204), M( -187,  221),
        },
        {
            
            M(    7,   -6), M(   27,  -34), M(   39,  -32), M(   37,    9),
            M(   39,    3), M(   34,   -9), M(   30,   23), M(   36,    3),
            M(   -1,   -5), M(   29,   -9), M(   61,  -43), M(   52,   10),
            M(   44,    4), M(   53,  -23), M(   55,  -15), M(   45,    3),
            M(   17,   19), M(   43,   21), M(   41,   32), M(   40,   17),
            M(   39,   14), M(   46,   11), M(   54,    3), M(   55,    4),
            M(   26,   38), M(   37,   47), M(   23,   52), M(   33,   66),
            M(   31,   51), M(   43,   32), M(   51,   25), M(   61,    3),
            M(   30,   51), M(   18,   75), M(   17,   48), M(   21,   74),
            M(   40,   64), M(   47,   50), M(   68,   43), M(   52,   20),
            M(   17,   76), M(   36,   36), M(   41,   41), M(   31,   49),
            M(   59,   54), M(   39,   75), M(   69,   27), M(   29,   31),
            M(   18,   67), M(  -20,  108), M(   22,   67), M(  -18,  101),
            M(  -33,  116), M(   90,   29), M(    8,   79), M(   37,   35),
            M(   31,   65), M(   34,   73), M(   25,   65), M(    9,   73),
            M(    1,   71), M(  146,  -19), M(   24,   54), M(   46,   25),
        },
    },
    {
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){
                    
                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                        + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                        + piece_values                    [p]
                        + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                        + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];
                    
                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                        - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                        - piece_values                    [p]
                        - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                        - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }
            
            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}