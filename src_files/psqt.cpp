//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  214,  -95), M(   39,  -87), M(  -32,    1), M( -128,   80), M(   -7,  -10),
        M(  -49,   20), M(  -18,  -40), M(   47,  -76), M(   38,  -37), M(  -26,  -13),
        M(  -21,    9), M(   -6,   10), M(  -10,   29), M(  -12,   36), M(   -7,   67),
        M(   55,  -99), M(  -22,  -35), M(    0,  -20), M(  -27,   -1), M(   14,   -1),
        M(   -5,   -7), M(   -2,  -13), M(  -24,    2), M(  -16,   -2), M(    1,   -3),
        M(    7,  -23), M(   -8,    4), M(  -11,    6), M(    2,   10), M(    6,    7),
        M(  -77,  -32), M(   -2,  -12), M(   -7,    6), M(   -6,  -13), M(  -18,    3),
        M(   -4,  -10), M(    0,  -14), M(    2,  -12), M(    0,  -20), M(   -4,  -12),
        M(   -2,  -10), M(   -0,   -3), M(   -2,   -4), M(   -4,    0), M(   -0,  -14),
        M(   -8,   -0), M(   13,   -4), M(   -7,    8), M(    4,    2), M(   -3,    5),
        M(   -0,   -4), M(    7,   -2), M(   13,   -9), M(    1,  -11), M(   -3,   -5),
        M(   -4,   -2), M(   -3,   -3), M(   -4,    2), M(   -4,   -1), M(    6,  -13),
        M(    4,   -1), M(    3,    2), M(  -15,    6), M(   -0,    0), M(   -5,    2),
        M(   -2,    5), M(   11,    2), M(   18,    1), M(    2,    3), M(    2,    1),
        M(   -1,   -5), M(   -2,    0), M(   -3,    3), M(   -6,   -0), M(    5,  -14),
        M(  -36,    4), M(    1,   -5), M(   -9,    1), M(    1,   -3), M(    4,    0),
        M(   -8,    7), M(    5,  -10), M(   13,   -4), M(    1,   -4), M(   -1,    1),
        M(   -1,    1), M(   -4,    2), M(   -4,    1), M(   -5,    2), M(    7,   -8),
        M(  -38,   -1), M(   14,   -6), M(   -7,   -2), M(   -2,    2), M(    5,    1),
        M(   -5,    7), M(    0,   -4), M(    0,    0), M(   11,   -2), M(  -10,   10),
        M(    2,   -0), M(   -7,    3), M(   -4,   -0), M(   -5,   -3), M(   15,  -11),
        M(  -33,   26), M(   32,   -4), M(   -2,    1), M(    0,   -2), M(    8,    2),
        M(  -15,    6), M(  -37,    4), M(  -24,   22), M(  -40,   -1), M(   -9,    7),
        M(  -12,    3), M(    4,   -1), M(  -12,    6), M(   13,   -4), M(    5,    9),
        M(  -10,    3), M(  108,  -30), M(  -37,    5), M(   19,   -9), M(    1,    0),
        M( -110,   17), M(  -48,   11), M(  -15,    0), M(  -76,    9), M(  -37,   -5),
        M(    5,    5), M(    9,    1), M(    2,    7), M(   26,    3), M(  -10,   10),
        M(   58,  -12), M( -111,   26), M(  -31,   23), M(  -31,   -6), M(  -13,    2),
        M( -136,   19), M(   18,   -6), M(  -51,   20), M( -126,   11), M(  -71,   -2),
        M( -148,   34), M(   -2,   -9), M( -117,   12), M(   55,  -10), M( -113,    7),
        M( -343,   31), M( -222,   22), M(  266,  -27), M(  -77,    5), M( -127,   21),
        M( -129,    7), M(  -82,   17), M(  -86,   16), M(  -96,    8), M(  -34,    8),
        M(  -66,   22), M( -141,    3), M(   84,   -8), M(  232,  -46), M( -269,   40),
        M( -369,    3), M( -331,   25), M(  128,    4), M( -120,   63), M( -132,   35),
        M(  -24,  -12), M(   73,   21), M(   39,   -2), M(  -66,   18), M(   13,   36),
        M(  179,   -5), M( -114,   54), M( -144,   34), M(  -25,   92), M( -672,   91),
        M(  312,  205), M( 1454,  944), M( 1563,   -5), M(-1012,   90), M( 1249,  -88),
        M(  -21,  113), M( -711,  102), M( -161,  226), M( -528,  -39), M( -869,  -44),
        M( -466,   46), M(   67,    9), M(  769,  -99), M(  198,  -57), M( -916,  455),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   10,   73), M( -615,  239), M( -323,  181), M( -303,  179), M( -221,  224),
        M( -294,  232), M(   29,  234), M( -149,  333), M(  -47,  269), M(  -58,  223),
        M(   11,  178), M( -632,  251), M( -526,  169), M( -405,  150), M( -441,  145),
        M( -229,  157), M( -447,  142), M( -323,  124), M( -372,  146), M( -282,  163),
        M( -232,  209), M( -146,  209), M( -167,  181), M(  -38,  169), M( -182,  182),
        M(  -86,  132), M( -308,  115), M( -446,  122), M( -578,  173), M( -332,  101),
        M( -221,   98), M( -229,   87), M( -225,   75), M( -185,   60), M(  -87,   78),
        M(  -73,  112), M(  -76,  123), M(  -44,  115), M(  -62,  113), M(  -64,  106),
        M(  -85,   79), M( -131,   39), M( -172,   49), M( -251,   74), M( -308,   68),
        M( -167,   55), M( -104,   48), M(  -84,   33), M(  -70,   32), M(  -31,   41),
        M(  -46,   62), M(  -58,   73), M(  -49,   59), M(   37,   57), M(  -63,   62),
        M(  -52,   39), M(  -67,   21), M(  -71,   32), M( -150,   50), M( -141,   57),
        M( -108,   60), M(  -30,   31), M(  -51,   30), M(  -38,   19), M(   -6,   30),
        M(  -31,   28), M(  -57,   38), M(  -66,   30), M(  -41,   33), M(  -33,   26),
        M(  -21,   35), M(  -53,   20), M(  -33,   27), M(  -44,   39), M(  -36,   48),
        M(  -18,   38), M(  -20,   36), M(   -0,   21), M(    0,   17), M(   39,   15),
        M(  -11,   24), M(  -33,   11), M(  -84,   18), M(  -67,   15), M(  -29,   27),
        M(   -0,   22), M(   -3,   20), M(   -5,   26), M(  -16,   41), M(  -13,   40),
        M(   -5,   44), M(  -11,   32), M(    6,   25), M(    1,   19), M(   13,   20),
        M(    8,   20), M(   40,  -30), M(    0,    0), M(    8,  -30), M(  -20,   24),
        M(   -3,   23), M(   -2,   25), M(    3,   29), M(   -6,   39), M(   -8,   48),
        M(  -18,   47), M(   -2,   36), M(    1,   31), M(    3,   24), M(   13,   24),
        M(   27,   20), M(  -70,   -2), M(  -58,  -12), M(  -73,   -4), M(   12,   23),
        M(    1,   30), M(    3,   30), M(    1,   39), M(   -2,   45), M(  -12,   56),
        M(    6,   38), M(   -3,   44), M(    3,   34), M(    5,   32), M(   12,   25),
        M(   14,   27), M(   38,   23), M(   41,   14), M(   38,   25), M(    6,   30),
        M(    3,   29), M(    2,   38), M(    3,   40), M(    4,   47), M(    0,   48),
        M(   -2,   48), M(   10,   39), M(    5,   40), M(   10,   33), M(   12,   28),
        M(   17,   27), M(   16,   28), M(    4,   24), M(   21,   27), M(   10,   28),
        M(    6,   30), M(    9,   38), M(    9,   43), M(   11,   45), M(    2,   51),
        M(    6,   40), M(   13,   42), M(   12,   39), M(    7,   38), M(   10,   31),
        M(   11,   26), M(    9,   26), M(    7,   18), M(    8,   27), M(    9,   28),
        M(    9,   33), M(    9,   39), M(   14,   43), M(   16,   46), M(    8,   50),
        M(    5,   45), M(   16,   44), M(   14,   41), M(   11,   40), M(    7,   36),
        M(    7,   32), M(    1,   30), M(   -1,   28), M(    0,   38), M(    6,   36),
        M(    8,   36), M(   11,   42), M(   13,   46), M(   18,   46), M(    9,   50),
        M(   13,   42), M(   21,   37), M(   16,   39), M(    5,   42), M(    4,   40),
        M(   -2,   38), M(   -3,   26), M(   -5,   30), M(   -4,   46), M(   -0,   39),
        M(    7,   41), M(    6,   47), M(   13,   48), M(   20,   46), M(   13,   50),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square

EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    5,  -15), M(   34,    1), M(   22,   22), M(   -2,   27),
            M(  -10,   11), M(  -18,    5), M(  -23,    2), M(  -23,    8),
            M(    7,   -2), M(   17,    2), M(    8,   18), M(    2,   16),
            M(   -8,    2), M(  -17,    3), M(  -26,    2), M(  -22,    4),
            M(   -3,    7), M(    9,   15), M(    9,   11), M(   14,    6),
            M(    3,    0), M(   -3,   -0), M(  -17,   13), M(  -18,   14),
            M(    3,   19), M(   12,   27), M(   28,   13), M(   28,    4),
            M(   20,   -6), M(    2,   18), M(   -3,   28), M(   -9,   37),
            M(    2,   36), M(   49,   31), M(   88,   13), M(   49,    3),
            M(   36,   12), M(   32,   47), M(   19,   72), M(   -7,   82),
            M(  -53,   51), M(  -25,   38), M(  100,   -5), M(  100,    9),
            M(   84,   45), M(   72,   85), M(   62,  117), M(   81,  110),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   13,   -3), M(   45,   -5), M(   28,    9), M(    1,   21),
            M(   -4,   23), M(  -13,   26), M(  -24,   27), M(  -25,   24),
            M(   19,    1), M(   30,    0), M(   10,   14), M(    3,   15),
            M(   -4,   17), M(  -10,   20), M(  -33,   22), M(  -31,   22),
            M(   16,   23), M(   17,   28), M(   14,   18), M(   12,   16),
            M(   12,   10), M(    6,   16), M(  -15,   23), M(  -30,   22),
            M(   17,   65), M(   22,   58), M(   19,   45), M(   21,   25),
            M(   36,    7), M(   33,   10), M(   -4,   27), M(  -21,   24),
            M(    6,  138), M(   43,  131), M(   36,  105), M(   35,   54),
            M(   64,    1), M(   77,   -6), M(   54,    3), M(   -9,   24),
            M(  108,  159), M(   95,  170), M(   62,  148), M(   84,   89),
            M(  112,   14), M(  121,  -34), M(    5,    4), M(  -22,   11),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M(  -71,   27), M(  -38,   50), M(  -35,   55), M(  -29,   74),
            M(  -26,   78), M(  -26,   52), M(  -22,   38), M(  -52,   13),
            M(  -49,   64), M(  -56,   72), M(  -36,   58), M(  -32,   77),
            M(  -23,   78), M(  -34,   61), M(  -42,   67), M(  -40,   51),
            M(  -42,   51), M(  -29,   74), M(  -27,   78), M(  -22,   92),
            M(  -24,   93), M(  -30,   72), M(  -26,   59), M(  -31,   30),
            M(  -28,   80), M(    3,   89), M(  -21,  107), M(  -13,  110),
            M(  -27,  110), M(  -26,  103), M(  -28,   84), M(  -25,   61),
            M(  -16,   79), M(  -22,   93), M(    7,  109), M(  -22,  120),
            M(  -10,  123), M(  -14,  107), M(  -20,   79), M(  -20,   73),
            M(  -34,   70), M(   -6,   79), M(   43,   99), M(   33,   98),
            M(    7,  107), M(    4,  106), M(  -23,   78), M(  -44,   62),
            M(   -8,   66), M(  -57,   78), M(   40,   61), M(   25,   93),
            M(   35,   97), M(   14,   73), M(  -34,   76), M(  -29,   59),
            M( -139,   12), M( -102,   88), M( -146,  124), M(  -19,   86),
            M(  -53,   91), M( -153,  118), M( -141,   91), M( -218,   34),
        },
        {
            
            M(  -48,  -12), M(  -33,   38), M(   -6,   29), M(    7,   51),
            M(    6,   45), M(    1,   29), M(    2,   31), M(  -31,   22),
            M(  -26,   29), M(  -33,   47), M(   -6,   31), M(    2,   47),
            M(   13,   49), M(    5,   41), M(  -21,   52), M(  -15,   31),
            M(  -20,   21), M(   -7,   41), M(    6,   48), M(    9,   65),
            M(   21,   66), M(    9,   48), M(   17,   33), M(   -4,   19),
            M(    4,   45), M(   24,   53), M(   20,   73), M(   24,   75),
            M(   36,   73), M(   30,   67), M(   47,   50), M(   25,   38),
            M(    9,   50), M(   24,   50), M(   44,   69), M(   51,   81),
            M(   35,   83), M(   49,   72), M(   32,   48), M(   35,   39),
            M(  -21,   40), M(   41,   39), M(   57,   69), M(   66,   68),
            M(   78,   64), M(   89,   57), M(   48,   32), M(   21,   24),
            M(   12,   22), M(   15,   43), M(   75,   29), M(  102,   55),
            M(   70,   51), M(   62,   32), M(   -2,   37), M(   29,   20),
            M( -162,   -6), M( -110,   59), M(  -91,   70), M(  -17,   58),
            M(    2,   42), M(  -87,   62), M(   19,   25), M( -126,  -18),
        },
    },
    {
        {
            
            M(  -41,   14), M(  -54,   31), M(  -46,   35), M(  -44,   47),
            M(  -36,   43), M(  -32,   46), M(  -24,   42), M(  -14,   17),
            M(  -36,   -1), M(  -22,   18), M(  -32,   33), M(  -37,   44),
            M(  -36,   49), M(  -28,   37), M(  -20,   19), M(  -20,   16),
            M(  -23,   37), M(  -27,   46), M(  -28,   53), M(  -30,   59),
            M(  -29,   56), M(  -26,   52), M(  -18,   40), M(  -27,   30),
            M(  -29,   34), M(  -31,   49), M(  -35,   61), M(  -16,   61),
            M(  -17,   66), M(  -26,   60), M(  -25,   44), M(  -37,   27),
            M(  -40,   47), M(  -20,   54), M(  -15,   59), M(  -12,   69),
            M(    4,   64), M(  -24,   58), M(  -19,   50), M(  -45,   46),
            M(  -25,   48), M(    0,   58), M(    6,   63), M(    8,   56),
            M(   -9,   57), M(   -4,   56), M(  -31,   60), M(  -38,   42),
            M(  -61,   49), M(  -36,   56), M(  -18,   50), M(  -37,   57),
            M(  -51,   60), M(  -34,   59), M(  -38,   60), M(  -84,   60),
            M(  -76,   54), M(  -66,   51), M( -170,   69), M( -124,   68),
            M( -148,   79), M( -155,   73), M(  -95,   71), M(  -87,   67),
        },
        {
            
            M(   13,    0), M(  -15,   17), M(    0,   18), M(   -5,   24),
            M(   -1,   24), M(   -4,   19), M(    2,   20), M(    9,    1),
            M(   17,   -7), M(   43,    1), M(   22,   12), M(   15,   19),
            M(    2,   22), M(    4,   15), M(    3,   -1), M(   12,   -8),
            M(   18,    9), M(   34,   21), M(   38,   25), M(   19,   26),
            M(   16,   31), M(    7,   24), M(   12,   14), M(    6,    7),
            M(    9,   11), M(   24,   26), M(   24,   33), M(   47,   35),
            M(   27,   36), M(   20,   30), M(   20,   14), M(   18,    3),
            M(    5,   28), M(   27,   30), M(   29,   41), M(   45,   41),
            M(   63,   34), M(   33,   23), M(   41,   23), M(   17,    8),
            M(    2,   27), M(   33,   35), M(   36,   38), M(   43,   36),
            M(   71,   24), M(   81,   22), M(   59,   15), M(   25,   10),
            M(  -33,   36), M(  -11,   46), M(   14,   40), M(  -19,   40),
            M(    6,   32), M(   47,   17), M(   20,   22), M(  -30,   13),
            M(  -31,   48), M(  -76,   46), M(  -78,   43), M(  -85,   49),
            M( -120,   44), M( -102,   37), M(   27,   18), M(   -8,   34),
        },
    },
    {
        {
            
            M(  -73,   95), M(  -45,  105), M(  -43,  112), M(  -45,  107),
            M(  -46,  108), M(  -54,  116), M(  -60,  113), M(  -62,  107),
            M( -132,  115), M(  -53,   99), M(  -45,   99), M(  -54,  107),
            M(  -54,  110), M(  -64,  117), M(  -68,  109), M( -100,  116),
            M(  -76,  103), M(  -41,  119), M(  -56,  119), M(  -58,  118),
            M(  -59,  120), M(  -73,  127), M(  -66,  128), M(  -79,  117),
            M(  -67,  127), M(  -41,  135), M(  -57,  141), M(  -59,  138),
            M(  -58,  141), M(  -70,  149), M(  -74,  149), M(  -73,  134),
            M(  -33,  139), M(  -13,  133), M(  -13,  138), M(  -16,  137),
            M(  -10,  140), M(  -37,  150), M(  -47,  147), M(  -59,  148),
            M(  -16,  142), M(   43,  120), M(   33,  136), M(   22,  127),
            M(    2,  138), M(  -25,  152), M(  -16,  142), M(  -62,  157),
            M(  -34,  153), M(  -35,  153), M(   17,  137), M(  -27,  168),
            M(  -28,  170), M(  -42,  171), M(  -66,  174), M(  -61,  167),
            M(    3,  161), M(  -17,  167), M(   -3,  166), M(  -53,  171),
            M(  -64,  178), M(  -73,  184), M(  -46,  175), M(  -44,  170),
        },
        {
            
            M(  -42,   80), M(  -14,   78), M(   -5,   80), M(   -3,   75),
            M(   -2,   69), M(    2,   73), M(    5,   69), M(  -18,   70),
            M(  -90,   86), M(  -36,   72), M(  -18,   76), M(  -20,   79),
            M(  -14,   75), M(  -10,   71), M(   -3,   64), M(  -49,   78),
            M(  -45,   77), M(   -7,   82), M(  -29,   90), M(  -22,   88),
            M(  -24,   84), M(  -20,   84), M(   -8,   85), M(  -24,   76),
            M(  -25,   96), M(    4,   98), M(  -19,  111), M(  -17,  106),
            M(  -15,   97), M(  -15,  102), M(  -10,  100), M(  -20,   91),
            M(    6,  106), M(   17,  103), M(   30,  102), M(   38,  104),
            M(   34,   94), M(   23,  100), M(   28,   92), M(   21,   92),
            M(   15,  109), M(   65,   88), M(   47,  107), M(   62,   94),
            M(   70,   89), M(   64,   91), M(   82,   79), M(   28,   98),
            M(   14,  116), M(   21,  117), M(   29,  118), M(   21,  130),
            M(   29,  118), M(   62,   93), M(   12,  109), M(   23,  104),
            M(   64,  104), M(   33,  121), M(   15,  131), M(   -5,  135),
            M(    7,  125), M(   72,  104), M(   53,  108), M(   28,  119),
        },
    },
    {
        {
            
            M(  -64,   89), M(  -54,   71), M(  -47,   87), M(  -39,  100),
            M(  -37,  107), M(  -45,   98), M(  -50,  106), M(  -50,  116),
            M(  -64,   91), M(  -38,   56), M(  -31,   54), M(  -40,  107),
            M(  -42,  114), M(  -40,   87), M(  -47,  102), M(  -56,  112),
            M(  -36,  105), M(  -32,  118), M(  -45,  131), M(  -47,  113),
            M(  -51,  111), M(  -51,  122), M(  -46,  114), M(  -58,  115),
            M(  -36,  147), M(  -39,  145), M(  -50,  146), M(  -63,  156),
            M(  -67,  153), M(  -62,  124), M(  -57,  137), M(  -59,  130),
            M(  -50,  161), M(  -41,  188), M(  -61,  187), M(  -72,  176),
            M(  -80,  174), M(  -74,  133), M(  -72,  160), M(  -71,  150),
            M(  -97,  190), M(  -50,  203), M(  -63,  190), M(  -55,  169),
            M(  -70,  145), M(  -77,  142), M(  -78,  149), M(  -83,  169),
            M(  -65,  207), M( -125,  253), M(   -2,  149), M( -130,  222),
            M( -118,  199), M(  -87,  168), M( -127,  209), M(  -89,  187),
            M(  -37,  157), M(  -79,  206), M(  -43,  165), M(  -98,  177),
            M(  -81,  165), M(  -88,  187), M(  -84,  195), M( -102,  207),
        },
        {
            
            M(  -25,   59), M(   -6,   35), M(    7,   31), M(    6,   70),
            M(    9,   62), M(    3,   51), M(   -0,   84), M(    5,   64),
            M(  -35,   60), M(   -5,   56), M(   26,   23), M(   18,   75),
            M(   10,   70), M(   19,   42), M(   21,   51), M(   10,   71),
            M(  -17,   83), M(    7,   87), M(    4,  102), M(    4,   87),
            M(    3,   83), M(   10,   80), M(   18,   70), M(   18,   72),
            M(   -9,  102), M(   -1,  116), M(  -17,  125), M(   -7,  139),
            M(   -9,  124), M(    4,  105), M(   12,   97), M(   21,   77),
            M(   -4,  115), M(  -20,  145), M(  -24,  122), M(  -21,  150),
            M(   -2,  140), M(    4,  126), M(   27,  119), M(   10,   96),
            M(  -16,  141), M(   -1,  106), M(    1,  114), M(  -12,  127),
            M(   12,  133), M(   -7,  156), M(   24,  106), M(  -17,  111),
            M(  -16,  131), M(  -57,  176), M(  -19,  141), M(  -62,  178),
            M(  -81,  197), M(   40,  111), M(  -44,  157), M(  -11,  113),
            M(   -6,  133), M(   -5,  145), M(  -16,  139), M(  -35,  149),
            M(  -44,  149), M(   98,   59), M(  -27,  133), M(   -1,  102),
        },
    },
    {
        {
            
            M(  -11, -129), M(   -6,  -20), M(  -14,   -1), M(    5,   19),
            M(   47,   -7), M(   -7,   -2), M(    2,  -13), M(  -40, -132),
            M( -115,  -21), M(   18,   20), M(   75,    4), M(   93,   -4),
            M(   72,   -5), M(   87,    1), M(  -25,   31), M(  -65,  -33),
            M(  -53,    4), M(   94,   12), M(  138,    1), M(  118,   -2),
            M(  120,   -3), M(  138,    4), M(   85,   13), M(  -48,   -5),
            M(  -70,   11), M(   77,   -3), M(   93,    9), M(   47,   17),
            M(   64,   17), M(   92,   13), M(   50,    3), M(  -99,    8),
            M(  -65,  -12), M(   60,   -2), M(   67,   14), M(   13,   28),
            M(   39,   30), M(   39,   22), M(   62,    6), M(  -69,   -7),
            M(  -51,   -4), M(    4,    7), M(   10,   16), M(  -10,   29),
            M(    4,   31), M(    3,   26), M(    8,   13), M(  -41,    4),
            M(   10,  -13), M(    5,    4), M(  -19,   17), M(  -69,   27),
            M(  -43,   25), M(  -42,   29), M(    4,    9), M(   15,  -11),
            M(    8,  -69), M(   15,  -29), M(  -25,   -2), M(  -48,  -19),
            M(  -45,  -25), M(  -56,    4), M(   21,  -16), M(   31,  -68),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}