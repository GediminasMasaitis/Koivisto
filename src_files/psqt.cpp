//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  226, -120), M(   17, -102), M(  -66,   -4), M( -182,   81), M(  -59,  -18),
        M(  -96,   10), M(  -50,  -57), M(   36, -100), M(   -1,  -52), M(  -79,  -25),
        M(  -71,    1), M(  -45,    7), M(  -37,   30), M(  -19,   35), M(  -10,   66),
        M(   16, -105), M(  -31,  -48), M(  -20,  -26), M(  -57,   -4), M(  -26,   -3),
        M(  -46,  -10), M(  -27,  -21), M(  -52,   -9), M(  -50,  -11), M(  -29,  -10),
        M(  -21,  -32), M(  -28,   -3), M(  -29,    2), M(   -1,    2), M(   11,   -4),
        M( -137,  -31), M(  -12,  -19), M(  -23,    5), M(  -28,  -14), M(  -51,    8),
        M(  -31,  -10), M(  -17,  -16), M(  -15,  -14), M(  -13,  -27), M(  -32,  -15),
        M(  -20,  -15), M(  -16,   -5), M(  -14,   -9), M(  -14,   -4), M(   -6,  -21),
        M(  -50,    6), M(   16,  -13), M(  -17,    7), M(   -9,    3), M(  -15,    9),
        M(   -9,   -2), M(    8,   -1), M(   16,  -10), M(   -5,  -12), M(  -13,   -5),
        M(  -18,   -1), M(  -15,   -2), M(  -15,    2), M(  -10,   -5), M(    3,  -20),
        M(  -42,    8), M(   -0,   -3), M(  -28,    9), M(  -10,    3), M(   -3,    7),
        M(    2,   10), M(   29,    4), M(   38,    0), M(   11,    5), M(    9,    3),
        M(   -5,   -2), M(  -10,    4), M(  -14,    6), M(  -16,   -1), M(    0,  -18),
        M(  -89,   17), M(   -3,   -7), M(  -23,    5), M(   -7,    0), M(   -3,   10),
        M(   -4,   16), M(   -7,  -16), M(    8,   -9), M(   -7,  -10), M(    4,    8),
        M(   -4,    9), M(  -13,    8), M(  -14,    5), M(  -14,    2), M(    2,  -10),
        M(  -85,   13), M(   13,   -5), M(  -16,    2), M(   -5,    6), M(    8,   11),
        M(   -1,   19), M(   -2,   -6), M(    0,    0), M(   13,   -6), M(    5,   17),
        M(    7,    7), M(  -12,   10), M(  -10,    4), M(  -11,   -0), M(   14,  -12),
        M(  -86,   46), M(   23,   -1), M(  -10,    5), M(  -11,    3), M(    5,   13),
        M(  -16,   20), M(  -51,    7), M(  -38,   29), M(  -54,   -2), M(   -5,   19),
        M(  -31,   16), M(  -17,   10), M(  -40,   19), M(   -5,    4), M(  -16,   20),
        M(  -75,   24), M(   91,  -27), M(  -69,   15), M(   -7,   -2), M(  -21,   13),
        M( -138,   35), M(  -69,   30), M(  -32,   16), M(  -91,   26), M(  -61,   10),
        M(  -39,   24), M(  -41,   19), M(  -39,   22), M(  -19,   19), M(  -56,   25),
        M(  -37,   11), M( -184,   43), M(  -92,   38), M(  -82,    5), M(  -65,   21),
        M( -190,   42), M(  -28,   16), M(  -98,   44), M( -175,   31), M( -121,   19),
        M( -230,   59), M(  -64,    9), M( -176,   30), M(    5,    6), M( -223,   32),
        M( -508,   63), M( -326,   47), M(  224,  -12), M( -148,   26), M( -221,   48),
        M( -207,   35), M( -149,   43), M( -140,   40), M( -132,   29), M(  -97,   33),
        M( -165,   50), M( -232,   27), M(   34,   13), M(  215,  -39), M( -438,   76),
        M( -582,   45), M( -505,   59), M(   60,   30), M( -230,   98), M( -222,   68),
        M( -106,   19), M(   -7,   56), M(  -12,   25), M( -128,   49), M(  -32,   69),
        M(  104,   22), M( -194,   83), M( -210,   63), M(  -80,  125), M( -841,  138),
        M( -106,  308), M(-3397,  281), M( 1405,   34), M(-1098,  105), M( 1624, -100),
        M( -109,  167), M( -768,  139), M( -225,  273), M( -555,  -20), M( -995,  -10),
        M( -477,   62), M(  -20,   48), M(  809,  -90), M(   78,  -29), M(-1730,  821),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   70,   33), M( -507,  200), M( -288,  158), M( -298,  159), M( -254,  221),
        M( -103,  202), M(  179,  209), M( -153,  331), M(  103,  230), M(  -66,  210),
        M(   73,  153), M( -693,  241), M( -568,  156), M( -275,  110), M( -233,   72),
        M( -167,  138), M( -426,  122), M( -334,  110), M( -361,  129), M( -243,  144),
        M( -240,  201), M( -218,  206), M( -188,  182), M(  -96,  160), M( -156,  165),
        M( -168,  129), M( -335,  104), M( -488,  113), M( -627,  162), M( -268,   71),
        M( -244,   97), M( -245,   84), M( -244,   64), M( -205,   53), M( -104,   71),
        M(  -76,  103), M( -126,  131), M(  -72,  108), M( -115,  111), M(  -98,  102),
        M( -102,   68), M( -163,   33), M( -222,   44), M( -318,   78), M( -391,   74),
        M( -246,   54), M( -161,   45), M(  -88,   23), M( -111,   25), M(  -63,   36),
        M(  -76,   56), M(  -91,   67), M(  -87,   53), M(    1,   51), M(  -95,   56),
        M(  -86,   34), M( -100,   10), M( -102,   27), M( -148,   30), M( -234,   67),
        M( -130,   45), M(  -64,   23), M(  -81,   24), M(  -49,    3), M(  -22,   19),
        M(  -71,   21), M(  -77,   25), M( -107,   22), M(  -93,   26), M(  -61,   15),
        M(  -73,   32), M(  -65,    6), M(  -65,   14), M(  -52,   24), M(  -83,   34),
        M(  -52,   29), M(   11,    8), M(  -16,    5), M(    7,   -4), M(   31,   -0),
        M(  -47,   13), M(  -87,    8), M( -117,    7), M( -121,   12), M(  -61,   14),
        M(  -13,   10), M(  -22,    7), M(  -12,   11), M(  -31,   26), M(  -33,   28),
        M(    9,   28), M(    6,    7), M(   32,   -1), M(   15,   -5), M(   18,    1),
        M(    0,    3), M(   -2,  -41), M(    0,    0), M(  -31,  -43), M(  -32,   11),
        M(  -10,    8), M(   -2,    8), M(   -9,   16), M(   -6,   20), M(  -16,   37),
        M(   -5,   24), M(   20,   10), M(   18,    5), M(   22,   -0), M(   25,    3),
        M(   26,    5), M( -100,  -11), M( -104,  -17), M(  -92,  -14), M(    7,   10),
        M(   10,   12), M(    2,   14), M(    1,   19), M(   -7,   26), M(   -7,   32),
        M(   -0,   19), M(    5,   18), M(   10,   10), M(   18,    7), M(   23,    4),
        M(   20,   11), M(   39,    5), M(   41,   -2), M(   45,    7), M(   16,   12),
        M(   10,   13), M(    3,   20), M(    0,   22), M(   -0,   28), M(    1,   25),
        M(  -11,   28), M(    7,   17), M(    4,   17), M(   18,   10), M(   28,    5),
        M(   25,    7), M(   21,   11), M(    8,    6), M(   26,   11), M(   22,   10),
        M(    8,   13), M(    8,   21), M(    5,   25), M(    6,   24), M(    1,   27),
        M(   -7,   23), M(    2,   24), M(    7,   19), M(    4,   19), M(   12,   13),
        M(   14,    7), M(    9,    9), M(    5,    2), M(   13,    8), M(   17,    8),
        M(   12,   14), M(    8,   20), M(   11,   23), M(   14,   24), M(    8,   24),
        M(  -11,   24), M(    9,   24), M(   15,   19), M(    9,   21), M(    3,   18),
        M(    8,   13), M(   -4,   13), M(   -8,   11), M(    1,   19), M(    4,   17),
        M(    8,   15), M(    8,   24), M(    8,   25), M(   14,   24), M(    9,   23),
        M(    1,   22), M(   16,   15), M(   14,   17), M(   -1,   24), M(   -2,   23),
        M(   -4,   19), M(   -6,    8), M(  -12,   11), M(   -7,   25), M(   -2,   17),
        M(    3,   18), M(    2,   27), M(    7,   27), M(   14,   24), M(   11,   22),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    2,    4), M(   23,   20), M(   12,   42), M(   -6,   46),
            M(   -5,   31), M(   -5,   26), M(   -6,   26), M(   -8,   37),
            M(   -6,   18), M(   -1,   24), M(   -5,   41), M(   -6,   38),
            M(   -2,   24), M(   -6,   26), M(  -10,   27), M(   -7,   34),
            M(   -7,   28), M(    3,   37), M(    7,   35), M(   18,   28),
            M(   17,   22), M(   11,   23), M(   -1,   39), M(   -8,   48),
            M(   14,   43), M(   22,   52), M(   42,   40), M(   47,   30),
            M(   40,   21), M(   21,   44), M(   15,   58), M(    7,   71),
            M(   21,   69), M(   84,   59), M(  120,   41), M(   74,   34),
            M(   57,   48), M(   56,   79), M(   43,  104), M(   -1,  121),
            M(   69,  147), M(   74,  143), M(  211,   95), M(  237,  104),
            M(  203,  142), M(  187,  176), M(  159,  208), M(  161,  205),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   16,   17), M(   42,   11), M(   22,   26), M(    0,   37),
            M(    1,   40), M(    0,   42), M(   -6,   47), M(   -7,   48),
            M(   15,   22), M(   21,   21), M(   -1,   35), M(   -4,   35),
            M(    3,   35), M(    3,   37), M(  -14,   42), M(  -15,   46),
            M(   28,   45), M(   23,   49), M(   17,   39), M(   17,   35),
            M(   25,   28), M(   20,   34), M(   -2,   44), M(  -25,   49),
            M(   45,   90), M(   44,   82), M(   35,   68), M(   44,   46),
            M(   64,   26), M(   59,   29), M(   11,   51), M(   -9,   50),
            M(   38,  171), M(   84,  161), M(   71,  133), M(   68,   79),
            M(   97,   25), M(  108,   18), M(   80,   28), M(    6,   55),
            M(  232,  255), M(  209,  269), M(  176,  245), M(  223,  177),
            M(  253,   98), M(  269,   47), M(  135,   85), M(   84,   96),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -115,   30), M(  -82,   56), M(  -73,   59), M(  -73,   78),
            M(  -76,   80), M(  -82,   52), M(  -85,   37), M( -123,    7),
            M(  -81,   69), M(  -88,   77), M(  -71,   63), M(  -72,   82),
            M(  -69,   82), M(  -87,   62), M( -102,   67), M( -108,   48),
            M(  -79,   58), M(  -66,   83), M(  -65,   86), M(  -61,   98),
            M(  -66,   98), M(  -78,   74), M(  -82,   59), M(  -98,   27),
            M(  -67,   86), M(  -42,   96), M(  -60,  114), M(  -56,  117),
            M(  -65,  114), M(  -71,  105), M(  -83,   85), M(  -90,   58),
            M(  -66,   84), M(  -75,   97), M(  -50,  118), M(  -71,  126),
            M(  -65,  130), M(  -61,  109), M(  -76,   78), M(  -85,   71),
            M(  -92,   74), M(  -68,   84), M(  -14,  103), M(  -19,  101),
            M(  -46,  110), M(  -56,  110), M(  -81,   78), M( -111,   60),
            M(  -66,   66), M( -117,   79), M(  -15,   62), M(  -28,   94),
            M(  -25,   97), M(  -44,   72), M(  -97,   75), M(  -95,   55),
            M( -207,    3), M( -174,   87), M( -217,  124), M(  -85,   84),
            M( -121,   89), M( -229,  118), M( -214,   88), M( -292,   23),
        },
        {
            
            M(  -68,  -25), M(  -50,   29), M(  -22,   19), M(  -14,   42),
            M(  -19,   35), M(  -30,   17), M(  -36,   17), M(  -77,    8),
            M(  -35,   18), M(  -41,   38), M(  -17,   21), M(  -13,   39),
            M(   -7,   41), M(  -21,   30), M(  -56,   40), M(  -57,   17),
            M(  -36,   12), M(  -19,   33), M(   -8,   41), M(   -4,   58),
            M(    4,   58), M(  -13,   38), M(  -12,   21), M(  -41,    4),
            M(  -16,   37), M(    7,   46), M(    6,   66), M(   10,   68),
            M(   21,   65), M(   11,   57), M(   18,   38), M(   -8,   23),
            M(  -19,   42), M(    1,   41), M(   25,   61), M(   27,   75),
            M(   12,   76), M(   18,   64), M(   -3,   37), M(   -1,   26),
            M(  -58,   31), M(   12,   29), M(   27,   60), M(   43,   58),
            M(   52,   54), M(   59,   47), M(   11,   18), M(  -12,    8),
            M(  -29,   10), M(  -24,   32), M(   45,   16), M(   70,   43),
            M(   45,   37), M(   27,   20), M(  -38,   22), M(   -4,    3),
            M( -220,  -24), M( -163,   46), M( -142,   58), M(  -58,   45),
            M(  -42,   28), M( -140,   49), M(  -17,    7), M( -183,  -38),
        },
    },
    {
        {
            
            M(  -54,   15), M(  -68,   32), M(  -57,   35), M(  -58,   47),
            M(  -53,   44), M(  -51,   48), M(  -49,   44), M(  -41,   18),
            M(  -44,   -1), M(  -32,   19), M(  -43,   35), M(  -50,   46),
            M(  -51,   51), M(  -48,   39), M(  -42,   20), M(  -49,   18),
            M(  -34,   42), M(  -39,   51), M(  -42,   59), M(  -44,   63),
            M(  -47,   60), M(  -45,   55), M(  -42,   44), M(  -54,   34),
            M(  -44,   37), M(  -44,   53), M(  -47,   66), M(  -36,   67),
            M(  -36,   69), M(  -46,   63), M(  -49,   48), M(  -62,   33),
            M(  -71,   52), M(  -36,   57), M(  -39,   64), M(  -33,   72),
            M(  -23,   69), M(  -47,   62), M(  -38,   55), M(  -69,   52),
            M(  -66,   56), M(  -44,   67), M(  -33,   71), M(  -29,   62),
            M(  -35,   63), M(  -22,   62), M(  -51,   66), M(  -61,   47),
            M( -103,   59), M(  -70,   62), M(  -51,   58), M(  -68,   64),
            M(  -72,   66), M(  -56,   66), M(  -60,   67), M( -109,   66),
            M( -104,   59), M( -108,   59), M( -221,   80), M( -164,   76),
            M( -176,   85), M( -185,   79), M( -122,   77), M( -117,   74),
        },
        {
            
            M(   25,  -15), M(   -5,    4), M(   15,    4), M(    6,   12),
            M(    7,   12), M(    2,    8), M(    4,   12), M(    8,   -8),
            M(   28,  -22), M(   61,  -14), M(   35,   -2), M(   28,    7),
            M(   12,   11), M(   12,    5), M(    7,  -10), M(   14,  -17),
            M(   29,   -3), M(   45,    9), M(   48,   14), M(   29,   15),
            M(   28,   22), M(   16,   16), M(   18,    6), M(    8,   -1),
            M(   19,   -0), M(   33,   15), M(   30,   23), M(   55,   25),
            M(   35,   27), M(   31,   20), M(   27,    4), M(   20,   -5),
            M(   11,   20), M(   37,   20), M(   36,   31), M(   47,   33),
            M(   68,   25), M(   35,   14), M(   46,   13), M(    9,    2),
            M(    6,   18), M(   39,   28), M(   46,   28), M(   46,   28),
            M(   62,   17), M(   69,   17), M(   43,    9), M(    9,    5),
            M(  -34,   29), M(   -6,   39), M(   17,   33), M(  -15,   31),
            M(    2,   24), M(   41,   10), M(   12,   15), M(  -42,    8),
            M(  -35,   41), M(  -78,   38), M(  -81,   35), M(  -90,   41),
            M( -144,   39), M( -125,   33), M(   27,    9), M(  -16,   27),
        },
    },
    {
        {
            
            M(  -96,   78), M(  -70,   87), M(  -69,   94), M(  -70,   91),
            M(  -70,   93), M(  -79,  103), M(  -84,   99), M(  -88,   94),
            M( -159,   96), M(  -75,   79), M(  -71,   79), M(  -81,   91),
            M(  -81,   95), M(  -91,  103), M(  -94,   96), M( -127,  104),
            M( -100,   85), M(  -65,  101), M(  -81,   99), M(  -84,  101),
            M(  -84,  105), M(  -98,  114), M(  -91,  116), M( -105,  104),
            M(  -92,  110), M(  -64,  115), M(  -83,  119), M(  -83,  122),
            M(  -82,  127), M(  -95,  136), M(  -98,  137), M(  -98,  121),
            M(  -58,  121), M(  -37,  113), M(  -37,  115), M(  -38,  121),
            M(  -32,  126), M(  -59,  137), M(  -70,  133), M(  -82,  135),
            M(  -38,  124), M(   21,  101), M(   14,  111), M(    1,  110),
            M(  -18,  121), M(  -46,  136), M(  -36,  125), M(  -83,  141),
            M(  -52,  135), M(  -57,  137), M(  -11,  117), M(  -55,  150),
            M(  -53,  152), M(  -67,  153), M(  -91,  156), M(  -83,  149),
            M(   -9,  144), M(  -22,  148), M(  -50,  153), M(  -85,  157),
            M(  -96,  163), M( -106,  171), M(  -75,  160), M(  -72,  155),
        },
        {
            
            M(  -34,   48), M(   -9,   45), M(    2,   45), M(    5,   41),
            M(    8,   33), M(   13,   37), M(   16,   34), M(   -8,   36),
            M(  -91,   56), M(  -30,   39), M(  -15,   42), M(  -15,   45),
            M(   -6,   40), M(    2,   33), M(   10,   26), M(  -43,   44),
            M(  -38,   43), M(   -0,   49), M(  -23,   55), M(  -14,   51),
            M(  -14,   46), M(   -7,   44), M(    4,   47), M(  -15,   40),
            M(  -18,   64), M(   11,   65), M(  -12,   75), M(   -6,   69),
            M(   -2,   58), M(   -2,   60), M(    2,   62), M(  -10,   54),
            M(   14,   74), M(   26,   68), M(   42,   65), M(   53,   66),
            M(   50,   56), M(   37,   60), M(   42,   52), M(   31,   56),
            M(   26,   73), M(   78,   51), M(   61,   69), M(   79,   56),
            M(   89,   50), M(   79,   51), M(  100,   41), M(   43,   60),
            M(   25,   79), M(   31,   79), M(   40,   80), M(   33,   92),
            M(   40,   81), M(   79,   53), M(   33,   70), M(   41,   66),
            M(   70,   71), M(   38,   88), M(   19,   99), M(    6,   98),
            M(   19,   89), M(  101,   63), M(   88,   68), M(   53,   82),
        },
    },
    {
        {
            
            M( -159,  147), M( -150,  129), M( -141,  143), M( -133,  156),
            M( -132,  169), M( -140,  159), M( -146,  167), M( -145,  181),
            M( -155,  143), M( -129,  111), M( -121,  105), M( -130,  158),
            M( -133,  167), M( -130,  136), M( -138,  156), M( -148,  169),
            M( -124,  152), M( -122,  168), M( -134,  175), M( -137,  153),
            M( -141,  154), M( -140,  167), M( -134,  163), M( -149,  170),
            M( -122,  190), M( -123,  184), M( -134,  180), M( -152,  190),
            M( -153,  189), M( -149,  161), M( -145,  182), M( -150,  183),
            M( -127,  197), M( -119,  222), M( -137,  212), M( -156,  203),
            M( -165,  201), M( -163,  167), M( -162,  206), M( -164,  208),
            M( -141,  217), M( -100,  215), M( -106,  194), M( -131,  191),
            M( -155,  173), M( -166,  180), M( -169,  197), M( -177,  227),
            M( -133,  243), M( -175,  288), M(  -68,  163), M( -195,  237),
            M( -206,  230), M( -172,  202), M( -217,  252), M( -179,  239),
            M(  -81,  193), M( -103,  219), M(  -97,  178), M( -144,  189),
            M( -143,  192), M( -160,  218), M( -162,  233), M( -189,  260),
        },
        {
            
            M(   56,   -1), M(   76,  -32), M(   89,  -35), M(   89,    8),
            M(   91,    5), M(   85,   -3), M(   81,   32), M(   87,    8),
            M(   49,   -4), M(   80,   -8), M(  111,  -48), M(  105,    9),
            M(   97,    4), M(  107,  -21), M(  109,  -12), M(   99,    4),
            M(   69,   19), M(   95,   18), M(   91,   28), M(   90,   12),
            M(   91,   10), M(  100,   10), M(  107,    3), M(  106,    2),
            M(   76,   38), M(   89,   44), M(   74,   46), M(   83,   62),
            M(   80,   46), M(   98,   27), M(  104,   20), M(  114,    1),
            M(   78,   56), M(   67,   75), M(   67,   41), M(   75,   66),
            M(   92,   58), M(  104,   44), M(  126,   41), M(  110,   17),
            M(   66,   82), M(   85,   36), M(   91,   40), M(   85,   43),
            M(  121,   45), M(  129,   51), M(  158,    6), M(  116,   16),
            M(   70,   71), M(   30,  107), M(   78,   61), M(   35,   96),
            M(   35,  101), M(  148,   20), M(   89,   70), M(   96,   34),
            M(   90,   64), M(   98,   68), M(  105,   49), M(   94,   58),
            M(   89,   51), M(  244,  -44), M(  141,   29), M(  129,   21),
        },
    },
    {
        {
            
            M(  224, -212), M(  241,  -85), M(  139,  -57), M(  232,  -42),
            M(  207,  -70), M(  129,  -69), M(  111,  -65), M(  213, -219),
            M(  151,  -87), M(  192,  -30), M(  206,  -42), M(  251,  -54),
            M(  240,  -56), M(  246,  -47), M(   80,  -16), M(  170, -104),
            M(  151,  -51), M(  233,  -29), M(  259,  -36), M(  259,  -42),
            M(  273,  -46), M(  287,  -38), M(  194,  -23), M(  130,  -55),
            M(   73,  -38), M(  186,  -38), M(  198,  -25), M(  152,  -15),
            M(  171,  -18), M(  209,  -25), M(  150,  -32), M(   45,  -37),
            M(   37,  -51), M(  101,  -24), M(  138,  -13), M(   69,    3),
            M(  100,    2), M(  113,   -7), M(  107,  -18), M(    4,  -37),
            M(   22,  -33), M(   18,   -6), M(   43,   -3), M(   23,   11),
            M(   37,   14), M(   42,    6), M(   21,    2), M(   -6,  -12),
            M(   67,  -25), M(   10,    0), M(    0,    8), M(  -61,   21),
            M(  -25,   18), M(  -23,   24), M(   14,    6), M(   35,  -12),
            M(   76,  -75), M(   44,  -24), M(   19,   -5), M(  -15,  -17),
            M(   -4,  -27), M(  -17,    4), M(   50,  -16), M(   61,  -68),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}