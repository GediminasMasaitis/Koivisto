//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore4i piece_values[6] = {
    L(   97,  115,   97,  115),
    L(  370,  410,  370,  410),
    L(  390,  364,  390,  364),
    L(  466,  712,  466,  712),
    L( 1182, 1329, 1182, 1329),
};


// indexed by piece, relation to king
EvalScore4i piece_our_king_square_table[5][15*15]{
    {
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L( -45,  30, -45,  30), L( -45,  24, -45,  24), L( -42,  27, -42,  27), L( -54,  27, -54,  27), L( -15,  -3, -15,  -3),
        L( -12, -24, -12, -24), L( -78,   6, -78,   6), L( -54, -36, -54, -36), L(  -9, -21,  -9, -21), L(  -3, -21,  -3, -21),
        L( -18,   0, -18,   0), L( -21,   9, -21,   9), L( -12,  27, -12,  27), L( -21,  42, -21,  42), L( -69,  81, -69,  81),
        L( -27,  18, -27,  18), L( -12,  24, -12,  24), L(  -6,  12,  -6,  12), L(   0,   3,   0,   3), L(  -9,  -6,  -9,  -6),
        L(   0, -21,   0, -21), L(   3,  -9,   3,  -9), L( -15,   0, -15,   0), L(   6, -30,   6, -30), L(  -6, -21,  -6, -21),
        L(   0, -15,   0, -15), L(  -3,   9,  -3,   9), L(  -6,  18,  -6,  18), L(  -3,  24,  -3,  24), L( -12,  21, -12,  21),
        L(   0,  -9,   0,  -9), L(  -3,  12,  -3,  12), L(  -6,   9,  -6,   9), L(   0,   0,   0,   0), L(   0,  -9,   0,  -9),
        L(   3, -12,   3, -12), L(   3, -15,   3, -15), L(   0,  -6,   0,  -6), L(   3, -21,   3, -21), L(  -6, -12,  -6, -12),
        L(   0, -12,   0, -12), L(  -3,   3,  -3,   3), L(   0,   6,   0,   6), L(   0,   6,   0,   6), L(  -6,   3,  -6,   3),
        L(  -3,   0,  -3,   0), L(   0,   0,   0,   0), L(  -3,   3,  -3,   3), L(  -3,   0,  -3,   0), L(  -3,   0,  -3,   0),
        L(   0,  -3,   0,  -3), L(   3,   0,   3,   0), L(   9,  -3,   9,  -3), L(   3,  -9,   3,  -9), L(  -3,  -6,  -3,  -6),
        L(  -3,   0,  -3,   0), L(  -3,   0,  -3,   0), L(  -3,   0,  -3,   0), L(   0,  -3,   0,  -3), L(   3,  -9,   3,  -9),
        L(   0,  -9,   0,  -9), L(   0,   0,   0,   0), L(  -3,   0,  -3,   0), L(   0,   3,   0,   3), L(  -6,   3,  -6,   3),
        L(  -6,   6,  -6,   6), L(   6,   6,   6,   6), L(  15,   6,  15,   6), L(  -3,   9,  -3,   9), L(  -3,   6,  -3,   6),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(  -3,   0,  -3,   0), L(   0,   0,   0,   0), L(   6, -12,   6, -12),
        L(  -3,  -3,  -3,  -3), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   3,   0,   3,   0), L(   6,   0,   6,   0),
        L(   0,   3,   0,   3), L(  -6,  -9,  -6,  -9), L(   3,  -3,   3,  -3), L(  -9,   0,  -9,   0), L(   0,   3,   0,   3),
        L(   3,   3,   3,   3), L(  -3,   0,  -3,   0), L(  -3,   0,  -3,   0), L(   0,  -3,   0,  -3), L(   3,  -9,   3,  -9),
        L(   3,  -9,   3,  -9), L(  -3,   0,  -3,   0), L(   0,   0,   0,   0), L(  -3,   3,  -3,   3), L(   0,   3,   0,   3),
        L(   0,   6,   0,   6), L(  -3,  -3,  -3,  -3), L(   0,   0,   0,   0), L(   3,   0,   3,   0), L(  -6,   9,  -6,   9),
        L(  -3,   3,  -3,   3), L(  -9,   6,  -9,   6), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   6, -12,   6, -12),
        L(  -9,  -3,  -9,  -3), L(   9,  -3,   9,  -3), L(  -3,   3,  -3,   3), L(   3,   0,   3,   0), L( -15,   9, -15,   9),
        L( -18,   9, -18,   9), L( -36,   3, -36,   3), L( -30,  27, -30,  27), L( -36,   0, -36,   0), L(  -9,   9,  -9,   9),
        L( -12,   9, -12,   9), L(   0,   3,   0,   3), L(   9,   0,   9,   0), L(  15,  -6,  15,  -6), L(  -3,  -9,  -3,  -9),
        L(   6,   0,   6,   0), L(   9,  -9,   9,  -9), L( -15,   6, -15,   6), L( -15,   3, -15,   3), L( -33,  12, -33,  12),
        L( -39,   6, -39,   6), L( -36,   6, -36,   6), L(   0,   0,   0,   0), L( -36,   6, -36,   6), L( -15,   3, -15,   3),
        L( -39,  15, -39,  15), L(  -9,   6,  -9,   6), L(  -9,   6,  -9,   6), L(   6,  -3,   6,  -3), L(  -6,  -6,  -6,  -6),
        L(  -6,  -3,  -6,  -3), L( -30,   6, -30,   6), L(  -6,   3,  -6,   3), L( -30,   9, -30,   9), L( -42,  12, -42,  12),
        L( -42,   9, -42,   9), L( -24,   3, -24,   3), L( -12,   6, -12,   6), L( -27,   3, -27,   3), L( -18,   3, -18,   3),
        L( -42,  15, -42,  15), L(  -9,   9,  -9,   9), L(  -9,   3,  -9,   3), L(  -3,   0,  -3,   0), L(   3,  -9,   3,  -9),
        L( -78,   0, -78,   0), L(  -3,  -3,  -3,  -3), L(  15,   6,  15,   6), L(  -9,   3,  -9,   3), L( -39,  15, -39,  15),
        L( -69,  12, -69,  12), L( -42,  12, -42,  12), L( -30,  12, -30,  12), L( -42,  12, -42,  12), L(  -9,   0,  -9,   0),
        L(  -9,  15,  -9,  15), L( -18,   3, -18,   3), L( -27,   3, -27,   3), L(  30, -12,  30, -12), L( -51,   0, -51,   0),
        L(   3, -15,   3, -15), L(  27,   0,  27,   0), L( -15,   9, -15,   9), L( -27,  12, -27,  12), L( -57,   6, -57,   6),
        L( -72,  21, -72,  21), L( -15,   9, -15,   9), L( -21,  15, -21,  15), L( -78,  15, -78,  15), L( -30,  15, -30,  15),
        L(  30,   3,  30,   3), L( -21,   0, -21,   0), L( -27,   0, -27,   0), L( -12,   3, -12,   3), L(  21, -33,  21, -33),
        L(-102, -24,-102, -24), L( -84,   3, -84,   3), L(   3,  18,   3,  18), L(  54,  12,  54,  12), L( -27,  30, -27,  30),
        L(  12,  21,  12,  21), L(  15,   3,  15,   3), L(  15,  -9,  15,  -9), L( -42, -12, -42, -12), L( -36, -12, -36, -12),
        L(   6,   0,   6,   0), L(  33, -33,  33, -33), L(  90, -24,  90, -24), L(  15, -27,  15, -27), L(-144, -24,-144, -24),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore4i piece_opp_king_square_table[5][15*15]{
    {
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,  36,   0,  36), L( -90,  99, -90,  99), L(  36,  69,  36,  69), L(  39,  66,  39,  66), L(  78, 108,  78, 108),
        L(  81, 108,  81, 108), L( 120, 126, 120, 126), L( 153, 204, 153, 204), L( 153, 156, 153, 156), L( 114, 123, 114, 123),
        L(  84,  93,  84,  93), L(-183, 126,-183, 126), L(-153,  75,-153,  75), L( -42,  54, -42,  54), L(  -6,  57,  -6,  57),
        L(  33,  78,  33,  78), L(-201,  57,-201,  57), L( -93,  42, -93,  42), L(-129,  57,-129,  57), L( -30,  69, -30,  69),
        L(   9, 111,   9, 111), L(  60, 114,  60, 114), L( -33, 111, -33, 111), L(  84,  96,  84,  96), L(  12,  93,  12,  93),
        L(  57,  60,  57,  60), L(-123,  45,-123,  45), L(-252,  57,-252,  57), L(-174,  75,-174,  75), L(-120,  51,-120,  51),
        L( -90,  45, -90,  45), L(-135,  39,-135,  39), L(-111,  24,-111,  24), L( -69,   9, -69,   9), L( -18,  30, -18,  30),
        L(  24,  57,  24,  57), L(   9,  69,   9,  69), L(  21,  66,  21,  66), L(   6,  63,   6,  63), L(  30,  54,  30,  54),
        L( -27,  36, -27,  36), L( -57,  -3, -57,  -3), L(-105,  12,-105,  12), L(-111,  24,-111,  24), L(-150,  21,-150,  21),
        L( -90,  15, -90,  15), L( -66,  12, -66,  12), L( -39,   3, -39,   3), L( -27,  -3, -27,  -3), L(   6,   9,   6,   9),
        L( -18,  30, -18,  30), L( -24,  42, -24,  42), L( -33,  30, -33,  30), L(  27,  33,  27,  33), L( -30,  30, -30,  30),
        L( -24,   9, -24,   9), L( -30, -12, -30, -12), L( -57,   3, -57,   3), L(-102,  12,-102,  12), L(-114,  27,-114,  27),
        L( -63,  21, -63,  21), L( -18,   0, -18,   0), L( -24,  -3, -24,  -3), L( -24,  -9, -24,  -9), L(  -6,   6,  -6,   6),
        L( -27,   6, -27,   6), L( -57,  15, -57,  15), L( -75,   9, -75,   9), L( -48,  12, -48,  12), L( -24,   3, -24,   3),
        L( -27,  12, -27,  12), L( -51,  -6, -51,  -6), L( -24,  -3, -24,  -3), L( -45,   9, -45,   9), L( -30,  15, -30,  15),
        L( -15,   6, -15,   6), L( -18,   0, -18,   0), L( -12,  -3, -12,  -3), L(  -6,  -9,  -6,  -9), L(  12,   0,  12,   0),
        L( -12,   0, -12,   0), L( -48,  27, -48,  27), L( -81,  27, -81,  27), L( -84,  33, -84,  33), L( -36,   6, -36,   6),
        L( -15,   3, -15,   3), L(  -9,  -6,  -9,  -6), L( -18,   0, -18,   0), L( -15,   6, -15,   6), L( -15,   6, -15,   6),
        L(  -3,   6,  -3,   6), L( -18,   0, -18,   0), L(  -3,  -3,  -3,  -3), L(   0,  -9,   0,  -9), L(  -3,   0,  -3,   0),
        L(  -3,   0,  -3,   0), L(   3,  -9,   3,  -9), L(   0,   0,   0,   0), L( -15, -12, -15, -12), L( -33,   6, -33,   6),
        L( -12,   0, -12,   0), L(  -9,  -3,  -9,  -3), L(   0,  -3,   0,  -3), L(  -9,   3,  -9,   3), L( -12,   9, -12,   9),
        L(  -6,   6,  -6,   6), L(  -3,   0,  -3,   0), L(  -3,   0,  -3,   0), L(  -3,  -3,  -3,  -3), L(   3,   0,   3,   0),
        L(   9,   0,   9,   0), L( -60,  15, -60,  15), L( -66,   9, -66,   9), L( -75,  15, -75,  15), L(   0,   0,   0,   0),
        L(  -3,   3,  -3,   3), L(  -3,   0,  -3,   0), L(  -3,   3,  -3,   3), L(  -6,   6,  -6,   6), L( -12,  12, -12,  12),
        L(   6,  -3,   6,  -3), L(  -9,   6,  -9,   6), L(   0,  -3,   0,  -3), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   6,   3,   6,   3), L(  12,   0,  12,   0), L(  21,  -6,  21,  -6), L(  15,   3,  15,   3), L(  -3,   6,  -3,   6),
        L(  -3,   0,  -3,   0), L(  -6,   3,  -6,   3), L(  -6,   3,  -6,   3), L(  -3,   6,  -3,   6), L(  -3,   3,  -3,   3),
        L(  -6,   3,  -6,   3), L(   0,   0,   0,   0), L(  -3,   3,  -3,   3), L(   3,   0,   3,   0), L(   3,   0,   3,   0),
        L(   6,   0,   6,   0), L(   0,   3,   0,   3), L(  -9,  -3,  -9,  -3), L(   3,   3,   3,   3), L(   0,   3,   0,   3),
        L(   0,   0,   0,   0), L(   3,   0,   3,   0), L(   3,   0,   3,   0), L(   3,   3,   3,   3), L(  -6,   3,  -6,   3),
        L(  -3,  -3,  -3,  -3), L(  -3,   3,  -3,   3), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   3,   0,   3,   0),
        L(   3,  -3,   3,  -3), L(  -3,   0,  -3,   0), L(  -6,  -6,  -6,  -6), L(  -3,   0,  -3,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   6,   0,   6,   0), L(   3,   3,   3,   3), L(  -3,   3,  -3,   3),
        L(   0,  -3,   0,  -3), L(   0,   3,   0,   3), L(   0,   0,   0,   0), L(   3,   0,   3,   0), L(   3,   0,   3,   0),
        L(   3,   0,   3,   0), L(  -6,   0,  -6,   0), L(  -9,  -3,  -9,  -3), L(  -3,   3,  -3,   3), L(   0,   3,   0,   3),
        L(   0,   0,   0,   0), L(   0,   3,   0,   3), L(   3,   0,   3,   0), L(   3,   3,   3,   3), L(   0,  -3,   0,  -3),
        L(   0,   3,   0,   3), L(   3,  -3,   3,  -3), L(   3,  -3,   3,  -3), L(  -3,   3,  -3,   3), L(   3,   0,   3,   0),
        L(   0,   3,   0,   3), L(  -3,  -6,  -3,  -6), L(  -6,  -3,  -6,  -3), L(  -3,   6,  -3,   6), L(   0,   0,   0,   0),
        L(   3,  -3,   3,  -3), L(   0,   3,   0,   3), L(   3,   0,   3,   0), L(   3,   3,   3,   3), L(   0,  -3,   0,  -3),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore4i piece_square_table[6][2][64]{
    {
        {   // pawn, same side castle
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(  -9,  -4,  -9,  -4), L(  18,   8,  18,   8), L(  11,  31,  11,  31), L( -10,  35, -10,  35),
            L( -14,  23, -14,  23), L( -17,  22, -17,  22), L( -20,  25, -20,  25), L( -19,  35, -19,  35),
            L(   4,   2,   4,   2), L(  12,   1,  12,   1), L(  11,  19,  11,  19), L(   4,  18,   4,  18),
            L(  -4,  10,  -4,  10), L( -13,  17, -13,  17), L( -20,  19, -20,  19), L( -19,  29, -19,  29),
            L(   2,   9,   2,   9), L(   7,  15,   7,  15), L(  15,  13,  15,  13), L(  19,   8,  19,   8),
            L(   7,   6,   7,   6), L(   2,  10,   2,  10), L( -17,  32, -17,  32), L( -15,  35, -15,  35),
            L(  14,  25,  14,  25), L(  16,  30,  16,  30), L(  44,  16,  44,  16), L(  35,  11,  35,  11),
            L(  22,   5,  22,   5), L(   1,  31,   1,  31), L(  -7,  43,  -7,  43), L( -12,  56, -12,  56),
            L(  20,  45,  20,  45), L(  77,  37,  77,  37), L( 113,  20, 113,  20), L(  56,  17,  56,  17),
            L(  33,  28,  33,  28), L(  28,  58,  28,  58), L(  15,  82,  15,  82), L( -12,  93, -12,  93),
            L(  28, 134,  28, 134), L(  23, 129,  23, 129), L( 195,  74, 195,  74), L( 211,  78, 211,  78),
            L( 194, 112, 194, 112), L( 190, 143, 190, 143), L( 179, 165, 179, 165), L( 202, 160, 202, 160),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        },
        {   // pawn, opposite side castle
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(   7,  23,   7,  23), L(  32,  16,  32,  16), L(  14,  26,  14,  26), L( -12,  37, -12,  37),
            L( -23,  36, -23,  36), L( -29,  38, -29,  38), L( -47,  43, -47,  43), L( -42,  44, -42,  44),
            L(  18,  19,  18,  19), L(  27,  14,  27,  14), L(  11,  24,  11,  24), L(   1,  22,   1,  22),
            L(  -9,  25,  -9,  25), L( -21,  29, -21,  29), L( -49,  34, -49,  34), L( -42,  36, -42,  36),
            L(  16,  40,  16,  40), L(  13,  40,  13,  40), L(  11,  29,  11,  29), L(  11,  22,  11,  22),
            L(   9,  19,   9,  19), L(   1,  26,   1,  26), L( -29,  35, -29,  35), L( -34,  34, -34,  34),
            L(  12,  82,  12,  82), L(  15,  71,  15,  71), L(  17,  53,  17,  53), L(  20,  35,  20,  35),
            L(  34,  18,  34,  18), L(  34,  18,  34,  18), L( -11,  38, -11,  38), L( -20,  33, -20,  33),
            L(   1, 158,   1, 158), L(  38, 146,  38, 146), L(  37, 119,  37, 119), L(  28,  72,  28,  72),
            L(  61,  22,  61,  22), L(  91,   7,  91,   7), L(  65,  17,  65,  17), L(   1,  37,   1,  37),
            L( 197, 239, 197, 239), L( 209, 239, 209, 239), L( 174, 219, 174, 219), L( 183, 166, 183, 166),
            L( 198, 100, 198, 100), L( 204,  51, 204,  51), L(  51,  94,  51,  94), L(  53,  96,  53,  96),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
            L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0), L(   0,   0,   0,   0),
        }
    },
    {
        {
            L( -38, -62, -38, -62), L(  -5, -46,  -5, -46), L(   2, -29,   2, -29), L(   5, -26,   5, -26),
            L(   3, -23,   3, -23), L( -10, -42, -10, -42), L(  -6, -72,  -6, -72), L( -53, -65, -53, -65),
            L(  -3, -28,  -3, -28), L(  -9, -12,  -9, -12), L(   5, -24,   5, -24), L(   4,  -6,   4,  -6),
            L(   6, -13,   6, -13), L( -16, -23, -16, -23), L( -28, -17, -28, -17), L( -36, -36, -36, -36),
            L(  -5, -29,  -5, -29), L(   7,  -4,   7,  -4), L(   9,  -1,   9,  -1), L(  13,  12,  13,  12),
            L(   5,  16,   5,  16), L(  -9, -10,  -9, -10), L( -13, -22, -13, -22), L( -26, -56, -26, -56),
            L(   4,   1,   4,   1), L(  34,  16,  34,  16), L(   8,  39,   8,  39), L(  14,  38,  14,  38),
            L(   0,  34,   0,  34), L(  -4,  23,  -4,  23), L( -15,   4, -15,   4), L( -17, -27, -17, -27),
            L(   6,   7,   6,   7), L(   0,  24,   0,  24), L(  31,  39,  31,  39), L(   2,  45,   2,  45),
            L(  14,  48,  14,  48), L(   6,  23,   6,  23), L( -10,  -1, -10,  -1), L( -17, -11, -17, -11),
            L( -14,   2, -14,   2), L(  15,  23,  15,  23), L(  72,  37,  72,  37), L(  51,  23,  51,  23),
            L(  21,  28,  21,  28), L(  21,  22,  21,  22), L( -12,   2, -12,   2), L( -50, -13, -50, -13),
            L(   7, -13,   7, -13), L( -48,  20, -48,  20), L(  62,  -7,  62,  -7), L(  34,  17,  34,  17),
            L(  38,  24,  38,  24), L(  15,  -6,  15,  -6), L( -36,  -6, -36,  -6), L( -27, -30, -27, -30),
            L(-168, -57,-168, -57), L(-106,  17,-106,  17), L(-141,  56,-141,  56), L( -24,  13, -24,  13),
            L( -60,  18, -60,  18), L(-167,  43,-167,  43), L(-163,  14,-163,  14), L(-272, -28,-272, -28),
        },
        {
            L( -44, -69, -44, -69), L( -33, -13, -33, -13), L(   1, -22,   1, -22), L(   7,  -4,   7,  -4),
            L(   3,   0,   3,   0), L( -13, -15, -13, -15), L( -13, -34, -13, -34), L( -61, -23, -61, -23),
            L( -12, -29, -12, -29), L( -17,  -4, -17,  -4), L(   1, -13,   1, -13), L(   9,   0,   9,   0),
            L(  13,   3,  13,   3), L(  -6,   1,  -6,   1), L( -39,  15, -39,  15), L( -42, -15, -42, -15),
            L( -15, -27, -15, -27), L(  -1,   0,  -1,   0), L(  12,   6,  12,   6), L(  12,  27,  12,  27),
            L(  19,  29,  19,  29), L(   0,  15,   0,  15), L(  -1,  -4,  -1,  -4), L( -28, -20, -28, -20),
            L(   6,  -2,   6,  -2), L(  23,  12,  23,  12), L(  25,  32,  25,  32), L(  22,  44,  22,  44),
            L(  35,  42,  35,  42), L(  19,  38,  19,  38), L(  30,  18,  30,  18), L(   6,  -3,   6,  -3),
            L(   1,   4,   1,   4), L(  15,  12,  15,  12), L(  38,  29,  38,  29), L(  46,  49,  46,  49),
            L(  25,  55,  25,  55), L(  41,  48,  41,  48), L(  17,  17,  17,  17), L(  15,   0,  15,   0),
            L( -31,  -7, -31,  -7), L(  24,   7,  24,   7), L(  47,  30,  47,  30), L(  49,  36,  49,  36),
            L(  68,  32,  68,  32), L(  85,  35,  85,  35), L(  42,   2,  42,   2), L(   8, -14,   8, -14),
            L( -13, -22, -13, -22), L(  -4,  -3,  -4,  -3), L(  53, -10,  53, -10), L(  80,  17,  80,  17),
            L(  52,  13,  52,  13), L(  52,   0,  52,   0), L( -14,   0, -14,   0), L(  13, -28,  13, -28),
            L(-206, -63,-206, -63), L(-153,  22,-153,  22), L(-128,  33,-128,  33), L( -49,  25, -49,  25),
            L( -12,   1, -12,   1), L(-100,  26,-100,  26), L( -38,   2, -38,   2), L(-202, -29,-202, -29),
        }
    },
    {
        {
            L( -16, -20, -16, -20), L( -35,  -3, -35,  -3), L( -19,   0, -19,   0), L( -34,   4, -34,   4),
            L( -26,  -2, -26,  -2), L( -23,  -4, -23,  -4), L( -15,   1, -15,   1), L(  -4, -18,  -4, -18),
            L( -15, -26, -15, -26), L(   9, -18,   9, -18), L(  -9, -10,  -9, -10), L( -15,   5, -15,   5),
            L( -22,   4, -22,   4), L( -11,  -6, -11,  -6), L(  -8, -16,  -8, -16), L(  -9, -18,  -9, -18),
            L(   7,   0,   7,   0), L(  -6,   5,  -6,   5), L(  -2,   8,  -2,   8), L( -11,  17, -11,  17),
            L(  -8,  17,  -8,  17), L( -13,  11, -13,  11), L(  -4,   2,  -4,   2), L( -21,   2, -21,   2),
            L( -15,   7, -15,   7), L( -15,  17, -15,  17), L( -26,  26, -26,  26), L(   6,  19,   6,  19),
            L(  -1,  22,  -1,  22), L( -10,  20, -10,  20), L( -21,   8, -21,   8), L( -34,  -1, -34,  -1),
            L( -29,  21, -29,  21), L( -12,  30, -12,  30), L(  -1,  24,  -1,  24), L(   1,  31,   1,  31),
            L(  22,  22,  22,  22), L( -16,  20, -16,  20), L(  -9,  13,  -9,  13), L( -48,  19, -48,  19),
            L( -18,  26, -18,  26), L(  20,  29,  20,  29), L(  28,  32,  28,  32), L(  24,  20,  24,  20),
            L(  -3,  20,  -3,  20), L(   7,  16,   7,  16), L( -27,  29, -27,  29), L( -35,  15, -35,  15),
            L( -55,  22, -55,  22), L( -22,  25, -22,  25), L(   6,  18,   6,  18), L( -39,  28, -39,  28),
            L( -49,  28, -49,  28), L( -38,  27, -38,  27), L( -39,  28, -39,  28), L( -88,  34, -88,  34),
            L( -75,  28, -75,  28), L( -33,  17, -33,  17), L(-153,  38,-153,  38), L(-115,  36,-115,  36),
            L(-138,  46,-138,  46), L(-151,  43,-151,  43), L(-117,  52,-117,  52), L( -91,  44, -91,  44),
        },
        {
            L(   7,   9,   7,   9), L( -24,  15, -24,  15), L(  -6,  17,  -6,  17), L( -24,  23, -24,  23),
            L( -21,  23, -21,  23), L( -27,  17, -27,  17), L( -24,  20, -24,  20), L( -21,  18, -21,  18),
            L(  12, -12,  12, -12), L(  41,   2,  41,   2), L(  13,  10,  13,  10), L(   5,  16,   5,  16),
            L( -15,  21, -15,  21), L( -15,  19, -15,  19), L( -20,   8, -20,   8), L( -13,   7, -13,   7),
            L(  12,  11,  12,  11), L(  28,  19,  28,  19), L(  33,  23,  33,  23), L(   6,  26,   6,  26),
            L(   4,  33,   4,  33), L( -13,  30, -13,  30), L( -10,  21, -10,  21), L( -21,  23, -21,  23),
            L( -11,  24, -11,  24), L(  10,  30,  10,  30), L(  10,  32,  10,  32), L(  37,  30,  37,  30),
            L(  12,  36,  12,  36), L(   0,  35,   0,  35), L(  -6,  23,  -6,  23), L(  -7,  18,  -7,  18),
            L( -16,  40, -16,  40), L(   5,  37,   5,  37), L(  17,  38,  17,  38), L(  29,  38,  29,  38),
            L(  48,  38,  48,  38), L(  16,  30,  16,  30), L(  20,  35,  20,  35), L(  -6,  22,  -6,  22),
            L( -23,  37, -23,  37), L(  13,  41,  13,  41), L(  16,  39,  16,  39), L(  25,  39,  25,  39),
            L(  54,  31,  54,  31), L(  67,  37,  67,  37), L(  46,  25,  46,  25), L(   3,  25,   3,  25),
            L( -62,  48, -62,  48), L( -42,  53, -42,  53), L( -14,  47, -14,  47), L( -46,  48, -46,  48),
            L( -20,  45, -20,  45), L(  44,  23,  44,  23), L(   4,  30,   4,  30), L( -54,  24, -54,  24),
            L( -71,  67, -71,  67), L( -91,  50, -91,  50), L( -93,  48, -93,  48), L( -97,  58, -97,  58),
            L(-124,  51,-124,  51), L(-101,  49,-101,  49), L(  11,  31,  11,  31), L( -31,  48, -31,  48),
        }
    },
    {
        {
            L( -16, -10, -16, -10), L(  16,  -1,  16,  -1), L(  20,   6,  20,   6), L(  21,  -1,  21,  -1),
            L(  21,   0,  21,   0), L(  11,  11,  11,  11), L(   3,   5,   3,   5), L(  -4,   4,  -4,   4),
            L( -81,  10, -81,  10), L(  13, -12,  13, -12), L(  18, -12,  18, -12), L(   5,   0,   5,   0),
            L(   5,   2,   5,   2), L(  -7,  10,  -7,  10), L( -10,   2, -10,   2), L( -45,  10, -45,  10),
            L( -20,  -1, -20,  -1), L(  22,   9,  22,   9), L(   7,  10,   7,  10), L(  -1,  11,  -1,  11),
            L(  -1,  14,  -1,  14), L( -18,  22, -18,  22), L(  -8,  21,  -8,  21), L( -25,  13, -25,  13),
            L(  -9,  22,  -9,  22), L(  21,  28,  21,  28), L(   3,  33,   3,  33), L(  -2,  32,  -2,  32),
            L(  -4,  36,  -4,  36), L( -14,  44, -14,  44), L( -15,  44, -15,  44), L( -18,  30, -18,  30),
            L(  29,  34,  29,  34), L(  49,  28,  49,  28), L(  51,  33,  51,  33), L(  36,  36,  36,  36),
            L(  47,  35,  47,  35), L(  19,  46,  19,  46), L(   7,  40,   7,  40), L(  -5,  44,  -5,  44),
            L(  44,  37,  44,  37), L( 114,  19, 114,  19), L( 104,  30, 104,  30), L(  83,  23,  83,  23),
            L(  57,  34,  57,  34), L(  30,  46,  30,  46), L(  42,  36,  42,  36), L(  -7,  53,  -7,  53),
            L(  41,  44,  41,  44), L(  55,  46,  55,  46), L( 117,  27, 117,  27), L(  36,  62,  36,  62),
            L(  39,  60,  39,  60), L(  20,  62,  20,  62), L(  -7,  66,  -7,  66), L(   2,  58,   2,  58),
            L(  84,  44,  84,  44), L(  78,  47,  78,  47), L(  97,  42,  97,  42), L(  25,  55,  25,  55),
            L(  12,  62,  12,  62), L(   3,  68,   3,  68), L(  24,  61,  24,  61), L(  26,  56,  26,  56),
        },
        {
            L( -27,  20, -27,  20), L(   5,  15,   5,  15), L(  11,  18,  11,  18), L(  19,  11,  19,  11),
            L(  23,   6,  23,   6), L(  31,  10,  31,  10), L(  31,   6,  31,   6), L(   1,  11,   1,  11),
            L( -78,  26, -78,  26), L( -20,   9, -20,   9), L(  -3,  13,  -3,  13), L(  -2,  17,  -2,  17),
            L(   5,  13,   5,  13), L(  14,  10,  14,  10), L(  21,   0,  21,   0), L( -31,  15, -31,  15),
            L( -31,  16, -31,  16), L(   9,  20,   9,  20), L( -14,  27, -14,  27), L(  -7,  25,  -7,  25),
            L(  -9,  23,  -9,  23), L(   0,  23,   0,  23), L(  11,  22,  11,  22), L(  -4,  13,  -4,  13),
            L(  -9,  37,  -9,  37), L(  22,  36,  22,  36), L(   0,  47,   0,  47), L(  -2,  47,  -2,  47),
            L(   0,  37,   0,  37), L(   0,  43,   0,  43), L(   7,  39,   7,  39), L(  -3,  30,  -3,  30),
            L(  21,  48,  21,  48), L(  34,  40,  34,  40), L(  47,  39,  47,  39), L(  53,  45,  53,  45),
            L(  45,  40,  45,  40), L(  44,  44,  44,  44), L(  45,  32,  45,  32), L(  44,  30,  44,  30),
            L(  35,  46,  35,  46), L(  89,  24,  89,  24), L(  69,  43,  69,  43), L(  80,  36,  80,  36),
            L(  91,  32,  91,  32), L(  98,  32,  98,  32), L( 115,  18, 115,  18), L(  53,  33,  53,  33),
            L(  43,  50,  43,  50), L(  50,  51,  50,  51), L(  59,  51,  59,  51), L(  49,  67,  49,  67),
            L(  57,  57,  57,  57), L( 125,  26, 125,  26), L(  54,  42,  54,  42), L(  50,  38,  50,  38),
            L( 108,  32, 108,  32), L(  85,  45,  85,  45), L(  68,  53,  68,  53), L(  50,  56,  50,  56),
            L(  60,  49,  60,  49), L( 139,  24, 139,  24), L(  93,  38,  93,  38), L(  53,  52,  53,  52)
        }
    },
    {
        {
            L( -26, -25, -26, -25), L( -17, -42, -17, -42), L(  -7, -26,  -7, -26), L(   8, -16,   8, -16),
            L(   7,   3,   7,   3), L(   1, -15,   1, -15), L(  -4, -10,  -4, -10), L(  -9,   3,  -9,   3),
            L( -23, -23, -23, -23), L(   9, -69,   9, -69), L(  19, -68,  19, -68), L(   7, -10,   7, -10),
            L(   6,  -4,   6,  -4), L(  10, -35,  10, -35), L(   1, -12,   1, -12), L(  -9,  -2,  -9,  -2),
            L(  13, -11,  13, -11), L(  20,   0,  20,   0), L(   6,  14,   6,  14), L(   1,  -8,   1,  -8),
            L(  -2,  -8,  -2,  -8), L(  -4,   9,  -4,   9), L(   2,   3,   2,   3), L( -11,   5, -11,   5),
            L(  20,  28,  20,  28), L(  16,  27,  16,  27), L(   7,  25,   7,  25), L( -10,  35, -10,  35),
            L( -15,  31, -15,  31), L( -11,   8, -11,   8), L(  -9,  25,  -9,  25), L( -17,  24, -17,  24),
            L(  14,  28,  14,  28), L(  21,  56,  21,  56), L(   8,  56,   8,  56), L( -15,  55, -15,  55),
            L( -26,  56, -26,  56), L( -30,  27, -30,  27), L( -31,  53, -31,  53), L( -34,  49, -34,  49),
            L( -18,  43, -18,  43), L(  42,  42,  42,  42), L(  30,  32,  30,  32), L(  14,  37,  14,  37),
            L( -15,  26, -15,  26), L( -35,  41, -35,  41), L( -37,  43, -37,  43), L( -49,  69, -49,  69),
            L(  12,  72,  12,  72), L( -51, 124, -51, 124), L(  96,  -6,  96,  -6), L( -64,  90, -64,  90),
            L( -67,  81, -67,  81), L( -40,  57, -40,  57), L( -91, 109, -91, 109), L( -47,  82, -47,  82),
            L(  48,   7,  48,   7), L(  13,  52,  13,  52), L(  47,  10,  47,  10), L( -19,  31, -19,  31),
            L( -15,  31, -15,  31), L( -29,  59, -29,  59), L( -34,  71, -34,  71), L( -55,  88, -55,  88),
        },
        {
            L( -36,   3, -36,   3), L( -14, -24, -14, -24), L(  -1, -30,  -1, -30), L(  -1,  17,  -1,  17),
            L(  -2,  22,  -2,  22), L(  -6,   9,  -6,   9), L( -11,  45, -11,  45), L( -10,  30, -10,  30),
            L( -44,   4, -44,   4), L( -10,  -3, -10,  -3), L(  20, -36,  20, -36), L(  15,  18,  15,  18),
            L(   6,  18,   6,  18), L(  15,  -5,  15,  -5), L(  17,   6,  17,   6), L(   7,  24,   7,  24),
            L( -25,  36, -25,  36), L(   6,  25,   6,  25), L(   4,  44,   4,  44), L(   2,  29,   2,  29),
            L(  -2,  34,  -2,  34), L(   8,  34,   8,  34), L(  16,  26,  16,  26), L(  18,  25,  18,  25),
            L( -16,  59, -16,  59), L(  -2,  63,  -2,  63), L( -15,  71, -15,  71), L(  -5,  85,  -5,  85),
            L(  -9,  73,  -9,  73), L(   6,  58,   6,  58), L(  16,  46,  16,  46), L(  26,  26,  26,  26),
            L( -10,  69, -10,  69), L( -29, 105, -29, 105), L( -25,  74, -25,  74), L( -16,  96, -16,  96),
            L(   4,  86,   4,  86), L(  20,  66,  20,  66), L(  39,  56,  39,  56), L(  24,  35,  24,  35),
            L( -24,  96, -24,  96), L(  -3,  60,  -3,  60), L(  -1,  68,  -1,  68), L(  -2,  70,  -2,  70),
            L(  33,  68,  33,  68), L(  32,  75,  32,  75), L(  65,  22,  65,  22), L(  14,  33,  14,  33),
            L( -15,  81, -15,  81), L( -61, 134, -61, 134), L( -16,  86, -16,  86), L( -57, 122, -57, 122),
            L( -67, 136, -67, 136), L(  86,  25,  86,  25), L( -15,  76, -15,  76), L(  13,  42,  13,  42),
            L(  -3,  79,  -3,  79), L(   4,  82,   4,  82), L(  -5,  74,  -5,  74), L( -16,  78, -16,  78),
            L( -13,  69, -13,  69), L( 126, -20, 126, -20), L(  -1,  54,  -1,  54), L(  22,  22,  22,  22),
        }
    },
    {
        {
            L( -34, -96, -34, -96), L( 127, -50, 127, -50), L(  79, -21,  79, -21), L( 118, -16, 118, -16),
            L(  85, -26,  85, -26), L(  48, -13,  48, -13), L(  39, -10,  39, -10), L(-165, -64,-165, -64),
            L(  14, -32,  14, -32), L( 121,  10, 121,  10), L( 212, -16, 212, -16), L( 201, -20, 201, -20),
            L( 153, -13, 153, -13), L( 171,  -9, 171,  -9), L(  60,  24,  60,  24), L(  18, -30,  18, -30),
            L(  32,   1,  32,   1), L( 141,  17, 141,  17), L( 195,   6, 195,   6), L( 176,   0, 176,   0),
            L( 178,  -4, 178,  -4), L( 196,   6, 196,   6), L( 124,  18, 124,  18), L(  21,  -3,  21,  -3),
            L( -14,  13, -14,  13), L(  99,   7,  99,   7), L( 134,  15, 134,  15), L( 107,  19, 107,  19),
            L( 119,  15, 119,  15), L( 130,  14, 130,  14), L(  81,   5,  81,   5), L( -57,  11, -57,  11),
            L( -22, -14, -22, -14), L(  84,  -3,  84,  -3), L(  91,  16,  91,  16), L(  60,  27,  60,  27),
            L(  75,  28,  75,  28), L(  65,  21,  65,  21), L(  80,   1,  80,   1), L( -30, -13, -30, -13),
            L( -14, -13, -14, -13), L(  12,   4,  12,   4), L(  29,  15,  29,  15), L(  18,  29,  18,  29),
            L(  32,  28,  32,  28), L(  16,  23,  16,  23), L(  10,   8,  10,   8), L( -17,  -8, -17,  -8),
            L(  40, -24,  40, -24), L(  15,  -2,  15,  -2), L(   8,  10,   8,  10), L( -28,  19, -28,  19),
            L(  -5,  18,  -5,  18), L( -14,  20, -14,  20), L(  20,  -3,  20,  -3), L(  37, -28,  37, -28),
            L(  42, -74,  42, -74), L(  47, -39,  47, -39), L(  25, -20,  25, -20), L(  10, -32,  10, -32),
            L(  13, -40,  13, -40), L(  -7, -12,  -7, -12), L(  56, -35,  56, -35), L(  65, -91,  65, -91),
        },
        {
            L( -34, -96, -34, -96), L( 127, -50, 127, -50), L(  79, -21,  79, -21), L( 118, -16, 118, -16),
            L(  85, -26,  85, -26), L(  48, -13,  48, -13), L(  39, -10,  39, -10), L(-165, -64,-165, -64),
            L(  14, -32,  14, -32), L( 121,  10, 121,  10), L( 212, -16, 212, -16), L( 201, -20, 201, -20),
            L( 153, -13, 153, -13), L( 171,  -9, 171,  -9), L(  60,  24,  60,  24), L(  18, -30,  18, -30),
            L(  32,   1,  32,   1), L( 141,  17, 141,  17), L( 195,   6, 195,   6), L( 176,   0, 176,   0),
            L( 178,  -4, 178,  -4), L( 196,   6, 196,   6), L( 124,  18, 124,  18), L(  21,  -3,  21,  -3),
            L( -14,  13, -14,  13), L(  99,   7,  99,   7), L( 134,  15, 134,  15), L( 107,  19, 107,  19),
            L( 119,  15, 119,  15), L( 130,  14, 130,  14), L(  81,   5,  81,   5), L( -57,  11, -57,  11),
            L( -22, -14, -22, -14), L(  84,  -3,  84,  -3), L(  91,  16,  91,  16), L(  60,  27,  60,  27),
            L(  75,  28,  75,  28), L(  65,  21,  65,  21), L(  80,   1,  80,   1), L( -30, -13, -30, -13),
            L( -14, -13, -14, -13), L(  12,   4,  12,   4), L(  29,  15,  29,  15), L(  18,  29,  18,  29),
            L(  32,  28,  32,  28), L(  16,  23,  16,  23), L(  10,   8,  10,   8), L( -17,  -8, -17,  -8),
            L(  40, -24,  40, -24), L(  15,  -2,  15,  -2), L(   8,  10,   8,  10), L( -28,  19, -28,  19),
            L(  -5,  18,  -5,  18), L( -14,  20, -14,  20), L(  20,  -3,  20,  -3), L(  37, -28,  37, -28),
            L(  42, -74,  42, -74), L(  47, -39,  47, -39), L(  25, -20,  25, -20), L(  10, -32,  10, -32),
            L(  13, -40,  13, -40), L(  -7, -12,  -7, -12), L(  56, -35,  56, -35), L(  65, -91,  65, -91),
        }
    },
};

// indexed by wking, bking, piece, square
EvalScore4i piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){
                    
                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq]
                        = + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq]
                        = - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }
            
            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}