
/****************************************************************************************************
 *                                                                                                  *
 *                                     Koivisto UCI Chess engine                                    *
 *                                   by. Kim Kahre and Finn Eggers                                  *
 *                                                                                                  *
 *                 Koivisto is free software: you can redistribute it and/or modify                 *
 *               it under the terms of the GNU General Public License as published by               *
 *                 the Free Software Foundation, either version 3 of the License, or                *
 *                                (at your option) any later version.                               *
 *                    Koivisto is distributed in the hope that it will be useful,                   *
 *                  but WITHOUT ANY WARRANTY; without even the implied warranty of                  *
 *                   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                  *
 *                           GNU General Public License for more details.                           *
 *                 You should have received a copy of the GNU General Public License                *
 *                 along with Koivisto.  If not, see <http://www.gnu.org/licenses/>.                *
 *                                                                                                  *
 ****************************************************************************************************/

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   33,   48), M(   19,  -92), M(  -74,   12), M( -115,   33), M( -106,    2),
        M(  -73,  -19), M(  -17,  -44), M(  -10,  -69), M(  -22,  -38), M(  -68,   -9),
        M(  -52,    1), M(  -73,   25), M(  -25,   26), M(  -13,   25), M(  -36,   47),
        M(  -61,  -30), M(  -36,   -0), M(  -24,  -15), M(  -58,   -9), M(  -35,   -5),
        M(  -51,   -3), M(  -13,  -23), M(  -45,   -7), M(  -33,  -23), M(  -27,  -16),
        M(  -20,  -19), M(  -17,    5), M(  -19,    6), M(    2,    6), M(   11,   -1),
        M(  -23,  -37), M(  -22,   -9), M(   -9,   -4), M(  -15,   -9), M(  -38,    1),
        M(  -22,  -17), M(  -19,  -11), M(   -6,  -15), M(  -11,  -25), M(  -20,  -17),
        M(   -9,  -15), M(  -13,    2), M(   -8,   -1), M(   -7,   -3), M(   -8,   -8),
        M(  -38,   -2), M(    2,   -8), M(   -7,   10), M(   -3,    1), M(  -12,    4),
        M(   -6,   -3), M(    7,    1), M(   18,  -11), M(   -0,  -12), M(  -10,   -4),
        M(  -13,   -1), M(  -10,    0), M(   -6,   -1), M(   -3,   -5), M(    7,  -20),
        M(  -16,   -4), M(    3,   -2), M(   -9,    1), M(   -3,    3), M(   -6,    6),
        M(    0,    8), M(   22,    5), M(   34,    1), M(    9,    6), M(    5,    7),
        M(   -6,    1), M(   -6,    0), M(  -10,    4), M(   -5,   -1), M(    5,  -19),
        M(  -52,   14), M(   -5,   -6), M(  -10,    5), M(   -6,    0), M(    2,    6),
        M(    0,   11), M(   -6,  -15), M(   11,   -9), M(   -6,   -8), M(    1,    9),
        M(   -3,    7), M(   -8,    2), M(  -10,    3), M(   -4,   -1), M(    4,  -15),
        M(  -44,    2), M(    6,   -2), M(  -16,    6), M(    1,    2), M(   12,    7),
        M(   -1,   15), M(   -1,   -5), M(    0,    0), M(    9,   -5), M(    1,   14),
        M(   -2,    7), M(  -14,    7), M(   -7,    2), M(   -5,    1), M(   10,  -13),
        M(   -8,   15), M(   28,   -4), M(    6,   -1), M(    2,   -0), M(    0,    9),
        M(  -15,   16), M(  -47,    6), M(  -40,   28), M(  -55,    1), M(  -13,   18),
        M(  -19,   10), M(  -16,    7), M(  -10,    5), M(   -3,    2), M(  -10,    6),
        M(   -0,    4), M(   31,  -15), M(  -44,    8), M(  -40,    1), M(  -44,   13),
        M(  -97,   23), M(  -62,   26), M(  -48,   16), M(  -74,   18), M(  -63,    6),
        M(  -58,   22), M(  -32,   10), M(  -30,    9), M(  -38,   15), M(  -47,   25),
        M(   33,  -17), M( -185,   33), M(  -24,   15), M(  -86,   11), M(  -79,   13),
        M( -117,   25), M(  -85,   22), M( -106,   36), M( -121,   22), M( -121,   16),
        M( -142,   37), M(  -44,    3), M( -139,   18), M(  -23,   11), M( -123,   21),
        M( -247,   13), M( -174,   -2), M(  175,  -14), M( -176,   25), M( -118,   26),
        M( -130,   27), M( -100,   30), M( -105,   42), M( -105,   21), M( -114,   27),
        M( -140,   27), M( -228,   28), M(  -35,   10), M(   66,   -7), M( -446,   55),
        M( -521,  109), M( -293,   11), M( -171,   41), M( -256,   74), M( -236,   31),
        M(  -99,   29), M(   -6,   41), M( -108,   39), M(  -57,   25), M( -154,   55),
        M(  253,  -45), M(  -15,    2), M( -247,   21), M(  -84,  101), M( -612,   29),
        M( -184,   91), M(-2008,  188), M(  489,   48), M( -775,  136), M(  521,    6),
        M( -406,  241), M( -426,   84), M( -306,  160), M( -667,  111), M( -608,   14),
        M(  380, -117), M( -146,   51), M(  843,  -73), M(   11,  -68), M(  204,  -75),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    5,   40), M( -467,  184), M( -282,  142), M( -269,  146), M( -242,  201),
        M( -258,  202), M(   22,  203), M( -207,  308), M(  -44,  235), M(  -60,  198),
        M(   10,  155), M( -712,  234), M( -576,  153), M( -299,  106), M( -352,   94),
        M( -189,  127), M( -430,  118), M( -317,   99), M( -351,  122), M( -261,  137),
        M( -267,  191), M( -226,  190), M( -206,  166), M( -110,  152), M( -189,  160),
        M( -111,  111), M( -321,   97), M( -443,  103), M( -592,  150), M( -238,   64),
        M( -243,   96), M( -250,   76), M( -253,   63), M( -194,   44), M( -104,   62),
        M( -100,   98), M( -131,  117), M(  -82,   99), M( -103,   95), M( -103,   92),
        M(  -85,   55), M( -141,   21), M( -194,   31), M( -291,   64), M( -290,   38),
        M( -235,   48), M( -142,   32), M( -105,   19), M( -112,   19), M(  -56,   27),
        M(  -70,   47), M(  -95,   60), M(  -74,   45), M(   -6,   42), M(  -88,   44),
        M(  -77,   23), M(  -83,    1), M( -100,   16), M( -163,   26), M( -231,   53),
        M( -118,   32), M(  -72,   17), M(  -70,   12), M(  -54,   -1), M(  -26,   13),
        M(  -54,   13), M(  -84,   21), M(  -79,   12), M(  -78,   18), M(  -57,    8),
        M(  -51,   20), M(  -74,    1), M(  -66,    9), M(  -69,   19), M(  -75,   31),
        M(  -46,   20), M(  -15,    8), M(  -20,    0), M(  -10,   -5), M(   27,   -4),
        M(  -35,    6), M(  -65,   -5), M(  -86,   -5), M(  -97,   -2), M(  -47,    7),
        M(  -22,    6), M(  -20,    0), M(  -21,    5), M(  -41,   23), M(  -46,   26),
        M(    3,   18), M(   -2,    4), M(   16,   -2), M(    8,   -7), M(   18,   -3),
        M(   10,   -1), M(   24,  -52), M(    0,    0), M(   -4,  -52), M(  -21,    5),
        M(   -3,    2), M(   -7,    4), M(   -6,    8), M(  -15,   16), M(  -27,   29),
        M(  -12,   18), M(   10,    7), M(    8,    4), M(   14,   -2), M(   24,   -1),
        M(   30,    1), M(  -74,  -22), M(  -76,  -26), M(  -74,  -24), M(   13,    4),
        M(    4,    9), M(    1,    9), M(   -5,   15), M(  -12,   22), M(  -19,   29),
        M(    0,   14), M(   -1,   14), M(    3,    8), M(    9,    6), M(   24,   -0),
        M(   25,    6), M(   39,    1), M(   44,   -4), M(   45,    4), M(   17,    9),
        M(    5,    9), M(   -1,   15), M(   -4,   18), M(   -4,   23), M(   -9,   21),
        M(  -13,   22), M(    6,   14), M(   -4,   15), M(    9,   10), M(   23,    3),
        M(   22,    4), M(   20,    7), M(    6,    4), M(   23,    7), M(   16,    9),
        M(    5,   10), M(    5,   16), M(    1,   20), M(    3,   20), M(   -5,   23),
        M(  -10,   18), M(    4,   16), M(    3,   17), M(    0,   15), M(   10,    9),
        M(   12,    4), M(    7,    6), M(    1,    1), M(    9,    7), M(   11,    6),
        M(    7,   11), M(    4,   17), M(    8,   19), M(    8,   21), M(    2,   20),
        M(   -5,   18), M(    6,   20), M(    8,   17), M(    4,   18), M(    3,   13),
        M(    6,   10), M(   -6,   10), M(   -9,    9), M(   -2,   16), M(    3,   13),
        M(    4,   12), M(    4,   20), M(    7,   21), M(   10,   20), M(    3,   20),
        M(    2,   19), M(   15,   11), M(    9,   16), M(   -4,   21), M(   -4,   20),
        M(   -6,   16), M(   -9,    6), M(  -14,    9), M(   -9,   22), M(   -4,   14),
        M(    0,   16), M(   -0,   25), M(    5,   24), M(   11,   21), M(    7,   20),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    5), M(   21,   18), M(   13,   38), M(   -4,   43),
            M(   -6,   29), M(   -8,   26), M(  -11,   25), M(  -13,   37),
            M(   -4,   16), M(   -0,   21), M(   -1,   36), M(   -2,   33),
            M(   -2,   22), M(   -9,   24), M(  -14,   26), M(  -13,   33),
            M(   -9,   25), M(    1,   34), M(    5,   32), M(   18,   25),
            M(   12,   21), M(    8,   21), M(   -8,   38), M(  -11,   44),
            M(    8,   41), M(   13,   50), M(   35,   37), M(   36,   29),
            M(   30,   20), M(   13,   41), M(    8,   54), M(    3,   67),
            M(    9,   68), M(   72,   58), M(  103,   42), M(   64,   34),
            M(   48,   44), M(   46,   73), M(   35,   96), M(   -1,  110),
            M(   58,  144), M(   86,  135), M(  206,   90), M(  208,  103),
            M(  187,  137), M(  187,  166), M(  152,  199), M(  168,  193),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   15,   16), M(   39,   11), M(   22,   24), M(    0,   35),
            M(   -1,   38), M(   -4,   41), M(  -12,   46), M(  -15,   47),
            M(   18,   20), M(   21,   19), M(    2,   32), M(   -1,   31),
            M(    3,   32), M(   -1,   35), M(  -20,   41), M(  -23,   44),
            M(   25,   43), M(   20,   47), M(   15,   37), M(   15,   32),
            M(   22,   27), M(   15,   32), M(   -8,   43), M(  -28,   45),
            M(   38,   87), M(   37,   79), M(   30,   65), M(   34,   44),
            M(   51,   26), M(   45,   29), M(    0,   49), M(  -17,   47),
            M(   30,  165), M(   74,  155), M(   56,  130), M(   57,   77),
            M(   88,   24), M(   95,   17), M(   69,   26), M(   -0,   48),
            M(  224,  246), M(  207,  258), M(  168,  236), M(  205,  173),
            M(  233,   98), M(  254,   47), M(  119,   84), M(   82,   90),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -108,   21), M(  -76,   44), M(  -68,   46), M(  -68,   65),
            M(  -71,   68), M(  -78,   41), M(  -80,   26), M( -117,   -2),
            M(  -79,   58), M(  -85,   65), M(  -68,   51), M(  -68,   70),
            M(  -66,   69), M(  -84,   51), M(  -98,   55), M( -103,   37),
            M(  -77,   48), M(  -64,   71), M(  -61,   74), M(  -58,   85),
            M(  -64,   85), M(  -77,   62), M(  -80,   47), M(  -94,   17),
            M(  -66,   75), M(  -42,   85), M(  -58,  100), M(  -55,  104),
            M(  -66,  101), M(  -71,   92), M(  -81,   72), M(  -87,   47),
            M(  -57,   71), M(  -58,   83), M(  -40,  101), M(  -61,  111),
            M(  -64,  116), M(  -61,   96), M(  -75,   66), M(  -82,   58),
            M(  -79,   62), M(  -53,   69), M(   -1,   86), M(   -7,   87),
            M(  -38,   96), M(  -55,   96), M(  -78,   65), M( -107,   48),
            M(  -59,   54), M( -105,   66), M(   -7,   48), M(  -26,   82),
            M(  -20,   84), M(  -45,   60), M(  -95,   62), M(  -92,   43),
            M( -198,   -4), M( -164,   74), M( -198,  108), M(  -76,   71),
            M( -112,   77), M( -223,  104), M( -207,   75), M( -283,   14),
        },
        {
            
            M(  -66,  -31), M(  -49,   19), M(  -21,    9), M(  -13,   31),
            M(  -19,   25), M(  -30,    8), M(  -36,    9), M(  -76,   -0),
            M(  -37,    9), M(  -43,   28), M(  -19,   12), M(  -14,   28),
            M(   -9,   31), M(  -23,   21), M(  -57,   30), M(  -57,    8),
            M(  -37,    3), M(  -21,   24), M(   -9,   31), M(   -6,   47),
            M(    1,   47), M(  -17,   29), M(  -16,   12), M(  -44,   -4),
            M(  -18,   27), M(    4,   36), M(    1,   55), M(    5,   57),
            M(   14,   54), M(    5,   46), M(   12,   30), M(  -13,   15),
            M(  -21,   32), M(   -3,   31), M(   19,   51), M(   20,   63),
            M(   16,   62), M(   23,   49), M(    7,   24), M(    2,   15),
            M(  -59,   21), M(    6,   19), M(   23,   49), M(   42,   47),
            M(   58,   41), M(   64,   32), M(   18,    7), M(   -7,   -1),
            M(  -32,    0), M(  -27,   21), M(   38,    8), M(   66,   33),
            M(   41,   28), M(   33,    7), M(  -35,   12), M(   -5,   -5),
            M( -216,  -30), M( -159,   35), M( -143,   48), M(  -58,   35),
            M(  -39,   18), M( -124,   36), M(  -23,    0), M( -172,  -43),
        },
    },
    {
        {
            
            M(  -52,    8), M(  -63,   23), M(  -55,   25), M(  -56,   38),
            M(  -52,   35), M(  -49,   39), M(  -46,   37), M(  -38,   14),
            M(  -43,   -7), M(  -31,   11), M(  -42,   25), M(  -48,   37),
            M(  -50,   43), M(  -46,   32), M(  -40,   15), M(  -45,   14),
            M(  -34,   35), M(  -38,   42), M(  -40,   49), M(  -42,   54),
            M(  -44,   52), M(  -42,   49), M(  -38,   38), M(  -49,   28),
            M(  -41,   33), M(  -45,   46), M(  -47,   57), M(  -31,   58),
            M(  -30,   63), M(  -43,   57), M(  -44,   40), M(  -60,   24),
            M(  -58,   47), M(  -35,   52), M(  -34,   58), M(  -25,   68),
            M(  -12,   62), M(  -38,   54), M(  -38,   46), M(  -68,   42),
            M(  -37,   46), M(  -22,   58), M(   -6,   61), M(   -7,   54),
            M(  -24,   54), M(  -23,   53), M(  -50,   56), M(  -61,   38),
            M(  -79,   48), M(  -47,   54), M(  -33,   48), M(  -52,   56),
            M(  -72,   59), M(  -55,   57), M(  -62,   57), M( -105,   56),
            M( -100,   54), M(  -86,   51), M( -187,   68), M( -145,   67),
            M( -168,   78), M( -181,   72), M( -120,   69), M( -115,   65),
        },
        {
            
            M(   23,  -16), M(   -6,   -2), M(   11,   -2), M(    3,    5),
            M(    4,    6), M(   -2,    2), M(    1,    5), M(    4,  -13),
            M(   26,  -24), M(   56,  -17), M(   31,   -7), M(   23,    1),
            M(    7,    4), M(    7,   -2), M(    2,  -16), M(    9,  -21),
            M(   28,   -8), M(   43,    4), M(   47,    9), M(   26,   10),
            M(   22,   15), M(   10,    9), M(   12,    1), M(    3,   -4),
            M(   16,   -6), M(   31,   10), M(   31,   18), M(   54,   20),
            M(   32,   21), M(   23,   15), M(   20,    1), M(   17,   -8),
            M(    8,   12), M(   31,   13), M(   35,   25), M(   51,   27),
            M(   70,   20), M(   34,   10), M(   43,   10), M(   15,   -2),
            M(    1,   10), M(   33,   19), M(   38,   22), M(   49,   21),
            M(   78,   10), M(   88,    8), M(   60,    2), M(   29,   -3),
            M(  -37,   21), M(  -14,   31), M(   11,   27), M(  -20,   26),
            M(   12,   17), M(   54,    3), M(   26,    9), M(  -26,    0),
            M(  -39,   33), M(  -81,   32), M(  -83,   31), M(  -88,   36),
            M( -121,   30), M( -103,   24), M(   27,    6), M(  -13,   22),
        },
    },
    {
        {
            
            M( -100,   60), M(  -75,   69), M(  -74,   77), M(  -76,   71),
            M(  -75,   72), M(  -83,   81), M(  -89,   78), M(  -92,   74),
            M( -157,   77), M(  -82,   63), M(  -75,   65), M(  -84,   72),
            M(  -84,   74), M(  -93,   81), M(  -97,   74), M( -128,   81),
            M( -103,   68), M(  -71,   85), M(  -85,   86), M(  -89,   83),
            M(  -88,   85), M( -101,   91), M(  -94,   93), M( -108,   83),
            M(  -96,   92), M(  -71,  100), M(  -86,  106), M(  -89,  102),
            M(  -88,  105), M(  -98,  113), M( -102,  114), M( -101,   99),
            M(  -63,  104), M(  -45,   99), M(  -43,  104), M(  -48,  103),
            M(  -39,  105), M(  -65,  115), M(  -75,  111), M(  -87,  113),
            M(  -45,  108), M(   11,   88), M(    5,  101), M(   -9,   94),
            M(  -28,  104), M(  -54,  117), M(  -44,  106), M(  -89,  121),
            M(  -62,  118), M(  -59,  120), M(  -11,  103), M(  -56,  132),
            M(  -56,  133), M(  -69,  134), M(  -92,  137), M(  -87,  130),
            M(  -26,  125), M(  -44,  133), M(  -35,  134), M(  -82,  137),
            M(  -93,  142), M( -102,  148), M(  -73,  137), M(  -71,  132),
        },
        {
            
            M(  -44,   29), M(  -19,   25), M(   -9,   27), M(   -7,   22),
            M(   -5,   18), M(    0,   23), M(    3,   19), M(  -20,   19),
            M(  -92,   34), M(  -40,   19), M(  -24,   24), M(  -24,   28),
            M(  -17,   25), M(  -10,   20), M(   -2,   12), M(  -50,   26),
            M(  -46,   24), M(  -11,   30), M(  -31,   36), M(  -26,   34),
            M(  -26,   32), M(  -19,   32), M(   -8,   32), M(  -25,   24),
            M(  -29,   45), M(   -1,   47), M(  -22,   57), M(  -20,   53),
            M(  -17,   45), M(  -15,   49), M(  -10,   47), M(  -21,   38),
            M(    1,   56), M(   11,   52), M(   27,   49), M(   35,   52),
            M(   31,   43), M(   23,   49), M(   28,   39), M(   18,   40),
            M(   10,   57), M(   60,   37), M(   43,   55), M(   59,   43),
            M(   69,   38), M(   62,   41), M(   80,   29), M(   27,   46),
            M(   12,   63), M(   18,   63), M(   29,   64), M(   21,   76),
            M(   30,   65), M(   62,   43), M(   18,   56), M(   25,   50),
            M(   63,   49), M(   35,   66), M(   18,   76), M(   -5,   81),
            M(    9,   72), M(   72,   53), M(   60,   54), M(   34,   63),
        },
    },
    {
        {
            
            M( -158,   71), M( -148,   51), M( -141,   68), M( -134,   85),
            M( -133,   99), M( -140,   91), M( -145,   97), M( -145,  107),
            M( -155,   78), M( -131,   47), M( -124,   47), M( -133,  104),
            M( -135,  113), M( -132,   81), M( -139,   96), M( -148,  102),
            M( -125,   92), M( -122,  106), M( -134,  124), M( -138,  111),
            M( -142,  112), M( -142,  122), M( -136,  110), M( -149,  105),
            M( -121,  127), M( -124,  127), M( -135,  133), M( -149,  148),
            M( -154,  150), M( -150,  119), M( -147,  131), M( -151,  117),
            M( -130,  129), M( -122,  162), M( -143,  162), M( -155,  153),
            M( -163,  155), M( -161,  122), M( -162,  149), M( -162,  136),
            M( -170,  148), M( -128,  156), M( -139,  145), M( -135,  139),
            M( -153,  120), M( -163,  121), M( -166,  132), M( -174,  150),
            M( -139,  163), M( -195,  213), M(  -90,  121), M( -212,  188),
            M( -203,  165), M( -169,  133), M( -213,  177), M( -176,  156),
            M( -109,  113), M( -142,  154), M( -128,  131), M( -177,  146),
            M( -160,  134), M( -164,  141), M( -159,  143), M( -185,  161),
        },
        {
            
            M(   26,  -62), M(   45,  -90), M(   57,  -90), M(   56,  -47),
            M(   58,  -50), M(   53,  -62), M(   49,  -29), M(   55,  -51),
            M(   17,  -53), M(   47,  -57), M(   78,  -92), M(   70,  -33),
            M(   62,  -37), M(   71,  -67), M(   74,  -62), M(   65,  -52),
            M(   36,  -28), M(   62,  -24), M(   59,   -8), M(   58,  -22),
            M(   56,  -20), M(   65,  -26), M(   74,  -43), M(   75,  -53),
            M(   44,  -13), M(   55,    5), M(   41,   11), M(   51,   28),
            M(   49,   13), M(   62,   -8), M(   71,  -26), M(   82,  -50),
            M(   47,   -1), M(   35,   28), M(   36,    1), M(   41,   26),
            M(   59,   14), M(   66,   -1), M(   90,  -10), M(   74,  -40),
            M(   36,   20), M(   54,  -17), M(   59,  -15), M(   51,   -6),
            M(   78,    1), M(   59,   15), M(   91,  -37), M(   54,  -37),
            M(   40,    3), M(    2,   41), M(   41,    2), M(   -3,   42),
            M(  -18,   62), M(   97,  -15), M(   29,   10), M(   58,  -37),
            M(   50,   -4), M(   57,    2), M(   47,   -4), M(   33,   12),
            M(   19,   19), M(  167,  -81), M(   50,  -19), M(   71,  -47),
        },
    },
    {
        {
            
            M(  158, -189), M(  256,  -86), M(  154,  -53), M(  204,  -33),
            M(  196,  -50), M(  136,  -51), M(  136,  -56), M(  154, -183),
            M(   81,  -76), M(  180,  -23), M(  227,  -37), M(  250,  -45),
            M(  225,  -45), M(  239,  -40), M(  118,  -13), M(  142,  -84),
            M(  111,  -40), M(  232,  -24), M(  268,  -32), M(  270,  -38),
            M(  263,  -39), M(  282,  -33), M(  218,  -23), M(  123,  -49),
            M(   59,  -29), M(  200,  -37), M(  209,  -22), M(  169,  -14),
            M(  187,  -16), M(  209,  -21), M(  166,  -30), M(   27,  -29),
            M(   12,  -42), M(  130,  -27), M(  156,  -14), M(  103,    1),
            M(  127,    1), M(  126,   -6), M(  122,  -17), M(   -0,  -32),
            M(  -12,  -24), M(   31,   -7), M(   53,   -2), M(   42,   11),
            M(   60,   12), M(   57,    6), M(   33,    1), M(  -14,   -9),
            M(   43,  -23), M(   20,   -1), M(   11,    8), M(  -38,   19),
            M(   -3,   16), M(   -4,   21), M(   23,    5), M(   31,  -14),
            M(   50,  -72), M(   43,  -20), M(   17,   -2), M(   -6,  -14),
            M(    4,  -21), M(  -10,    7), M(   50,  -14), M(   51,  -65),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][14][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+8][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}