//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  247, -119), M(   20, -103), M(  -57,   -2), M( -177,   83), M(  -52,  -20),
        M(  -96,   11), M(  -46,  -57), M(   35,  -99), M(    1,  -52), M(  -76,  -23),
        M(  -67,    3), M(  -43,   10), M(  -34,   33), M(  -21,   38), M(  -16,   74),
        M(   26, -105), M(  -31,  -47), M(  -17,  -25), M(  -53,   -3), M(  -21,   -3),
        M(  -42,  -11), M(  -22,  -22), M(  -48,   -8), M(  -45,  -10), M(  -26,   -9),
        M(  -16,  -32), M(  -24,   -2), M(  -26,    4), M(    0,    5), M(   10,    0),
        M( -128,  -32), M(  -10,  -17), M(  -19,    5), M(  -23,  -14), M(  -47,    8),
        M(  -27,  -11), M(  -15,  -16), M(  -12,  -15), M(  -10,  -27), M(  -26,  -16),
        M(  -16,  -16), M(  -13,   -5), M(  -10,   -8), M(  -12,   -3), M(   -4,  -19),
        M(  -40,    5), M(   16,  -12), M(  -14,    7), M(   -6,    2), M(  -14,    9),
        M(   -7,   -2), M(    9,   -1), M(   17,  -10), M(   -4,  -13), M(  -11,   -4),
        M(  -16,   -1), M(  -13,   -2), M(  -12,    2), M(   -8,   -4), M(    4,  -19),
        M(  -31,    5), M(    2,   -3), M(  -24,    8), M(   -8,    3), M(   -4,    7),
        M(    2,    9), M(   27,    5), M(   36,    0), M(   10,    6), M(    8,    4),
        M(   -5,   -1), M(   -8,    3), M(  -12,    6), M(  -13,   -1), M(    3,  -17),
        M(  -77,   14), M(   -2,   -7), M(  -20,    4), M(   -5,   -0), M(   -2,    9),
        M(   -4,   15), M(   -6,  -15), M(    9,   -8), M(   -7,   -9), M(    3,    8),
        M(   -3,    9), M(  -11,    7), M(  -12,    5), M(  -11,    2), M(    4,  -10),
        M(  -75,   10), M(   16,   -6), M(  -13,    1), M(   -3,    5), M(    7,   10),
        M(   -3,   17), M(   -2,   -5), M(    0,    0), M(   12,   -5), M(    2,   17),
        M(    7,    6), M(  -11,    9), M(   -8,    4), M(   -9,   -1), M(   15,  -12),
        M(  -68,   42), M(   27,   -3), M(   -9,    5), M(   -8,    2), M(    5,   12),
        M(  -20,   19), M(  -50,    8), M(  -43,   30), M(  -57,   -0), M(   -9,   18),
        M(  -29,   14), M(  -14,    8), M(  -36,   17), M(   -1,    2), M(   -4,   17),
        M(  -60,   20), M(   95,  -29), M(  -62,   13), M(   -5,   -4), M(  -19,   12),
        M( -138,   33), M(  -70,   28), M(  -37,   15), M(  -93,   24), M(  -63,    9),
        M(  -34,   22), M(  -32,   16), M(  -28,   19), M(  -10,   15), M(  -41,   21),
        M(  -36,    8), M( -174,   40), M(  -76,   34), M(  -75,    3), M(  -51,   17),
        M( -182,   40), M(  -23,   13), M( -101,   42), M( -170,   29), M( -114,   17),
        M( -221,   56), M(  -51,    5), M( -168,   26), M(   12,    3), M( -208,   28),
        M( -484,   57), M( -332,   44), M(  222,  -14), M( -122,   20), M( -194,   43),
        M( -207,   32), M( -134,   40), M( -146,   39), M( -135,   28), M(  -88,   30),
        M( -156,   46), M( -212,   21), M(   41,    8), M(  230,  -44), M( -419,   71),
        M( -565,   40), M( -510,   56), M(   46,   29), M( -193,   90), M( -208,   63),
        M( -106,   15), M(    7,   51), M(  -44,   25), M( -110,   45), M(  -51,   69),
        M(  149,   12), M( -171,   78), M( -211,   58), M(   -6,  112), M( -902,  142),
        M(   32,  295), M(-2898,  237), M( 1127,   32), M( -943,   87), M( 1620, -103),
        M(   -9,  155), M( -820,  145), M( -146,  265), M( -559,  -22), M( -908,  -15),
        M( -659,   81), M(   -8,   41), M(  789,  -95), M(  109,  -39), M(-1452,  700),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   97,   33), M( -484,  198), M( -302,  159), M( -287,  160), M( -215,  218),
        M(  -63,  201), M(  118,  218), M( -174,  332), M(  106,  232), M(  -62,  212),
        M(   46,  159), M( -753,  250), M( -644,  163), M( -312,  114), M( -287,   80),
        M( -174,  140), M( -424,  122), M( -319,  107), M( -356,  128), M( -236,  144),
        M( -238,  202), M( -227,  209), M( -211,  184), M( -118,  162), M( -140,  163),
        M( -160,  128), M( -318,  101), M( -479,  112), M( -625,  162), M( -221,   66),
        M( -227,   94), M( -238,   82), M( -242,   63), M( -195,   51), M(  -93,   69),
        M(  -72,  102), M( -129,  131), M(  -62,  106), M( -121,  110), M(  -92,   99),
        M(  -90,   65), M( -157,   30), M( -205,   41), M( -320,   78), M( -369,   67),
        M( -246,   53), M( -152,   43), M(  -86,   22), M( -105,   23), M(  -57,   34),
        M(  -69,   54), M(  -89,   67), M(  -82,   52), M(    5,   49), M(  -86,   53),
        M(  -79,   32), M(  -89,    8), M(  -95,   25), M( -140,   29), M( -215,   64),
        M( -117,   43), M(  -58,   22), M(  -79,   23), M(  -47,    3), M(  -16,   18),
        M(  -66,   20), M(  -73,   25), M(  -95,   21), M(  -87,   25), M(  -59,   14),
        M(  -63,   30), M(  -63,    5), M(  -58,   13), M(  -45,   24), M(  -72,   34),
        M(  -48,   28), M(   11,    9), M(  -13,    5), M(    8,   -4), M(   36,   -1),
        M(  -41,   12), M(  -74,   13), M( -100,   11), M( -113,   17), M(  -55,   14),
        M(   -6,    9), M(  -17,    5), M(   -9,   10), M(  -25,   26), M(  -26,   28),
        M(   12,   27), M(    7,    8), M(   32,    0), M(   16,   -5), M(   24,    1),
        M(    9,    2), M(   15,  -39), M(    0,    0), M(  -15,  -41), M(  -24,   10),
        M(   -4,    8), M(    3,    8), M(   -3,   15), M(   -4,   20), M(  -11,   36),
        M(   -2,   24), M(   20,   11), M(   19,    6), M(   24,    1), M(   31,    3),
        M(   35,    4), M(  -84,   -7), M(  -88,  -14), M(  -78,  -11), M(   15,    9),
        M(   15,   12), M(    7,   14), M(    4,   19), M(   -3,   26), M(   -5,   32),
        M(    3,   20), M(    6,   19), M(   12,   11), M(   20,    8), M(   28,    4),
        M(   25,   10), M(   45,    4), M(   49,   -4), M(   50,    7), M(   21,   12),
        M(   13,   13), M(    5,   21), M(    3,   22), M(    3,   28), M(    1,   27),
        M(   -8,   29), M(    9,   18), M(    5,   19), M(   20,   12), M(   30,    6),
        M(   29,    8), M(   24,   12), M(   11,    7), M(   28,   12), M(   24,   12),
        M(   10,   14), M(   10,   21), M(    6,   26), M(    9,   25), M(    1,   29),
        M(   -6,   24), M(    4,   24), M(    8,   20), M(    4,   20), M(   13,   14),
        M(   15,    8), M(   10,   11), M(    5,    4), M(   13,   11), M(   16,   10),
        M(   12,   15), M(    8,   21), M(   12,   24), M(   15,   25), M(    8,   25),
        M(  -10,   26), M(    9,   25), M(   14,   22), M(    8,   23), M(    4,   19),
        M(    8,   15), M(   -5,   15), M(   -9,   14), M(   -1,   20), M(    5,   18),
        M(    7,   18), M(    7,   26), M(    8,   27), M(   14,   26), M(    8,   25),
        M(    2,   25), M(   16,   17), M(   13,   20), M(   -2,   26), M(   -3,   25),
        M(   -5,   21), M(   -8,   11), M(  -14,   14), M(   -9,   27), M(   -3,   18),
        M(    2,   20), M(    1,   30), M(    6,   29), M(   13,   26), M(    9,   25),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    4,    5), M(   24,   19), M(   16,   41), M(   -2,   46),
            M(   -2,   32), M(   -3,   28), M(   -6,   28), M(   -8,   39),
            M(   -4,   18), M(   -1,   24), M(   -2,   40), M(   -3,   38),
            M(    0,   26), M(   -6,   27), M(  -10,   29), M(   -9,   35),
            M(   -9,   29), M(    2,   37), M(    6,   35), M(   18,   28),
            M(   14,   24), M(   10,   25), M(   -4,   41), M(   -9,   49),
            M(   10,   46), M(   16,   54), M(   38,   41), M(   41,   33),
            M(   35,   22), M(   15,   46), M(   10,   60), M(    5,   73),
            M(   12,   72), M(   78,   61), M(  114,   43), M(   67,   36),
            M(   51,   50), M(   51,   81), M(   39,  106), M(   -3,  122),
            M(   56,  146), M(   73,  140), M(  206,   94), M(  226,  104),
            M(  198,  140), M(  185,  174), M(  158,  207), M(  163,  202),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   18,   18), M(   43,   12), M(   24,   26), M(    2,   37),
            M(    3,   41), M(    2,   43), M(   -7,   49), M(   -9,   50),
            M(   17,   24), M(   21,   22), M(    0,   35), M(   -2,   35),
            M(    5,   36), M(    2,   38), M(  -15,   44), M(  -17,   47),
            M(   26,   48), M(   21,   52), M(   15,   40), M(   16,   36),
            M(   23,   30), M(   18,   36), M(   -4,   46), M(  -27,   50),
            M(   41,   95), M(   39,   85), M(   31,   71), M(   38,   48),
            M(   58,   29), M(   53,   32), M(    5,   53), M(  -14,   52),
            M(   32,  175), M(   78,  165), M(   64,  137), M(   61,   83),
            M(   90,   28), M(  102,   21), M(   74,   30), M(   -2,   56),
            M(  229,  255), M(  210,  269), M(  175,  244), M(  219,  177),
            M(  246,   98), M(  263,   46), M(  126,   84), M(   74,   94),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -106,   28), M(  -73,   53), M(  -65,   55), M(  -64,   74),
            M(  -67,   78), M(  -74,   50), M(  -76,   34), M( -115,    6),
            M(  -74,   67), M(  -82,   75), M(  -65,   59), M(  -63,   79),
            M(  -61,   80), M(  -79,   61), M(  -95,   67), M( -100,   47),
            M(  -72,   55), M(  -59,   80), M(  -57,   83), M(  -53,   96),
            M(  -58,   96), M(  -71,   74), M(  -75,   58), M(  -91,   26),
            M(  -60,   83), M(  -37,   91), M(  -52,  110), M(  -49,  114),
            M(  -58,  113), M(  -64,  105), M(  -76,   84), M(  -83,   57),
            M(  -55,   77), M(  -58,   89), M(  -40,  110), M(  -58,  121),
            M(  -60,  127), M(  -54,  108), M(  -69,   77), M(  -78,   69),
            M(  -80,   67), M(  -57,   75), M(   -1,   95), M(   -3,   93),
            M(  -33,  104), M(  -49,  107), M(  -73,   76), M( -105,   59),
            M(  -55,   61), M( -102,   75), M(    3,   58), M(  -16,   90),
            M(  -14,   91), M(  -37,   69), M(  -91,   72), M(  -89,   53),
            M( -198,   -1), M( -169,   83), M( -204,  118), M(  -76,   78),
            M( -113,   85), M( -228,  116), M( -211,   87), M( -292,   22),
        },
        {
            
            M(  -64,  -26), M(  -45,   26), M(  -17,   16), M(   -8,   40),
            M(  -14,   33), M(  -24,   15), M(  -31,   15), M(  -73,    8),
            M(  -31,   18), M(  -39,   37), M(  -14,   19), M(   -8,   36),
            M(   -2,   38), M(  -17,   28), M(  -51,   38), M(  -52,   16),
            M(  -33,   11), M(  -15,   32), M(   -3,   39), M(   -0,   55),
            M(    9,   55), M(   -9,   36), M(   -9,   20), M(  -38,    3),
            M(  -13,   36), M(   10,   44), M(    9,   64), M(   14,   65),
            M(   23,   60), M(   15,   53), M(   19,   35), M(   -4,   21),
            M(  -15,   41), M(    4,   38), M(   29,   59), M(   28,   71),
            M(   21,   69), M(   24,   57), M(    9,   31), M(    6,   20),
            M(  -56,   31), M(   15,   27), M(   32,   56), M(   52,   52),
            M(   65,   46), M(   66,   41), M(   19,   11), M(   -4,    1),
            M(  -27,    8), M(  -21,   29), M(   49,   12), M(   77,   38),
            M(   55,   32), M(   43,   14), M(  -26,   16), M(    3,   -2),
            M( -221,  -25), M( -160,   44), M( -144,   57), M(  -53,   41),
            M(  -39,   22), M( -131,   43), M(  -16,    3), M( -176,  -43),
        },
    },
    {
        {
            
            M(  -49,   17), M(  -61,   34), M(  -51,   36), M(  -52,   49),
            M(  -47,   46), M(  -44,   49), M(  -41,   44), M(  -33,   19),
            M(  -38,    1), M(  -26,   20), M(  -38,   36), M(  -44,   48),
            M(  -46,   53), M(  -41,   40), M(  -35,   22), M(  -41,   18),
            M(  -29,   43), M(  -33,   52), M(  -36,   61), M(  -38,   64),
            M(  -40,   62), M(  -38,   57), M(  -34,   46), M(  -46,   36),
            M(  -36,   37), M(  -38,   54), M(  -42,   68), M(  -28,   68),
            M(  -27,   71), M(  -38,   65), M(  -40,   50), M(  -56,   36),
            M(  -61,   48), M(  -28,   57), M(  -30,   64), M(  -23,   72),
            M(  -13,   69), M(  -37,   64), M(  -32,   58), M(  -64,   56),
            M(  -50,   49), M(  -37,   62), M(  -20,   68), M(  -17,   58),
            M(  -23,   63), M(  -15,   65), M(  -45,   71), M(  -56,   51),
            M(  -88,   56), M(  -58,   58), M(  -40,   55), M(  -54,   61),
            M(  -64,   66), M(  -49,   68), M(  -55,   71), M( -104,   69),
            M(  -96,   57), M( -100,   57), M( -207,   78), M( -157,   74),
            M( -168,   84), M( -180,   79), M( -117,   79), M( -113,   77),
        },
        {
            
            M(   28,  -13), M(   -2,    4), M(   17,    6), M(    9,   14),
            M(   10,   15), M(    4,   11), M(    7,   14), M(   11,   -6),
            M(   32,  -21), M(   62,  -13), M(   37,   -1), M(   31,    9),
            M(   14,   13), M(   14,    7), M(    9,   -7), M(   17,  -16),
            M(   32,   -2), M(   48,    9), M(   52,   14), M(   32,   17),
            M(   30,   24), M(   18,   19), M(   19,    9), M(   11,    1),
            M(   22,    3), M(   38,   17), M(   35,   23), M(   61,   26),
            M(   39,   29), M(   33,   22), M(   30,    5), M(   24,   -6),
            M(   13,   24), M(   39,   23), M(   42,   33), M(   53,   34),
            M(   74,   24), M(   39,   14), M(   51,   12), M(   15,   -0),
            M(    8,   23), M(   41,   33), M(   51,   31), M(   54,   28),
            M(   70,   14), M(   76,   16), M(   47,    5), M(   20,    1),
            M(  -33,   33), M(   -4,   43), M(   20,   34), M(  -11,   31),
            M(   12,   22), M(   50,    9), M(   19,   12), M(  -33,    5),
            M(  -32,   44), M(  -74,   38), M(  -79,   34), M(  -87,   40),
            M( -139,   38), M( -115,   32), M(   27,    8), M(  -10,   24),
        },
    },
    {
        {
            
            M(  -85,   77), M(  -59,   85), M(  -58,   93), M(  -60,   90),
            M(  -60,   94), M(  -69,  104), M(  -74,  102), M(  -76,   96),
            M( -149,   95), M(  -67,   75), M(  -61,   75), M(  -70,   90),
            M(  -69,   95), M(  -80,  105), M(  -83,   98), M( -116,  107),
            M(  -89,   83), M(  -54,   95), M(  -68,   94), M(  -73,  100),
            M(  -72,  105), M(  -88,  116), M(  -80,  118), M(  -94,  107),
            M(  -80,  107), M(  -52,  109), M(  -69,  113), M(  -72,  120),
            M(  -71,  127), M(  -84,  138), M(  -88,  139), M(  -87,  123),
            M(  -45,  116), M(  -25,  105), M(  -22,  107), M(  -26,  119),
            M(  -19,  124), M(  -48,  137), M(  -58,  133), M(  -71,  135),
            M(  -25,  117), M(   36,   92), M(   32,   99), M(   17,  105),
            M(   -4,  117), M(  -32,  133), M(  -23,  122), M(  -71,  139),
            M(  -39,  127), M(  -46,  129), M(   -5,  108), M(  -37,  141),
            M(  -34,  144), M(  -50,  146), M(  -75,  150), M(  -69,  144),
            M(  -10,  143), M(  -27,  146), M(  -70,  152), M(  -78,  151),
            M(  -87,  158), M(  -97,  168), M(  -66,  157), M(  -62,  153),
        },
        {
            
            M(  -28,   50), M(   -3,   47), M(    8,   46), M(   11,   40),
            M(   14,   33), M(   21,   35), M(   24,   33), M(   -1,   36),
            M(  -86,   60), M(  -28,   41), M(  -12,   43), M(   -9,   44),
            M(    2,   38), M(   11,   28), M(   18,   24), M(  -36,   44),
            M(  -32,   45), M(    5,   50), M(  -17,   54), M(   -7,   48),
            M(   -5,   42), M(    3,   38), M(   13,   44), M(   -7,   38),
            M(  -12,   65), M(   17,   65), M(   -5,   74), M(    2,   65),
            M(    7,   54), M(    9,   53), M(   11,   56), M(   -1,   51),
            M(   21,   74), M(   33,   67), M(   50,   62), M(   62,   62),
            M(   60,   51), M(   49,   51), M(   52,   45), M(   41,   50),
            M(   33,   70), M(   87,   47), M(   70,   64), M(   89,   49),
            M(  101,   44), M(   92,   40), M(  110,   32), M(   53,   53),
            M(   34,   74), M(   41,   72), M(   51,   72), M(   46,   83),
            M(   52,   73), M(   79,   47), M(   38,   63), M(   49,   59),
            M(   75,   71), M(   42,   87), M(   22,   97), M(   10,   94),
            M(   20,   85), M(   79,   61), M(   85,   66), M(   52,   82),
        },
    },
    {
        {
            
            M( -153,  108), M( -143,   90), M( -135,  104), M( -127,  122),
            M( -127,  136), M( -134,  127), M( -140,  133), M( -139,  145),
            M( -149,  117), M( -124,   84), M( -116,   80), M( -125,  140),
            M( -128,  149), M( -124,  116), M( -132,  133), M( -142,  140),
            M( -118,  132), M( -115,  146), M( -127,  163), M( -132,  148),
            M( -135,  149), M( -135,  160), M( -129,  148), M( -143,  144),
            M( -114,  171), M( -117,  169), M( -126,  171), M( -146,  192),
            M( -148,  192), M( -144,  158), M( -139,  171), M( -145,  157),
            M( -119,  170), M( -112,  203), M( -132,  196), M( -151,  198),
            M( -159,  200), M( -155,  165), M( -157,  194), M( -158,  180),
            M( -150,  184), M( -118,  192), M( -127,  171), M( -128,  174),
            M( -147,  162), M( -159,  168), M( -162,  177), M( -170,  195),
            M( -134,  202), M( -189,  255), M( -101,  157), M( -207,  218),
            M( -209,  208), M( -166,  173), M( -211,  218), M( -170,  196),
            M(  -83,  142), M( -116,  180), M( -145,  169), M( -161,  170),
            M( -149,  167), M( -159,  182), M( -154,  183), M( -182,  202),
        },
        {
            
            M(   29,  -24), M(   49,  -52), M(   62,  -56), M(   62,  -11),
            M(   65,  -14), M(   59,  -24), M(   55,   10), M(   60,  -14),
            M(   22,  -14), M(   52,  -21), M(   84,  -60), M(   77,    3),
            M(   69,   -1), M(   81,  -29), M(   83,  -23), M(   73,  -12),
            M(   42,   14), M(   67,   15), M(   65,   30), M(   63,   16),
            M(   64,   17), M(   74,   12), M(   82,   -3), M(   81,  -12),
            M(   49,   30), M(   62,   48), M(   46,   53), M(   57,   72),
            M(   54,   57), M(   72,   31), M(   80,   15), M(   90,   -7),
            M(   52,   45), M(   40,   75), M(   42,   45), M(   47,   69),
            M(   65,   57), M(   76,   31), M(  102,   28), M(   84,   -1),
            M(   40,   66), M(   59,   29), M(   65,   30), M(   58,   34),
            M(   87,   34), M(   70,   41), M(  106,   -8), M(   75,   -5),
            M(   46,   44), M(    4,   82), M(   45,   42), M(   -5,   83),
            M(  -11,   91), M(   79,   28), M(   40,   42), M(   58,    2),
            M(   57,   36), M(   63,   42), M(   59,   31), M(   47,   45),
            M(   32,   47), M(  157,  -45), M(   83,   -0), M(   92,  -18),
        },
    },
    {
        {
            
            M(  201, -211), M(  244,  -86), M(  139,  -57), M(  231,  -42),
            M(  198,  -67), M(  137,  -66), M(  107,  -64), M(  201, -219),
            M(  144,  -85), M(  209,  -30), M(  225,  -42), M(  277,  -55),
            M(  256,  -55), M(  257,  -46), M(   95,  -15), M(  157, -100),
            M(  156,  -50), M(  244,  -29), M(  275,  -36), M(  280,  -42),
            M(  286,  -45), M(  298,  -38), M(  204,  -23), M(  134,  -55),
            M(   84,  -37), M(  201,  -39), M(  217,  -24), M(  173,  -14),
            M(  190,  -17), M(  223,  -24), M(  163,  -32), M(   56,  -38),
            M(   49,  -50), M(  124,  -25), M(  164,  -13), M(   97,    3),
            M(  125,    3), M(  135,   -6), M(  129,  -18), M(   22,  -38),
            M(   28,  -31), M(   34,   -5), M(   63,   -0), M(   45,   13),
            M(   58,   17), M(   63,    8), M(   39,    3), M(    7,  -12),
            M(   61,  -22), M(   16,    2), M(    8,   11), M(  -49,   24),
            M(  -14,   22), M(  -11,   27), M(   21,    7), M(   39,  -11),
            M(   58,  -75), M(   39,  -25), M(   14,   -4), M(  -16,  -15),
            M(   -6,  -24), M(  -19,    6), M(   45,  -18), M(   53,  -70),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}