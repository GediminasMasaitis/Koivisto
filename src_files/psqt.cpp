
/****************************************************************************************************
 *                                                                                                  *
 *                                     Koivisto UCI Chess engine                                    *
 *                                   by. Kim Kahre and Finn Eggers                                  *
 *                                                                                                  *
 *                 Koivisto is free software: you can redistribute it and/or modify                 *
 *               it under the terms of the GNU General Public License as published by               *
 *                 the Free Software Foundation, either version 3 of the License, or                *
 *                                (at your option) any later version.                               *
 *                    Koivisto is distributed in the hope that it will be useful,                   *
 *                  but WITHOUT ANY WARRANTY; without even the implied warranty of                  *
 *                   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                  *
 *                           GNU General Public License for more details.                           *
 *                 You should have received a copy of the GNU General Public License                *
 *                 along with Koivisto.  If not, see <http://www.gnu.org/licenses/>.                *
 *                                                                                                  *
 ****************************************************************************************************/

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  386, -271), M(  125, -136), M( -150,  137), M(  -88, -112), M(  -89,   12),
        M(  -51,  -48), M(  -70,  -26), M(  -34,  -78), M(  -26,  -70), M(  -52,  -30),
        M(  -66,  -12), M(  -41,    7), M(  -45,   76), M(    1,  124), M( -270,  334),
        M(  -62,   40), M(  -48,   28), M(   10,  -56), M(  -16,   12), M(  -53,    7),
        M(  -48,  -27), M(  -62,    9), M(  -31,  -38), M(  -29,  -48), M(  -28,  -32),
        M(  -16,  -17), M(  -10,  -25), M(  -24,  -13), M(    2,   -4), M(  -13,   72),
        M( -189,   43), M(  -32,    9), M(   14,  -23), M(   -1,  -11), M(  -34,   12),
        M(  -12,  -32), M(  -12,  -19), M(   -2,  -32), M(   -5,  -48), M(  -20,  -22),
        M(  -14,  -21), M(  -11,  -11), M(   -5,  -10), M(   -3,   -6), M(  -16,   52),
        M(  -95,  102), M(    4,   -1), M(   -0,   -3), M(   -0,    1), M(  -18,    9),
        M(   -9,   -9), M(   11,  -18), M(   19,  -12), M(   -1,   -8), M(   -5,  -19),
        M(   -9,   -3), M(  -14,    3), M(   -9,    2), M(   -6,    1), M(    7,  -19),
        M(   -1,  -17), M(   -9,   14), M(   -5,   -2), M(    4,   -5), M(  -13,   11),
        M(    1,    4), M(   27,    1), M(   38,   -2), M(    9,    4), M(    4,    6),
        M(   -3,    6), M(   -2,   -2), M(  -13,   13), M(   -8,    6), M(    1,  -15),
        M(  -23,    8), M(   -3,  -17), M(   -7,    7), M(   -2,    5), M(   -5,   12),
        M(   -2,   13), M(   -0,  -18), M(   15,   -6), M(  -10,  -13), M(    3,   18),
        M(    7,    7), M(   -9,    5), M(  -14,   10), M(   -2,   -3), M(   16,  -23),
        M(  -35,  -16), M(   37,  -13), M(   22,   -9), M(   12,   -5), M(    3,   14),
        M(  -10,   26), M(  -10,   -8), M(    0,    0), M(  -18,    3), M(   -1,   13),
        M(    8,   13), M(   -1,   -1), M(   10,   -6), M(    3,  -10), M(   23,  -18),
        M(  -58,   17), M(   -7,   -5), M(   11,   -1), M(   27,  -15), M(    8,   10),
        M(  -38,   30), M(  -71,   10), M(  -48,   23), M(  -68,    7), M(  -24,   22),
        M(   -5,    7), M(  -19,   -2), M(  -18,   11), M(   -9,    8), M(   27,   -8),
        M(   35,   15), M( -109,   46), M(  -37,    0), M(  -83,   -0), M(  -60,   16),
        M(  -44,   14), M(  -77,   39), M(  -78,   32), M(  -93,   52), M(  -91,   27),
        M( -114,   46), M(  -54,    6), M(  -34,   13), M(  -54,    8), M( -129,   21),
        M( -173,    3), M( -232,   52), M(   -8,   11), M(  -41,  -21), M( -235,   60),
        M(  -42,   28), M( -152,   36), M( -127,   46), M(  -78,   17), M( -234,   62),
        M( -102,   37), M( -201,   30), M( -158,   31), M( -125,   52), M(   11,    4),
        M( -492,   57), M( -251,   55), M(  108,   -5), M(  140,  -44), M( -238,   58),
        M( -243,   44), M( -343,   92), M( -196,   43), M( -278,   61), M( -347,   72),
        M(  228,   10), M( -444,   81), M( -334,   63), M( -106,   44), M( -463,  104),
        M( -822,  137), M( -265,    8), M(  387,  -34), M( -435,  146), M( -203,   36),
        M( -659,  118), M( -139,   24), M(    4,   -2), M( -122,   33), M(    2,   31),
        M(  152,  102), M(  -97,  101), M( -380,    4), M( -164,  -76), M( -721,  130),
        M( -800,  555), M(-1722,  314), M( 1298, -294), M( -111, -245), M(  185, -318),
        M(  -59,  160), M( -682,  260), M( -769,  260), M(-1196,  454), M(  -87,  151),
        M( -535,  299), M(-1128,  445), M(  257, -318), M(  330,   54), M(  635,  356),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(-1126,   39), M(-1727,  328), M(  -43,   61), M(-1683,  399), M(  205,   85),
        M(  699,   55), M( -383,  146), M(  335,  170), M(  -63,  140), M(  221,  290),
        M(-1372,  397), M( -777,  187), M(-1066,  118), M( -943,  133), M( -536, -200),
        M( -720,   84), M( -152,   51), M(-1157,  271), M( -595,  209), M( -262,  205),
        M( -271,  348), M( -827,  379), M( -340,  211), M( -230,  214), M(  -84,  198),
        M( -501,  243), M( -200,  121), M( -838,  209), M(-1190,  154), M(  -15,  -85),
        M( -285,   27), M( -488,  132), M( -619,  157), M( -447,  156), M( -367,  186),
        M( -356,  263), M( -378,  269), M( -403,  262), M( -223,  183), M( -291,  192),
        M( -324,  125), M( -431,   97), M( -651,   88), M( -212,    4), M( -347,   51),
        M(   80,  -28), M( -229,   77), M( -200,   64), M( -204,   70), M( -245,  125),
        M( -287,  137), M( -237,  168), M(   22,   63), M( -147,  143), M(  -96,   86),
        M( -236,  102), M( -197,   52), M( -357,   68), M( -487,   93), M( -137,   18),
        M( -202,   18), M( -113,   20), M(  -98,   29), M(  -60,   26), M(  -77,   55),
        M( -107,   49), M(  -57,   42), M(  -64,   43), M( -169,   59), M(  -15,   33),
        M(  -52,   39), M( -102,   49), M(  -61,   18), M( -103,    5), M( -192,   50),
        M(   10,  -13), M(  -59,    6), M(  -61,   17), M(    1,    9), M(   36,    7),
        M(   22,   -9), M(   68,   17), M(    5,   28), M(   17,   21), M(   18,  -14),
        M(  -22,   25), M(  -43,   19), M(   -4,   18), M(   60,    1), M(  -70,   43),
        M(   55,   -7), M(   14,   -2), M(   -4,   14), M(  -14,    6), M(   48,   -7),
        M(   41,   -7), M(   42,   18), M(    0,    0), M(   21,   15), M(   -3,   -3),
        M(    8,    7), M(  -18,   22), M(  -21,   26), M(   -6,   27), M(   -2,   26),
        M(  -41,   10), M(   30,    6), M(   20,   10), M(  -17,    4), M(   13,    7),
        M(    4,    7), M(  101,   98), M(  -54,   35), M(   67,   95), M(    8,    6),
        M(  -14,   21), M(  -21,   25), M(  -19,   39), M(  -33,   43), M(  -19,   33),
        M(  -21,   33), M(   27,   12), M(   17,   11), M(   -3,   16), M(    9,   13),
        M(    7,   29), M(   -7,   37), M(   -9,   33), M(   13,   33), M(   -5,   37),
        M(   -6,   20), M(  -16,   29), M(  -19,   42), M(  -19,   49), M(  -19,   43),
        M(    0,   44), M(   18,   25), M(   12,   20), M(    4,   19), M(    3,   16),
        M(   -1,   18), M(   -2,   24), M(  -28,   22), M(    8,   19), M(   -3,   21),
        M(  -15,   23), M(   -7,   33), M(  -12,   41), M(   -6,   44), M(  -14,   46),
        M(   -9,   42), M(   15,   23), M(   22,   18), M(    6,   26), M(   10,   15),
        M(   11,   16), M(   -1,   19), M(   -7,   12), M(   -5,   23), M(    8,   11),
        M(    2,   19), M(   -6,   33), M(    5,   34), M(    9,   34), M(   -9,   48),
        M(  -19,   54), M(   23,   30), M(   25,   19), M(   14,   24), M(   17,   11),
        M(   24,    8), M(  -10,   24), M(  -14,   25), M(   -4,   30), M(    3,   28),
        M(    9,   24), M(    9,   33), M(   13,   35), M(   20,   32), M(   -3,   48),
        M(  -26,   68), M(   25,   24), M(   33,   14), M(   28,   13), M(   26,   14),
        M(   26,    3), M(    2,   16), M(   -4,   24), M(   10,   26), M(    8,   32),
        M(   10,   28), M(   10,   41), M(   23,   33), M(   25,   26), M(    6,   37),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(  -14,   36), M(   26,   33), M(    8,   47), M(    6,   65),
            M(  -11,   44), M(   -9,   49), M(   -2,   39), M(  -27,   55),
            M(    3,   28), M(   17,   24), M(    7,   46), M(   28,   37),
            M(   19,   31), M(   13,   30), M(  -10,   29), M(  -22,   40),
            M(   -3,   41), M(   18,   50), M(   42,   37), M(   49,   40),
            M(   61,   28), M(   52,   16), M(    7,   42), M(   -8,   54),
            M(   62,   45), M(   75,   45), M(   89,   40), M(  101,   24),
            M(   67,   27), M(   58,   54), M(   44,   58), M(   15,   87),
            M(   88,   47), M(  121,   40), M(  119,   47), M(  105,   37),
            M(   83,   69), M(   60,  103), M(   48,  119), M(   20,  142),
            M(   82,  114), M(  132,   85), M(  179,   43), M(  237,   63),
            M(  194,  133), M(  188,  175), M(  157,  215), M(  197,  214),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    3,   47), M(   42,   32), M(   10,   43), M(  -26,   71),
            M(  -34,   74), M(  -21,   71), M(  -52,   91), M(  -80,   95),
            M(    9,   44), M(   16,   41), M(   -1,   50), M(  -14,   56),
            M(    9,   50), M(   16,   46), M(  -55,   69), M(  -70,   80),
            M(   21,   79), M(   -7,   84), M(   10,   69), M(   33,   52),
            M(   45,   49), M(   27,   45), M(  -10,   61), M(  -59,   75),
            M(   38,  148), M(   34,  127), M(   53,  104), M(   44,   68),
            M(   80,   44), M(   87,   34), M(   36,   58), M(  -12,   82),
            M(   29,  270), M(   59,  253), M(   41,  209), M(   65,  126),
            M(   99,   42), M(  124,   32), M(   84,   50), M(  -15,   91),
            M(  165,  361), M(  112,  375), M(   85,  357), M(  183,  232),
            M(  210,   84), M(  184,   36), M(  117,   61), M(  -10,  137),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -136,   86), M(  -95,   88), M(  -71,   67), M(  -56,   87),
            M(  -75,   97), M(  -98,   82), M(  -83,   67), M( -153,   36),
            M(  -88,   88), M(  -87,   85), M(  -49,   55), M(  -55,   86),
            M(  -57,   85), M(  -81,   76), M(  -95,   86), M( -122,   76),
            M( -111,  123), M(  -42,   82), M(  -56,  102), M(  -45,  102),
            M(  -62,  103), M(  -70,   92), M(  -71,   81), M( -117,   82),
            M(  -74,  114), M(  -72,  108), M(  -57,  113), M(  -81,  128),
            M(  -98,  132), M(  -69,  110), M( -108,  107), M(  -85,   95),
            M(  -36,  101), M(  -74,  122), M(  -51,  146), M(  -67,  124),
            M(  -93,  165), M(  -89,  130), M(  -95,  121), M(  -76,  111),
            M(  -18,  101), M(  -92,  119), M( -186,  255), M(  -48,  156),
            M(  -51,  152), M( -188,  201), M( -109,  108), M( -104,   87),
            M(  -40,   71), M(  -60,   82), M(  -22,  115), M(  -82,  212),
            M( -193,  222), M(   56,   87), M( -100,  109), M(  -88,   84),
            M( -118, -119), M( -152,   73), M( -238,   49), M( -210,  136),
            M( -246,  157), M( -303,  161), M( -256,  141), M( -145,   16),
        },
        {
            
            M( -107,   90), M(  -66,   98), M(  -23,   58), M(  -44,   90),
            M(  -47,   91), M(  -86,  103), M(  -73,   87), M( -178,   26),
            M(  -70,  116), M(  -80,   91), M(  -23,   62), M(  -28,   81),
            M(  -24,   86), M(  -44,   82), M(  -76,   81), M(  -89,   76),
            M(  -78,   96), M(  -34,   80), M(   -6,   71), M(  -24,   98),
            M(  -26,   95), M(  -34,   83), M(  -25,   72), M(  -80,   81),
            M(  -34,  107), M(  -30,   83), M(  -34,  108), M(  -33,  116),
            M(  -20,   98), M(  -20,  110), M(  -30,   75), M(  -55,   92),
            M(  -24,   97), M(  -22,  103), M(  -28,  117), M(   -8,  132),
            M(  -15,  115), M(   11,  109), M(  -41,   91), M(    3,   79),
            M(  -53,   91), M(   10,   74), M(  -50,  121), M(   12,  137),
            M(   11,  123), M(  -28,  125), M(  -39,   78), M(   21,   38),
            M(  -43,   39), M(  -22,   87), M(  140,   73), M(  -65,  141),
            M(   18,  115), M(   77,   68), M(  -37,   59), M(   -1,   19),
            M(  -83,  -24), M( -194,  113), M( -217,  118), M( -159,  112),
            M( -171,   81), M( -297,   91), M(  -94,  -14), M( -147,  -86),
        },
    },
    {
        {
            
            M(  -68,  -10), M(  -34,   20), M(  -92,   34), M(  -53,   39),
            M(  -75,   35), M(  -57,   46), M(  -25,   -8), M(  -54,    3),
            M(  -17,  -21), M(  -13,  -13), M(  -18,   12), M(  -44,   18),
            M(  -51,   37), M(  -30,   17), M(  -12,    1), M(  -36,    5),
            M(  -43,   35), M(   -7,   21), M(  -33,   46), M(  -33,   46),
            M(  -50,   45), M(  -38,   61), M(  -19,   39), M(  -33,   41),
            M(   -8,   11), M(  -87,   41), M(  -33,   24), M(  -63,   53),
            M(  -41,   68), M(  -52,   59), M(  -76,   58), M(  -48,    3),
            M(  -75,   44), M(  -35,   22), M(  -98,   60), M(  -37,   53),
            M(  -50,   72), M(  -61,   67), M(  -58,   36), M(  -65,   36),
            M(  -23,   41), M( -136,   78), M( -267,  130), M( -164,   97),
            M(  -95,   99), M( -243,  139), M(  -87,   56), M( -122,   68),
            M(   -4,  -37), M( -124,   27), M(  -94,   79), M( -253,  135),
            M( -301,  117), M(  -56,   47), M(  -74,   48), M( -106,   71),
            M(  -10,    2), M( -169,   66), M( -260,   20), M( -285,   93),
            M( -373,  103), M( -306,  110), M( -246,   99), M( -131,   42),
        },
        {
            
            M(   12,    4), M(    6,   12), M(  -36,   26), M(  -33,   33),
            M(  -35,   39), M(  -34,   33), M(  -55,   64), M( -104,   57),
            M(    6,   25), M(   47,   14), M(   30,    0), M(    2,   22),
            M(  -27,   36), M(  -19,   44), M(  -16,   34), M(  -25,   23),
            M(   16,   41), M(   30,   40), M(   26,   44), M(    6,   30),
            M(    2,   50), M(   -8,   50), M(   -1,   37), M(  -40,   42),
            M(  -10,   28), M(  -21,   36), M(   -1,   49), M(   31,   44),
            M(  -20,   53), M(   -6,   50), M(  -75,   44), M(    9,    9),
            M(  -27,   34), M(    1,   29), M(    5,   58), M(   16,   58),
            M(    6,   54), M(  -44,   47), M(    9,   21), M(  -30,   26),
            M(  -76,   51), M(  -29,   62), M( -109,   70), M(   18,   50),
            M(  -52,   47), M( -199,   95), M(  -32,   40), M(   33,    5),
            M(  -49,   53), M(  -23,   45), M(  -23,   50), M( -213,   81),
            M( -206,   81), M(  -28,   47), M(  -66,   47), M(   12,  -62),
            M( -111,   94), M( -180,   90), M( -303,  104), M( -296,  100),
            M( -262,   63), M( -274,   23), M( -122,   54), M(  -71,   48),
        },
    },
    {
        {
            
            M( -114,   85), M(  -97,  106), M( -108,  116), M(  -97,  104),
            M( -112,  128), M( -118,  138), M( -127,  129), M( -134,  137),
            M( -124,  103), M(  -77,   86), M( -110,  118), M( -121,  126),
            M( -127,  140), M( -137,  141), M( -156,  137), M( -154,  132),
            M(  -84,   95), M(  -73,  111), M( -116,  133), M( -134,  130),
            M( -154,  148), M( -152,  151), M( -140,  141), M( -166,  155),
            M( -114,  132), M( -116,  136), M( -137,  155), M( -148,  149),
            M( -153,  155), M( -149,  166), M( -180,  181), M( -144,  169),
            M(  -88,  149), M( -100,  157), M( -106,  176), M( -138,  166),
            M( -134,  173), M( -131,  189), M( -148,  194), M( -163,  201),
            M(  -69,  160), M(  -61,  168), M(  -88,  182), M(  -99,  169),
            M( -113,  187), M( -133,  204), M( -130,  205), M( -147,  201),
            M(  -59,  187), M(  -84,  218), M(  -92,  209), M( -116,  225),
            M( -116,  234), M( -122,  240), M( -159,  238), M( -129,  208),
            M(  -86,  182), M( -197,  209), M( -645,  291), M( -512,  298),
            M( -435,  277), M( -353,  273), M( -225,  224), M( -250,  221),
        },
        {
            
            M( -105,  107), M(  -69,  115), M(  -83,  116), M(  -72,  114),
            M(  -76,  113), M(  -64,  107), M(  -61,   95), M(  -91,  105),
            M(  -95,  114), M(  -71,  107), M(  -72,  106), M(  -93,  131),
            M(  -79,  119), M(  -93,  111), M(  -82,   97), M( -118,  105),
            M(  -75,  127), M(  -49,  109), M(  -90,  138), M( -108,  140),
            M( -108,  131), M(  -95,  135), M(  -65,   98), M( -106,  112),
            M(  -62,  136), M(  -80,  139), M(  -96,  151), M( -110,  154),
            M( -102,  145), M(  -85,  142), M(  -95,  131), M(  -84,  125),
            M(  -24,  140), M(  -53,  143), M(  -35,  152), M( -104,  169),
            M(  -93,  155), M(  -79,  160), M(  -53,  138), M(  -83,  150),
            M(  -38,  146), M(  -34,  156), M(  -56,  163), M(  -48,  157),
            M(  -76,  157), M(  -94,  170), M(  -35,  157), M(  -56,  143),
            M(    3,  152), M(  -51,  187), M(  -51,  200), M(  -71,  212),
            M(  -66,  195), M(  -36,  187), M(  -78,  198), M(  -27,  166),
            M( -119,  168), M(  -97,  179), M( -147,  184), M( -253,  197),
            M( -498,  243), M( -401,  221), M( -126,  175), M(  -46,  177),
        },
    },
    {
        {
            
            M( -137,   93), M( -131,   41), M( -164,   98), M( -125,   76),
            M( -125,   97), M( -158,  130), M( -148,  115), M( -160,  134),
            M( -152,   74), M( -121,   51), M( -146,   99), M( -146,  130),
            M( -151,  130), M( -151,  128), M( -167,  141), M( -181,  157),
            M( -175,  151), M( -161,  179), M( -180,  202), M( -204,  197),
            M( -203,  194), M( -212,  228), M( -173,  169), M( -171,  177),
            M( -202,  175), M( -211,  195), M( -237,  209), M( -221,  211),
            M( -239,  260), M( -233,  236), M( -243,  237), M( -206,  245),
            M( -221,  177), M( -266,  268), M( -280,  276), M( -233,  189),
            M( -248,  254), M( -247,  231), M( -241,  242), M( -215,  227),
            M( -249,  173), M( -215,  195), M( -276,  283), M( -255,  263),
            M( -259,  217), M( -229,  195), M( -231,  199), M( -222,  228),
            M( -166,  188), M( -271,  317), M( -237,  189), M( -407,  349),
            M( -344,  313), M( -284,  267), M( -253,  248), M( -219,  212),
            M( -152,  197), M( -213,  257), M( -542,  445), M( -407,  348),
            M(-1498, 1169), M( -234,  236), M( -246,  249), M( -241,  224),
        },
        {
            
            M(  -14,  171), M(   31,   58), M(   69,   27), M(   50,   14),
            M(   81,   10), M(   41,   56), M(   47,   47), M(   45,   69),
            M(  -14,   63), M(   46,   81), M(   68,   49), M(   66,   71),
            M(   36,  123), M(   58,   52), M(   60,   31), M(   76,   41),
            M(   21,  166), M(   18,  139), M(   26,  172), M(   10,  144),
            M(   14,  128), M(   11,  139), M(   38,   84), M(   32,   93),
            M(   18,  105), M(  -18,  211), M(  -29,  201), M(   -1,  164),
            M(    3,  159), M(  -12,  131), M(  -12,  124), M(   16,   79),
            M(   28,  129), M(  -36,  192), M(  -10,  187), M(  -58,  210),
            M(  -44,  197), M(  -33,  162), M(  -38,  170), M(  -29,  127),
            M(  -12,  165), M(    4,  148), M(  -18,  172), M(  -50,  194),
            M(  -25,  207), M(  -32,  197), M(  -14,  113), M(  -21,   69),
            M(   39,  120), M(  -26,  185), M(  -54,  196), M( -145,  288),
            M( -185,  296), M(  -30,  144), M(  -44,  178), M(   18,  116),
            M(   18,   74), M(   -2,  140), M(   21,  150), M( -143,  258),
            M( -109,  253), M( -157,  240), M(   -3,  153), M(    8,  120),
        },
    },
    {
        {
            
            M(  343, -238), M(   50,   21), M(  141,   18), M( -221,  109),
            M( -373,  155), M( -173,   40), M( -423,  122), M(  152, -264),
            M(  264,  -63), M(  -67,   80), M(  -94,   75), M(   15,   55),
            M(  -40,   59), M(  -51,   60), M(  -22,   47), M(  158,  -61),
            M(   45,  -47), M(   93,    1), M(   87,    1), M(  155,  -12),
            M(  165,   -3), M(  173,  -11), M(   81,   -3), M(  173,  -66),
            M(  -23,  -50), M(   28,  -25), M(  -26,    2), M(   -7,    3),
            M(  -40,    8), M(   10,   -2), M(  -40,   -9), M(  -60,  -24),
            M( -141,  -22), M( -142,   -2), M( -111,    1), M( -169,   21),
            M( -169,   31), M( -154,   20), M( -172,   27), M( -179,   -3),
            M( -109,  -31), M(  -98,   -7), M( -137,    6), M( -161,   20),
            M( -131,   24), M( -137,   28), M( -108,   19), M( -146,    7),
            M(    6,  -31), M(   -9,  -12), M(  -58,   -1), M(  -93,    6),
            M(  -86,   19), M(  -24,    3), M(  -24,    3), M(  -21,  -18),
            M(   67,  -54), M(   93,  -60), M(   62,  -30), M(  -37,    2),
            M(   -1,  -23), M(  -24,    5), M(   67,  -20), M(   39,  -38),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};
// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][14][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+8][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}