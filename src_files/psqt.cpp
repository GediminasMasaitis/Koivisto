//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    4,   68), M(   11,  -85), M(  -87,   42), M( -174,   49), M(  -55,  -18),
        M(  -89,   -5), M(  -41,  -38), M(   14,  -80), M(    6,  -52), M(  -66,   -7),
        M(  -48,    3), M(  -71,   27), M(  -18,   27), M(  -18,   25), M(  -40,   51),
        M(  -10,  -64), M(  -36,    3), M(  -26,   -9), M(  -56,   -6), M(  -31,   -6),
        M(  -54,   -1), M(  -15,  -20), M(  -45,   -5), M(  -34,  -21), M(  -26,  -12),
        M(  -18,  -21), M(  -19,    2), M(  -21,    4), M(    1,    4), M(    6,   -5),
        M(  -55,  -21), M(  -15,  -18), M(  -14,    0), M(  -14,  -11), M(  -41,    1),
        M(  -27,  -15), M(  -19,  -14), M(   -7,  -14), M(  -12,  -24), M(  -20,  -17),
        M(  -10,  -15), M(  -13,    0), M(   -7,   -1), M(   -8,   -3), M(   -6,  -11),
        M(  -39,    2), M(   10,  -11), M(   -6,    7), M(   -5,    0), M(  -13,    4),
        M(   -7,   -4), M(    6,   -0), M(   17,  -10), M(   -0,  -11), M(  -11,   -4),
        M(  -13,   -0), M(  -11,    1), M(   -8,    0), M(   -4,   -4), M(    7,  -19),
        M(  -17,    1), M(    7,   -6), M(  -10,    0), M(   -6,    3), M(   -7,    6),
        M(    0,    8), M(   22,    5), M(   34,    1), M(    8,    4), M(    4,    6),
        M(   -6,    1), M(   -6,    0), M(  -10,    4), M(   -7,   -0), M(    4,  -18),
        M(  -71,   13), M(   -3,   -8), M(  -11,    7), M(   -4,   -1), M(    2,    6),
        M(    0,   12), M(   -7,  -15), M(   11,   -9), M(   -6,   -7), M(    0,    8),
        M(   -3,    7), M(   -9,    2), M(  -11,    4), M(   -6,    0), M(    4,  -13),
        M(  -54,    3), M(    5,   -2), M(  -17,    6), M(   -2,    2), M(   12,    6),
        M(    2,   14), M(   -3,   -5), M(    0,    0), M(   10,   -4), M(    2,   13),
        M(   -3,    8), M(  -12,    6), M(   -8,    1), M(   -7,    0), M(   11,  -14),
        M(  -39,   23), M(   32,   -6), M(   12,   -1), M(   -3,   -1), M(   -2,   10),
        M(  -10,   16), M(  -51,    6), M(  -34,   28), M(  -62,    1), M(   -9,   17),
        M(  -19,   11), M(  -16,    7), M(  -14,    7), M(   -2,    4), M(  -12,    8),
        M(  -49,   11), M(   44,  -17), M(  -56,    9), M(  -25,   -5), M(  -35,   12),
        M( -108,   23), M(  -75,   26), M(  -50,   16), M(  -83,   21), M(  -70,    8),
        M(  -52,   20), M(  -22,    8), M(  -32,    8), M(  -23,   12), M(  -71,   27),
        M(   -1,   -3), M( -158,   32), M(   -5,   16), M(  -93,    5), M(  -82,   18),
        M( -122,   20), M(  -66,   19), M( -103,   38), M( -118,   20), M( -134,   17),
        M( -143,   37), M(  -48,    2), M( -162,   22), M(   17,    2), M( -134,   19),
        M( -258,   12), M( -215,   12), M(  151,  -10), M( -254,   36), M( -166,   38),
        M( -165,   28), M(  -99,   31), M(  -88,   35), M( -101,   20), M(  -95,   21),
        M( -139,   25), M( -229,   18), M(  -85,   17), M(   68,   -4), M( -491,   63),
        M( -587,  110), M( -360,   33), M(  -35,   17), M( -212,   69), M( -253,   40),
        M( -102,   22), M(  -10,   41), M( -162,   47), M(  -75,   28), M( -102,   48),
        M(  271,  -25), M(  -84,    7), M( -304,   31), M( -104,  106), M( -615,   55),
        M( -673,  250), M(-1211,  139), M(  548,   72), M( -989,  118), M(  476,  -13),
        M( -326,  162), M( -548,  122), M( -292,  170), M( -657,   91), M(-1009,   37),
        M(  478, -132), M(  -26,   73), M(  737,  -56), M(   18,  -77), M(  243,  -87),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  127,   22), M( -465,  182), M( -278,  146), M( -269,  149), M( -279,  210),
        M( -322,  224), M(   17,  202), M( -282,  314), M(  -28,  237), M(  -57,  191),
        M(   13,  158), M( -694,  230), M( -587,  157), M( -246,  102), M( -437,  103),
        M( -168,  118), M( -434,  117), M( -328,   98), M( -363,  123), M( -229,  138),
        M( -224,  183), M( -270,  200), M( -198,  162), M( -117,  157), M( -200,  158),
        M( -105,  115), M( -352,  109), M( -429,  100), M( -575,  144), M( -157,   49),
        M( -203,   87), M( -248,   75), M( -264,   67), M( -181,   42), M( -103,   62),
        M(  -97,   97), M( -107,  114), M(  -77,   98), M(  -86,   92), M( -105,   93),
        M(  -70,   53), M( -145,   21), M( -202,   35), M( -285,   62), M( -252,   29),
        M( -238,   54), M( -123,   29), M( -106,   20), M( -100,   17), M(  -50,   26),
        M(  -61,   46), M(  -87,   61), M(  -72,   45), M(    6,   44), M(  -83,   44),
        M(  -78,   24), M(  -82,    0), M( -100,   17), M( -161,   25), M( -222,   50),
        M( -118,   32), M(  -68,   16), M(  -58,   11), M(  -43,   -2), M(  -22,   13),
        M(  -56,   13), M(  -84,   21), M(  -85,   11), M(  -72,   16), M(  -52,    7),
        M(  -43,   19), M(  -70,    0), M(  -62,    9), M(  -68,   19), M(  -73,   30),
        M(  -39,   19), M(   -5,    6), M(  -11,   -1), M(   -4,   -6), M(   29,   -3),
        M(  -35,    5), M(  -65,   -4), M(  -94,   -4), M(  -89,   -3), M(  -44,    6),
        M(  -19,    6), M(  -12,   -1), M(  -17,    4), M(  -38,   21), M(  -45,   25),
        M(    9,   16), M(    0,    4), M(   22,   -3), M(   10,   -8), M(   15,   -3),
        M(    4,   -2), M(   24,  -51), M(    0,    0), M(   -4,  -52), M(  -24,    5),
        M(   -5,    2), M(   -4,    3), M(   -4,    8), M(  -12,   15), M(  -20,   27),
        M(   -8,   19), M(   15,    6), M(   12,    4), M(   16,   -3), M(   26,   -1),
        M(   29,    0), M(  -76,  -21), M(  -74,  -27), M(  -69,  -23), M(   12,    3),
        M(    4,    8), M(    3,    7), M(   -2,   15), M(   -8,   21), M(  -13,   28),
        M(    4,   13), M(    3,   14), M(    6,    8), M(   11,    5), M(   24,   -1),
        M(   22,    6), M(   39,    1), M(   42,   -6), M(   45,    3), M(   14,    8),
        M(    6,    8), M(    1,   14), M(   -1,   17), M(   -1,   22), M(   -3,   20),
        M(   -9,   20), M(    9,   13), M(    1,   14), M(   10,    9), M(   22,    2),
        M(   23,    3), M(   21,    6), M(    5,    3), M(   24,    6), M(   16,    7),
        M(    5,    9), M(    7,   15), M(    4,   19), M(    6,   19), M(   -1,   22),
        M(   -8,   18), M(    6,   15), M(    5,   16), M(    2,   15), M(   11,    8),
        M(   12,    3), M(    7,    5), M(    1,   -1), M(   10,    6), M(   12,    5),
        M(    9,   10), M(    6,   15), M(   11,   18), M(   11,   20), M(    6,   19),
        M(   -3,   17), M(    8,   19), M(    9,   16), M(    5,   18), M(    3,   13),
        M(    5,   10), M(   -6,   10), M(  -10,    8), M(   -2,   15), M(    3,   12),
        M(    5,   12), M(    6,   20), M(    9,   20), M(   13,   20), M(    6,   19),
        M(    2,   21), M(   16,   12), M(   10,   15), M(   -3,   20), M(   -4,   19),
        M(   -7,   16), M(   -9,    6), M(  -15,    9), M(   -9,   21), M(   -4,   13),
        M(    1,   15), M(    0,   24), M(    7,   23), M(   13,   20), M(   10,   19),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    1,    5), M(   24,   19), M(   16,   40), M(   -2,   44),
            M(   -5,   30), M(   -8,   26), M(  -11,   25), M(  -15,   36),
            M(   -4,   16), M(    2,   22), M(   -0,   37), M(   -1,   34),
            M(   -2,   22), M(   -9,   24), M(  -15,   25), M(  -15,   32),
            M(   -8,   26), M(    3,   35), M(    6,   32), M(   17,   26),
            M(   11,   21), M(    6,   22), M(  -10,   38), M(  -13,   44),
            M(    9,   42), M(   15,   51), M(   35,   38), M(   37,   29),
            M(   30,   20), M(   12,   41), M(    5,   54), M(    0,   67),
            M(   10,   67), M(   73,   58), M(  101,   42), M(   65,   33),
            M(   48,   43), M(   45,   73), M(   34,   96), M(   -4,  110),
            M(   64,  142), M(   86,  136), M(  200,   92), M(  212,  102),
            M(  186,  137), M(  186,  165), M(  151,  200), M(  168,  193),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   14,   17), M(   40,   11), M(   24,   25), M(    3,   35),
            M(    2,   38), M(   -3,   42), M(  -12,   46), M(  -14,   46),
            M(   16,   21), M(   22,   19), M(    2,   32), M(    1,   32),
            M(    4,   32), M(   -1,   36), M(  -20,   41), M(  -23,   44),
            M(   23,   43), M(   20,   47), M(   15,   37), M(   15,   33),
            M(   21,   27), M(   15,   33), M(   -9,   43), M(  -28,   45),
            M(   36,   87), M(   35,   79), M(   29,   66), M(   35,   44),
            M(   50,   26), M(   44,   29), M(   -1,   49), M(  -16,   47),
            M(   25,  165), M(   74,  154), M(   56,  129), M(   57,   77),
            M(   89,   23), M(   94,   17), M(   69,   25), M(    1,   48),
            M(  220,  246), M(  203,  258), M(  171,  235), M(  200,  174),
            M(  231,   98), M(  247,   49), M(  120,   84), M(   84,   90),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -102,   23), M(  -72,   47), M(  -64,   49), M(  -63,   66),
            M(  -65,   68), M(  -72,   41), M(  -75,   25), M( -111,   -2),
            M(  -75,   57), M(  -82,   65), M(  -63,   51), M(  -64,   70),
            M(  -62,   69), M(  -80,   49), M(  -96,   55), M( -100,   36),
            M(  -74,   48), M(  -61,   71), M(  -59,   74), M(  -55,   85),
            M(  -62,   84), M(  -74,   61), M(  -78,   46), M(  -91,   17),
            M(  -63,   74), M(  -33,   83), M(  -56,  100), M(  -50,  103),
            M(  -64,  100), M(  -69,   91), M(  -78,   71), M(  -84,   46),
            M(  -58,   69), M(  -62,   84), M(  -34,  101), M(  -62,  111),
            M(  -52,  113), M(  -59,   95), M(  -72,   65), M(  -80,   58),
            M(  -81,   62), M(  -48,   69), M(   -2,   89), M(  -13,   88),
            M(  -41,   97), M(  -47,   95), M(  -76,   65), M( -104,   47),
            M(  -58,   52), M( -104,   66), M(   -7,   48), M(  -30,   82),
            M(  -20,   83), M(  -45,   60), M(  -93,   62), M(  -91,   44),
            M( -192,   -9), M( -175,   77), M( -199,  108), M(  -82,   72),
            M( -116,   77), M( -216,  103), M( -203,   73), M( -279,   15),
        },
        {
            
            M(  -61,  -35), M(  -46,   19), M(  -19,   10), M(  -10,   31),
            M(  -14,   26), M(  -25,    9), M(  -33,   10), M(  -71,   -7),
            M(  -34,    9), M(  -39,   28), M(  -16,   12), M(  -11,   29),
            M(   -7,   32), M(  -22,   21), M(  -54,   32), M(  -54,    8),
            M(  -36,    4), M(  -19,   24), M(   -8,   32), M(   -4,   48),
            M(    1,   48), M(  -16,   31), M(  -17,   13), M(  -43,   -4),
            M(  -16,   27), M(    4,   36), M(    2,   55), M(    6,   59),
            M(   17,   54), M(    6,   47), M(   17,   28), M(  -11,   14),
            M(  -20,   33), M(   -2,   31), M(   20,   52), M(   28,   63),
            M(   13,   65), M(   25,   51), M(    3,   26), M(   -2,   15),
            M(  -56,   21), M(    9,   19), M(   26,   50), M(   37,   49),
            M(   52,   44), M(   64,   36), M(   19,    9), M(  -11,    0),
            M(  -30,    1), M(  -26,   22), M(   36,    8), M(   61,   34),
            M(   38,   28), M(   34,    9), M(  -38,   13), M(   -7,   -5),
            M( -212,  -33), M( -161,   36), M( -140,   48), M(  -58,   33),
            M(  -43,   20), M( -131,   38), M(  -26,    3), M( -173,  -41),
        },
    },
    {
        {
            
            M(  -51,    6), M(  -63,   23), M(  -54,   26), M(  -55,   38),
            M(  -50,   35), M(  -48,   39), M(  -45,   36), M(  -38,   11),
            M(  -43,   -6), M(  -30,   11), M(  -41,   26), M(  -48,   37),
            M(  -50,   42), M(  -45,   30), M(  -40,   13), M(  -44,   11),
            M(  -33,   33), M(  -37,   42), M(  -39,   49), M(  -41,   53),
            M(  -42,   50), M(  -43,   46), M(  -38,   36), M(  -50,   26),
            M(  -42,   31), M(  -44,   45), M(  -47,   56), M(  -29,   57),
            M(  -31,   61), M(  -42,   55), M(  -46,   39), M(  -60,   23),
            M(  -56,   44), M(  -35,   51), M(  -31,   55), M(  -26,   65),
            M(  -12,   60), M(  -41,   53), M(  -39,   45), M(  -68,   41),
            M(  -43,   45), M(  -17,   55), M(  -13,   60), M(   -7,   52),
            M(  -28,   53), M(  -24,   52), M(  -51,   55), M(  -62,   37),
            M(  -81,   46), M(  -52,   52), M(  -36,   48), M(  -56,   54),
            M(  -71,   57), M(  -56,   56), M(  -62,   56), M( -108,   54),
            M( -104,   52), M(  -86,   48), M( -187,   66), M( -146,   66),
            M( -171,   77), M( -180,   70), M( -120,   66), M( -115,   64),
        },
        {
            
            M(   22,  -19), M(   -6,   -3), M(   12,   -1), M(    2,    4),
            M(    3,    6), M(   -2,    1), M(   -1,    5), M(    5,  -16),
            M(   25,  -25), M(   54,  -18), M(   33,   -7), M(   23,    1),
            M(    7,    4), M(    5,   -1), M(    1,  -17), M(    7,  -21),
            M(   28,   -9), M(   44,    4), M(   45,    9), M(   27,    9),
            M(   21,   15), M(    9,   10), M(   11,    1), M(    2,   -6),
            M(   14,   -5), M(   29,   10), M(   30,   18), M(   51,   20),
            M(   32,   20), M(   23,   15), M(   20,    0), M(   13,   -8),
            M(    6,   12), M(   29,   14), M(   30,   26), M(   48,   27),
            M(   65,   20), M(   35,    9), M(   41,   10), M(   13,   -2),
            M(    2,   10), M(   31,   20), M(   35,   23), M(   44,   21),
            M(   73,   10), M(   84,    9), M(   56,    3), M(   22,   -2),
            M(  -37,   19), M(  -15,   32), M(    9,   26), M(  -22,   26),
            M(    6,   19), M(   48,    3), M(   21,   10), M(  -34,    1),
            M(  -43,   34), M(  -83,   32), M(  -97,   31), M(  -99,   36),
            M( -124,   31), M( -111,   27), M(   20,    6), M(  -13,   21),
        },
    },
    {
        {
            
            M( -100,   59), M(  -73,   69), M(  -71,   78), M(  -74,   72),
            M(  -74,   72), M(  -82,   80), M(  -88,   77), M(  -91,   71),
            M( -160,   76), M(  -82,   64), M(  -73,   65), M(  -82,   73),
            M(  -82,   74), M(  -92,   81), M(  -96,   73), M( -128,   80),
            M( -103,   67), M(  -69,   85), M(  -85,   86), M(  -87,   83),
            M(  -88,   85), M( -101,   92), M(  -94,   93), M( -108,   82),
            M(  -95,   93), M(  -70,  100), M(  -85,  106), M(  -88,  102),
            M(  -87,  105), M(  -98,  113), M( -102,  114), M( -102,   99),
            M(  -62,  104), M(  -44,   99), M(  -42,  103), M(  -45,  103),
            M(  -39,  106), M(  -65,  115), M(  -75,  112), M(  -88,  113),
            M(  -45,  108), M(   13,   87), M(    4,  101), M(   -7,   94),
            M(  -26,  103), M(  -54,  118), M(  -45,  107), M(  -89,  122),
            M(  -61,  119), M(  -58,  120), M(  -10,  103), M(  -55,  134),
            M(  -56,  135), M(  -70,  136), M(  -94,  139), M(  -90,  132),
            M(  -25,  127), M(  -43,  134), M(  -37,  135), M(  -85,  139),
            M(  -95,  144), M( -105,  151), M(  -75,  140), M(  -72,  135),
        },
        {
            
            M(  -44,   28), M(  -18,   25), M(   -8,   30), M(   -6,   24),
            M(   -6,   18), M(   -1,   22), M(    1,   19), M(  -21,   20),
            M(  -95,   35), M(  -35,   19), M(  -21,   25), M(  -24,   30),
            M(  -18,   26), M(  -12,   21), M(   -6,   13), M(  -53,   27),
            M(  -49,   26), M(  -10,   31), M(  -32,   39), M(  -26,   37),
            M(  -25,   33), M(  -23,   34), M(   -9,   33), M(  -29,   26),
            M(  -29,   46), M(   -5,   49), M(  -23,   59), M(  -20,   55),
            M(  -17,   46), M(  -15,   50), M(  -14,   49), M(  -24,   40),
            M(   -2,   58), M(   12,   53), M(   26,   52), M(   34,   54),
            M(   32,   44), M(   20,   50), M(   26,   41), M(   17,   43),
            M(    9,   59), M(   56,   40), M(   43,   57), M(   57,   45),
            M(   65,   40), M(   56,   43), M(   81,   30), M(   26,   48),
            M(    6,   67), M(   13,   68), M(   27,   68), M(   17,   80),
            M(   29,   67), M(   62,   44), M(   19,   58), M(   26,   52),
            M(   60,   53), M(   34,   69), M(    4,   83), M(  -13,   86),
            M(   -2,   77), M(   63,   57), M(   58,   58), M(   36,   66),
        },
    },
    {
        {
            
            M( -155,  112), M( -146,   90), M( -138,  109), M( -131,  124),
            M( -130,  131), M( -137,  122), M( -142,  129), M( -142,  139),
            M( -152,  110), M( -128,   79), M( -120,   75), M( -128,  125),
            M( -131,  133), M( -129,  104), M( -136,  119), M( -145,  130),
            M( -123,  127), M( -119,  136), M( -131,  147), M( -133,  126),
            M( -137,  125), M( -137,  135), M( -133,  129), M( -147,  133),
            M( -119,  160), M( -121,  157), M( -133,  156), M( -144,  165),
            M( -149,  162), M( -146,  134), M( -143,  151), M( -148,  148),
            M( -130,  167), M( -122,  194), M( -140,  191), M( -152,  182),
            M( -161,  180), M( -159,  143), M( -157,  173), M( -160,  170),
            M( -171,  191), M( -129,  205), M( -139,  191), M( -133,  171),
            M( -149,  151), M( -160,  152), M( -164,  163), M( -173,  189),
            M( -139,  212), M( -192,  252), M(  -78,  150), M( -205,  222),
            M( -196,  203), M( -169,  178), M( -213,  223), M( -177,  203),
            M( -113,  160), M( -141,  200), M( -118,  164), M( -173,  178),
            M( -161,  171), M( -168,  195), M( -168,  208), M( -187,  224),
        },
        {
            
            M(   14,  -18), M(   33,  -37), M(   46,  -35), M(   45,    2),
            M(   46,    2), M(   41,  -15), M(   37,   19), M(   43,   -4),
            M(    5,  -12), M(   35,  -10), M(   68,  -48), M(   59,    7),
            M(   51,    3), M(   58,  -26), M(   60,  -18), M(   52,   -3),
            M(   23,   16), M(   50,   18), M(   47,   29), M(   48,   13),
            M(   46,   10), M(   54,    5), M(   60,   -2), M(   62,    1),
            M(   32,   34), M(   43,   43), M(   29,   48), M(   39,   60),
            M(   39,   46), M(   49,   29), M(   59,   17), M(   67,   -3),
            M(   32,   54), M(   25,   70), M(   22,   44), M(   30,   68),
            M(   49,   59), M(   53,   46), M(   76,   36), M(   59,   15),
            M(   22,   76), M(   42,   32), M(   47,   34), M(   40,   43),
            M(   64,   50), M(   52,   67), M(   80,   20), M(   35,   29),
            M(   23,   64), M(  -14,  104), M(   26,   63), M(  -12,   95),
            M(  -29,  113), M(   93,   27), M(   13,   75), M(   48,   25),
            M(   38,   61), M(   39,   70), M(   39,   55), M(   21,   66),
            M(   10,   64), M(  159,  -26), M(   28,   53), M(   54,   18),
        },
    },
    {
        {
            
            M(  198, -190), M(  284,  -90), M(  162,  -50), M(  195,  -28),
            M(  168,  -41), M(  139,  -49), M(  147,  -54), M(  172, -183),
            M(  102,  -73), M(  188,  -20), M(  226,  -34), M(  249,  -43),
            M(  210,  -39), M(  241,  -36), M(  124,  -10), M(  151,  -82),
            M(  124,  -37), M(  240,  -22), M(  271,  -30), M(  259,  -34),
            M(  250,  -35), M(  277,  -30), M(  217,  -20), M(  128,  -46),
            M(   63,  -26), M(  199,  -34), M(  205,  -19), M(  160,  -11),
            M(  183,  -14), M(  206,  -19), M(  168,  -28), M(   36,  -28),
            M(   12,  -40), M(  129,  -25), M(  150,  -11), M(   96,    3),
            M(  120,    3), M(  122,   -4), M(  124,  -16), M(    5,  -31),
            M(  -11,  -21), M(   32,   -6), M(   50,    0), M(   37,   13),
            M(   57,   13), M(   54,    7), M(   35,    2), M(   -8,   -8),
            M(   46,  -19), M(   21,    1), M(   10,    9), M(  -40,   20),
            M(   -6,   17), M(   -6,   23), M(   24,    6), M(   35,  -11),
            M(   50,  -68), M(   41,  -18), M(   13,    0), M(  -10,  -14),
            M(   -0,  -21), M(  -13,    7), M(   49,  -13), M(   53,  -63),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}