//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  184,  -93), M(   18,  -89), M(  -54,    0), M( -165,   82), M(  -54,  -13),
        M(  -89,   11), M(  -47,  -50), M(   22,  -90), M(    8,  -48), M(  -66,  -21),
        M(  -54,    3), M(  -43,   14), M(  -28,   33), M(  -23,   43), M(  -14,   69),
        M(   22,  -94), M(  -30,  -40), M(  -14,  -19), M(  -43,   -1), M(  -16,   -3),
        M(  -37,   -9), M(  -17,  -19), M(  -44,   -7), M(  -38,  -11), M(  -21,   -8),
        M(  -12,  -28), M(  -21,    1), M(  -22,    6), M(    0,   10), M(    7,    3),
        M( -111,  -26), M(   -9,  -15), M(  -13,    5), M(  -16,  -13), M(  -41,    6),
        M(  -21,  -11), M(  -14,  -14), M(   -7,  -15), M(   -9,  -25), M(  -20,  -16),
        M(  -11,  -14), M(  -10,   -2), M(   -7,   -5), M(  -10,   -1), M(   -4,  -18),
        M(  -32,    6), M(   14,  -10), M(   -9,    7), M(   -2,    2), M(  -13,    8),
        M(   -7,   -3), M(    8,    1), M(   17,  -10), M(   -2,  -12), M(   -9,   -4),
        M(  -13,   -1), M(  -11,   -0), M(   -9,    2), M(   -6,   -3), M(    5,  -20),
        M(  -20,    4), M(    3,   -1), M(  -19,    7), M(   -4,    3), M(   -5,    6),
        M(    1,    9), M(   23,    5), M(   35,    1), M(    7,    5), M(    6,    4),
        M(   -5,   -1), M(   -6,    3), M(  -10,    5), M(   -9,   -1), M(    3,  -18),
        M(  -64,   11), M(   -2,   -7), M(  -15,    3), M(   -2,   -1), M(   -1,    7),
        M(   -3,   13), M(   -6,  -14), M(   10,   -7), M(   -7,   -8), M(    2,    7),
        M(   -2,    7), M(   -9,    5), M(  -10,    4), M(   -8,    1), M(    5,  -12),
        M(  -62,    5), M(   14,   -6), M(  -10,    1), M(   -1,    5), M(    6,    8),
        M(   -1,   15), M(   -5,   -4), M(    0,    0), M(   10,   -3), M(    0,   17),
        M(    4,    6), M(  -11,    8), M(   -9,    3), M(   -8,   -1), M(   14,  -14),
        M(  -58,   34), M(   26,   -3), M(   -7,    4), M(   -6,    1), M(    4,   10),
        M(  -16,   17), M(  -51,    6), M(  -34,   29), M(  -54,   -0), M(   -7,   17),
        M(  -24,   12), M(  -13,    7), M(  -32,   14), M(   -3,    1), M(  -15,   14),
        M(  -42,   13), M(   82,  -27), M(  -61,   11), M(   -4,   -4), M(  -24,   10),
        M( -133,   30), M(  -66,   26), M(  -32,   14), M(  -90,   23), M(  -59,    7),
        M(  -34,   19), M(  -28,   12), M(  -34,   17), M(  -16,   14), M(  -55,   22),
        M(  -11,    1), M( -179,   38), M(  -81,   32), M(  -75,    3), M(  -56,   15),
        M( -177,   35), M(  -21,   11), M(  -90,   38), M( -168,   26), M( -119,   16),
        M( -208,   51), M(  -51,    3), M( -169,   24), M(    2,    2), M( -195,   24),
        M( -437,   49), M( -294,   36), M(  222,  -15), M( -140,   20), M( -190,   38),
        M( -194,   27), M( -137,   37), M( -136,   36), M( -135,   25), M(  -86,   26),
        M( -134,   40), M( -200,   18), M(   27,    6), M(  193,  -39), M( -406,   63),
        M( -504,   35), M( -464,   48), M(   32,   28), M( -209,   85), M( -204,   60),
        M(  -87,   11), M(    4,   46), M(  -12,   20), M( -130,   41), M(  -44,   58),
        M(  145,    7), M( -173,   67), M( -217,   55), M( -107,  111), M( -799,  115),
        M(   -1,  266), M(-2313,  194), M(  801,   57), M(-1086,  112), M(  978,  -38),
        M( -124,  144), M( -803,  134), M( -214,  259), M( -558,  -14), M( -681,  -20),
        M( -441,   41), M(   27,   20), M(  736,  -98), M(   95,  -44), M( -643,  286),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  -36,   46), M( -460,  184), M( -238,  138), M( -266,  147), M( -242,  202),
        M( -262,  203), M(   71,  197), M( -189,  307), M(  -64,  238), M(  -60,  199),
        M(   17,  155), M( -683,  234), M( -524,  149), M( -310,  108), M( -316,   91),
        M( -183,  124), M( -421,  116), M( -314,  100), M( -348,  123), M( -256,  136),
        M( -257,  190), M( -207,  190), M( -195,  165), M(  -96,  152), M( -190,  160),
        M( -101,  111), M( -319,   97), M( -441,  104), M( -583,  149), M( -244,   65),
        M( -250,   96), M( -255,   77), M( -251,   63), M( -195,   45), M(  -99,   61),
        M(  -96,   97), M( -116,  115), M(  -86,  100), M(  -95,   95), M( -101,   92),
        M(  -79,   55), M( -135,   20), M( -192,   31), M( -292,   65), M( -288,   37),
        M( -225,   47), M( -143,   32), M(  -98,   18), M( -106,   18), M(  -52,   26),
        M(  -65,   46), M(  -86,   59), M(  -77,   45), M(    5,   41), M(  -82,   44),
        M(  -72,   22), M(  -79,   -0), M(  -94,   15), M( -162,   26), M( -232,   53),
        M( -117,   33), M(  -67,   17), M(  -64,   11), M(  -47,   -2), M(  -20,   12),
        M(  -53,   12), M(  -79,   20), M(  -92,   13), M(  -74,   17), M(  -53,    7),
        M(  -45,   19), M(  -67,   -0), M(  -61,    8), M(  -65,   18), M(  -72,   30),
        M(  -41,   19), M(  -10,    7), M(  -15,   -0), M(   -3,   -7), M(   32,   -5),
        M(  -31,    5), M(  -59,   -4), M(  -92,   -4), M(  -90,   -1), M(  -43,    6),
        M(  -16,    5), M(  -14,   -1), M(  -15,    5), M(  -36,   22), M(  -42,   25),
        M(    6,   17), M(    2,    3), M(   20,   -3), M(   10,   -8), M(   18,   -4),
        M(    7,   -2), M(   26,  -51), M(    0,    0), M(   -5,  -51), M(  -24,    5),
        M(   -3,    1), M(   -5,    3), M(   -3,    7), M(  -11,   16), M(  -24,   28),
        M(   -8,   17), M(   14,    6), M(   12,    3), M(   17,   -4), M(   25,   -1),
        M(   29,   -0), M(  -72,  -21), M(  -75,  -26), M(  -72,  -23), M(   12,    2),
        M(    5,    8), M(    3,    8), M(   -2,   15), M(   -8,   21), M(  -14,   27),
        M(    4,   13), M(    2,   13), M(    6,    7), M(   12,    5), M(   25,   -1),
        M(   23,    6), M(   39,    0), M(   41,   -6), M(   44,    3), M(   15,    8),
        M(    7,    8), M(    1,   14), M(   -1,   16), M(   -1,   22), M(   -4,   20),
        M(  -10,   21), M(    8,   13), M(   -1,   14), M(   11,    9), M(   23,    2),
        M(   22,    3), M(   20,    6), M(    4,    3), M(   23,    6), M(   16,    8),
        M(    5,    9), M(    8,   14), M(    4,   18), M(    5,   19), M(   -1,   21),
        M(   -6,   17), M(    6,   16), M(    5,   15), M(    2,   14), M(   10,    8),
        M(   12,    4), M(    6,    5), M(    0,   -0), M(    9,    6), M(   11,    6),
        M(    8,   10), M(    6,   15), M(   11,   17), M(   11,   20), M(    6,   18),
        M(   -2,   17), M(    8,   19), M(   10,   16), M(    6,   17), M(    3,   13),
        M(    6,    9), M(   -6,   10), M(  -10,    8), M(   -2,   15), M(    3,   12),
        M(    5,   11), M(    6,   19), M(    9,   19), M(   13,   19), M(    7,   19),
        M(    5,   18), M(   17,   11), M(   10,   15), M(   -3,   19), M(   -3,   18),
        M(   -6,   15), M(   -9,    5), M(  -15,    8), M(   -8,   20), M(   -4,   12),
        M(    2,   14), M(    1,   22), M(    7,   22), M(   12,   20), M(    9,   18),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    7), M(   27,   18), M(   20,   38), M(    2,   42),
            M(   -0,   28), M(   -4,   24), M(   -8,   24), M(  -15,   39),
            M(   -3,   18), M(    5,   21), M(   -2,   39), M(   -2,   35),
            M(   -3,   23), M(  -11,   26), M(  -12,   24), M(  -15,   35),
            M(   -8,   28), M(    6,   33), M(    5,   33), M(   11,   28),
            M(    5,   23), M(    4,   23), M(   -6,   37), M(  -13,   46),
            M(    9,   43), M(   18,   49), M(   34,   39), M(   31,   31),
            M(   24,   21), M(   10,   42), M(    9,   52), M(    0,   69),
            M(    9,   69), M(   74,   57), M(  101,   42), M(   61,   34),
            M(   45,   44), M(   42,   74), M(   35,   95), M(   -4,  112),
            M(   60,  144), M(   89,  134), M(  204,   90), M(  208,  103),
            M(  184,  137), M(  184,  167), M(  150,  199), M(  166,  194),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   14,   19), M(   43,   11), M(   28,   24), M(    7,   34),
            M(    5,   37), M(    1,   40), M(   -9,   45), M(  -15,   49),
            M(   17,   22), M(   26,   19), M(    1,   34), M(   -1,   33),
            M(    2,   34), M(   -2,   37), M(  -17,   40), M(  -23,   46),
            M(   24,   45), M(   22,   47), M(   13,   38), M(   10,   35),
            M(   16,   28), M(   14,   33), M(   -5,   42), M(  -28,   47),
            M(   36,   89), M(   39,   78), M(   27,   67), M(   29,   46),
            M(   45,   27), M(   43,   30), M(    3,   48), M(  -17,   48),
            M(   27,  166), M(   74,  154), M(   52,  131), M(   54,   78),
            M(   85,   25), M(   93,   17), M(   70,   25), M(    0,   49),
            M(  222,  247), M(  204,  259), M(  166,  237), M(  202,  174),
            M(  233,   98), M(  253,   47), M(  121,   83), M(   83,   91),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -107,   14), M(  -76,   37), M(  -67,   40), M(  -67,   58),
            M(  -69,   60), M(  -77,   32), M(  -79,   18), M( -116,   -9),
            M(  -78,   47), M(  -85,   56), M(  -67,   40), M(  -68,   58),
            M(  -65,   56), M(  -83,   37), M(  -98,   45), M( -103,   28),
            M(  -76,   37), M(  -63,   58), M(  -61,   59), M(  -57,   71),
            M(  -64,   69), M(  -76,   45), M(  -80,   34), M(  -94,    6),
            M(  -65,   63), M(  -35,   71), M(  -57,   86), M(  -51,   90),
            M(  -64,   87), M(  -70,   75), M(  -81,   59), M(  -87,   37),
            M(  -57,   59), M(  -63,   71), M(  -34,   85), M(  -63,   95),
            M(  -52,   98), M(  -59,   79), M(  -73,   53), M(  -82,   50),
            M(  -81,   52), M(  -52,   57), M(   -5,   74), M(  -14,   71),
            M(  -41,   79), M(  -48,   78), M(  -79,   53), M( -106,   40),
            M(  -60,   45), M( -106,   56), M(  -11,   36), M(  -32,   71),
            M(  -22,   72), M(  -45,   46), M(  -95,   53), M(  -92,   37),
            M( -203,  -11), M( -167,   68), M( -205,  101), M(  -83,   63),
            M( -118,   68), M( -219,   93), M( -208,   67), M( -283,    9),
        },
        {
            
            M(  -67,  -36), M(  -50,   14), M(  -21,    4), M(  -13,   25),
            M(  -19,   20), M(  -31,    2), M(  -37,    3), M(  -76,   -4),
            M(  -37,    3), M(  -44,   22), M(  -18,    2), M(  -15,   18),
            M(  -10,   21), M(  -24,   10), M(  -58,   23), M(  -60,    3),
            M(  -38,   -3), M(  -22,   14), M(   -9,   17), M(   -6,   34),
            M(    0,   34), M(  -17,   14), M(  -17,    1), M(  -45,  -13),
            M(  -19,   20), M(    2,   28), M(    1,   42), M(    6,   46),
            M(   17,   41), M(    6,   32), M(   16,   16), M(  -13,    5),
            M(  -23,   27), M(   -3,   22), M(   19,   38), M(   28,   49),
            M(   12,   50), M(   25,   35), M(    3,   13), M(   -0,    7),
            M(  -59,   17), M(    5,   11), M(   23,   36), M(   37,   34),
            M(   49,   29), M(   61,   21), M(   17,   -2), M(  -12,   -7),
            M(  -34,   -3), M(  -29,   15), M(   35,   -3), M(   62,   24),
            M(   32,   21), M(   27,    0), M(  -39,    6), M(   -8,  -11),
            M( -217,  -33), M( -165,   32), M( -145,   41), M(  -66,   29),
            M(  -46,   14), M( -133,   33), M(  -26,   -5), M( -182,  -47),
        },
    },
    {
        {
            
            M(  -52,    7), M(  -64,   23), M(  -55,   28), M(  -56,   40),
            M(  -52,   37), M(  -50,   40), M(  -45,   36), M(  -39,   12),
            M(  -44,   -7), M(  -31,   12), M(  -42,   29), M(  -49,   39),
            M(  -51,   45), M(  -46,   32), M(  -41,   15), M(  -45,   12),
            M(  -34,   36), M(  -38,   44), M(  -40,   51), M(  -43,   56),
            M(  -44,   53), M(  -44,   49), M(  -39,   37), M(  -51,   28),
            M(  -42,   34), M(  -44,   47), M(  -48,   59), M(  -30,   59),
            M(  -32,   63), M(  -43,   57), M(  -46,   42), M(  -61,   25),
            M(  -56,   46), M(  -36,   53), M(  -32,   58), M(  -28,   68),
            M(  -13,   62), M(  -42,   55), M(  -39,   46), M(  -69,   44),
            M(  -43,   47), M(  -20,   58), M(  -14,   63), M(   -9,   55),
            M(  -28,   56), M(  -24,   53), M(  -53,   56), M(  -62,   37),
            M(  -82,   47), M(  -55,   54), M(  -37,   48), M(  -57,   57),
            M(  -72,   59), M(  -57,   57), M(  -63,   56), M( -108,   55),
            M( -104,   51), M(  -91,   49), M( -190,   67), M( -147,   67),
            M( -173,   78), M( -183,   72), M( -123,   68), M( -117,   63),
        },
        {
            
            M(   21,  -17), M(   -7,   -2), M(   10,    1), M(    2,    8),
            M(    2,    8), M(   -4,    3), M(   -1,    6), M(    2,  -14),
            M(   25,  -25), M(   54,  -15), M(   31,   -4), M(   22,    4),
            M(    6,    7), M(    5,    2), M(    0,  -15), M(    7,  -20),
            M(   26,   -6), M(   42,    6), M(   45,   11), M(   26,   12),
            M(   21,   18), M(    8,   12), M(   10,    3), M(    1,   -3),
            M(   14,   -4), M(   29,   12), M(   29,   20), M(   52,   22),
            M(   31,   23), M(   22,   18), M(   19,    3), M(   14,   -6),
            M(    6,   14), M(   29,   16), M(   31,   28), M(   48,   29),
            M(   65,   23), M(   34,   12), M(   40,   12), M(   13,   -1),
            M(   -0,   11), M(   31,   21), M(   35,   24), M(   44,   24),
            M(   74,   12), M(   81,   11), M(   58,    3), M(   21,   -1),
            M(  -39,   21), M(  -15,   32), M(    9,   28), M(  -22,   28),
            M(    6,   19), M(   47,    4), M(   19,   10), M(  -32,    1),
            M(  -42,   33), M(  -84,   32), M(  -88,   31), M(  -92,   37),
            M( -125,   31), M( -110,   26), M(   19,    6), M(  -17,   21),
        },
    },
    {
        {
            
            M( -101,   62), M(  -75,   73), M(  -73,   82), M(  -76,   76),
            M(  -76,   77), M(  -84,   85), M(  -90,   81), M(  -93,   75),
            M( -158,   81), M(  -81,   67), M(  -74,   69), M(  -84,   76),
            M(  -84,   79), M(  -94,   85), M(  -98,   77), M( -130,   84),
            M( -104,   72), M(  -70,   89), M(  -86,   90), M(  -89,   87),
            M(  -89,   89), M( -103,   96), M(  -96,   97), M( -109,   85),
            M(  -96,   96), M(  -71,  104), M(  -87,  110), M(  -89,  106),
            M(  -88,  109), M(  -99,  117), M( -104,  117), M( -103,  102),
            M(  -62,  108), M(  -45,  103), M(  -44,  108), M(  -47,  106),
            M(  -40,  109), M(  -67,  119), M(  -77,  115), M(  -89,  116),
            M(  -45,  111), M(   13,   91), M(    3,  105), M(   -9,   98),
            M(  -28,  107), M(  -55,  121), M(  -47,  111), M(  -91,  126),
            M(  -59,  122), M(  -58,  123), M(  -10,  106), M(  -56,  137),
            M(  -58,  139), M(  -72,  140), M(  -96,  143), M(  -91,  136),
            M(  -25,  130), M(  -44,  137), M(  -40,  138), M(  -85,  142),
            M(  -97,  148), M( -106,  154), M(  -76,  144), M(  -74,  138),
        },
        {
            
            M(  -45,   32), M(  -19,   30), M(   -9,   33), M(   -8,   27),
            M(   -7,   22), M(   -2,   26), M(    1,   22), M(  -22,   22),
            M(  -93,   38), M(  -39,   24), M(  -23,   29), M(  -24,   33),
            M(  -17,   29), M(  -13,   24), M(   -5,   16), M(  -53,   30),
            M(  -47,   28), M(  -11,   34), M(  -33,   42), M(  -27,   40),
            M(  -28,   36), M(  -23,   37), M(  -11,   37), M(  -28,   28),
            M(  -29,   48), M(   -1,   50), M(  -23,   62), M(  -21,   58),
            M(  -17,   49), M(  -18,   54), M(  -14,   52), M(  -24,   43),
            M(    0,   59), M(   11,   55), M(   26,   54), M(   34,   56),
            M(   31,   47), M(   19,   54), M(   25,   44), M(   16,   46),
            M(    9,   61), M(   58,   41), M(   42,   60), M(   58,   47),
            M(   68,   42), M(   60,   45), M(   79,   34), M(   25,   51),
            M(    9,   68), M(   16,   69), M(   26,   71), M(   18,   82),
            M(   30,   70), M(   64,   46), M(   18,   60), M(   27,   55),
            M(   61,   55), M(   30,   73), M(   11,   84), M(   -9,   87),
            M(    5,   78), M(   67,   58), M(   59,   59), M(   34,   69),
        },
    },
    {
        {
            
            M( -154,  113), M( -144,   92), M( -137,  110), M( -129,  124),
            M( -128,  132), M( -135,  122), M( -141,  130), M( -141,  141),
            M( -151,  112), M( -126,   80), M( -119,   78), M( -127,  128),
            M( -130,  135), M( -128,  107), M( -135,  122), M( -144,  133),
            M( -121,  126), M( -118,  140), M( -130,  150), M( -132,  129),
            M( -136,  128), M( -136,  138), M( -132,  132), M( -145,  136),
            M( -118,  163), M( -121,  160), M( -132,  159), M( -144,  169),
            M( -149,  166), M( -145,  137), M( -142,  154), M( -146,  149),
            M( -130,  169), M( -121,  197), M( -140,  195), M( -151,  185),
            M( -161,  185), M( -157,  146), M( -156,  175), M( -159,  171),
            M( -172,  195), M( -128,  209), M( -138,  193), M( -133,  175),
            M( -149,  155), M( -159,  155), M( -163,  165), M( -171,  189),
            M( -137,  214), M( -190,  255), M(  -77,  152), M( -204,  226),
            M( -197,  208), M( -169,  181), M( -211,  224), M( -176,  206),
            M( -110,  163), M( -145,  208), M( -121,  169), M( -172,  181),
            M( -157,  172), M( -167,  198), M( -165,  209), M( -187,  226),
        },
        {
            
            M(   11,   -6), M(   31,  -32), M(   43,  -31), M(   42,    9),
            M(   43,    3), M(   38,   -9), M(   34,   23), M(   40,    4),
            M(    3,   -5), M(   33,   -8), M(   64,  -40), M(   56,   12),
            M(   48,    5), M(   56,  -22), M(   59,  -14), M(   49,    2),
            M(   22,   19), M(   47,   22), M(   45,   33), M(   44,   18),
            M(   43,   16), M(   50,   12), M(   58,    4), M(   59,    3),
            M(   31,   37), M(   41,   49), M(   27,   53), M(   37,   68),
            M(   35,   53), M(   47,   34), M(   54,   25), M(   65,    3),
            M(   34,   51), M(   22,   76), M(   20,   49), M(   25,   76),
            M(   44,   66), M(   50,   52), M(   72,   45), M(   56,   20),
            M(   21,   77), M(   39,   37), M(   45,   42), M(   35,   51),
            M(   63,   56), M(   44,   76), M(   73,   28), M(   33,   32),
            M(   22,   68), M(  -16,  108), M(   25,   68), M(  -14,  102),
            M(  -29,  117), M(   93,   31), M(   13,   79), M(   42,   35),
            M(   35,   65), M(   39,   74), M(   29,   66), M(   13,   74),
            M(    5,   72), M(  154,  -21), M(   29,   55), M(   50,   25),
        },
    },
    {
        {
            
            M(  185, -187), M(  260,  -82), M(  149,  -47), M(  196,  -28),
            M(  184,  -45), M(  131,  -47), M(  140,  -52), M(  171, -180),
            M(   96,  -73), M(  184,  -19), M(  228,  -33), M(  249,  -40),
            M(  226,  -41), M(  245,  -36), M(  124,   -9), M(  154,  -81),
            M(  120,  -37), M(  236,  -21), M(  269,  -29), M(  267,  -35),
            M(  263,  -36), M(  284,  -30), M(  222,  -20), M(  130,  -46),
            M(   64,  -26), M(  202,  -34), M(  208,  -19), M(  166,  -10),
            M(  184,  -13), M(  209,  -18), M(  168,  -27), M(   33,  -26),
            M(   15,  -39), M(  132,  -24), M(  153,  -10), M(   99,    5),
            M(  124,    5), M(  123,   -2), M(  125,  -14), M(    5,  -29),
            M(   -8,  -21), M(   32,   -5), M(   50,    2), M(   37,   14),
            M(   57,   16), M(   54,    9), M(   36,    3), M(   -9,   -7),
            M(   46,  -18), M(   20,    2), M(    9,   11), M(  -43,   22),
            M(   -7,   19), M(   -7,   24), M(   23,    8), M(   34,  -10),
            M(   52,  -70), M(   41,  -18), M(   13,   -0), M(  -11,  -14),
            M(   -2,  -21), M(  -15,    7), M(   49,  -13), M(   54,  -64),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}