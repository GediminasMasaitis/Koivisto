//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   54,   36), M(  -17,  -63), M(  -82,  -20), M(  -95,   23), M(  -94,   12),
        M(  -70,  -26), M(  -38,  -35), M(  -34,  -72), M(  -18,  -32), M(  -63,  -13),
        M(  -43,  -15), M(  -80,   20), M(  -24,   24), M(  -26,   24), M(  -57,   42),
        M(  -37,  -17), M(  -40,   -9), M(  -31,  -12), M(  -41,  -11), M(  -46,   -9),
        M(  -62,  -10), M(  -17,  -17), M(  -50,   -9), M(  -31,  -25), M(  -31,  -18),
        M(  -30,  -18), M(  -25,    2), M(  -26,   11), M(   -5,    9), M(   -0,   -6),
        M(  -38,  -27), M(  -24,   -7), M(   -7,   -2), M(  -11,   -8), M(  -42,    2),
        M(  -28,  -11), M(  -26,   -9), M(   -9,  -17), M(  -17,  -25), M(  -22,  -15),
        M(  -13,  -14), M(  -17,    4), M(   -9,    2), M(  -10,   -2), M(   -8,  -13),
        M(  -50,   13), M(    4,  -12), M(   -2,    6), M(   -1,   -3), M(  -17,    6),
        M(  -11,   -1), M(    5,    3), M(   15,  -10), M(   -1,  -11), M(  -12,   -5),
        M(  -14,    0), M(  -12,    3), M(   -5,   -1), M(   -1,   -4), M(   10,  -22),
        M(  -25,   -3), M(    5,    0), M(   -8,    1), M(    1,    3), M(   -2,    5),
        M(    1,    9), M(   27,    5), M(   37,    2), M(   11,    5), M(    5,    7),
        M(   -5,    3), M(   -4,    2), M(  -10,    5), M(   -4,   -2), M(    8,  -21),
        M(  -47,   15), M(   -4,   -7), M(   -6,    5), M(    1,   -1), M(    5,    7),
        M(    1,   13), M(   -3,  -16), M(   13,  -10), M(   -4,   -8), M(    3,    9),
        M(   -2,    9), M(   -8,    4), M(  -11,    5), M(   -3,   -0), M(    6,  -16),
        M(  -47,    6), M(    6,   -3), M(   -9,    5), M(    6,    2), M(    9,    9),
        M(    4,   16), M(    2,   -6), M(    0,    0), M(   12,   -4), M(    4,   15),
        M(   -3,   11), M(  -12,   10), M(  -10,    5), M(   -5,    2), M(    9,  -13),
        M(  -18,   14), M(   14,   -0), M(    7,    4), M(    5,    1), M(    3,   10),
        M(   -4,   16), M(  -39,    3), M(  -27,   25), M(  -48,   -0), M(  -12,   18),
        M(  -20,   13), M(  -20,   11), M(  -20,   11), M(   -9,    6), M(  -24,    8),
        M(  -33,   18), M(   11,   -6), M(  -72,   15), M(  -60,    7), M(  -43,   15),
        M(  -75,   20), M(  -67,   26), M(  -39,   16), M(  -67,   21), M(  -50,    9),
        M(  -74,   27), M(  -46,   14), M(  -48,   12), M(  -54,   19), M(  -93,   37),
        M(   10,   -7), M( -152,   33), M(  -51,   16), M(  -91,   12), M(  -85,   16),
        M( -106,   27), M(  -88,   23), M( -117,   36), M( -124,   25), M( -115,   19),
        M(  -97,   31), M( -111,   21), M( -151,   26), M(  -74,   19), M( -115,   28),
        M( -361,   53), M( -173,   17), M(   35,    8), M( -191,   31), M(  -73,   21),
        M( -101,   24), M( -114,   34), M(  -85,   39), M(  -92,   21), M(  -94,   27),
        M( -167,   42), M( -187,   18), M(  -74,    8), M(  -32,    7), M( -464,   72),
        M( -399,   85), M( -222,   39), M( -166,   49), M( -252,   76), M( -197,   26),
        M( -148,   53), M(  -42,   47), M( -123,   44), M( -100,   36), M( -117,   49),
        M(  182,  -39), M( -233,   28), M( -165,   13), M( -155,   90), M( -422,  -11),
        M( -138,  131), M( -534,  175), M(  -45,   87), M( -807,  167), M(  217,   16),
        M( -337,  156), M( -428,   67), M( -295,  147), M( -441,   71), M( -331,    4),
        M(   -1,   -1), M( -154,   -0), M(  520,  -49), M(  -97,  -15), M(  362,  -78),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  128,   21), M( -457,  182), M( -255,  144), M( -274,  149), M( -277,  210),
        M( -307,  220), M(    5,  206), M( -251,  315), M(  -23,  236), M(  -56,  192),
        M(    5,  159), M( -682,  229), M( -597,  158), M( -237,  102), M( -460,  108),
        M( -159,  118), M( -414,  113), M( -329,   98), M( -359,  123), M( -232,  140),
        M( -229,  186), M( -269,  200), M( -211,  166), M( -124,  161), M( -205,  160),
        M( -106,  118), M( -354,  111), M( -427,  101), M( -582,  147), M( -164,   53),
        M( -203,   89), M( -248,   77), M( -261,   67), M( -193,   45), M( -107,   64),
        M( -111,  102), M( -114,  116), M(  -89,  101), M(  -90,   94), M( -107,   95),
        M(  -71,   54), M( -152,   24), M( -202,   38), M( -285,   64), M( -250,   30),
        M( -249,   58), M( -126,   33), M( -110,   23), M( -106,   19), M(  -54,   29),
        M(  -69,   50), M(  -91,   63), M(  -79,   47), M(    2,   45), M(  -88,   46),
        M(  -84,   27), M(  -80,    1), M( -100,   18), M( -161,   27), M( -223,   52),
        M( -112,   33), M(  -73,   18), M(  -62,   13), M(  -48,    0), M(  -26,   15),
        M(  -60,   14), M(  -89,   23), M(  -89,   12), M(  -76,   18), M(  -60,   10),
        M(  -42,   20), M(  -77,    3), M(  -61,   10), M(  -75,   21), M(  -72,   31),
        M(  -44,   22), M(   -6,    8), M(  -16,    1), M(   -6,   -5), M(   26,   -2),
        M(  -36,    6), M(  -69,   -3), M(  -96,   -3), M(  -93,   -1), M(  -48,    8),
        M(  -23,    7), M(  -15,    0), M(  -22,    6), M(  -42,   23), M(  -59,   30),
        M(   10,   17), M(   -1,    5), M(   21,   -2), M(    8,   -7), M(   14,   -2),
        M(    3,   -1), M(   23,  -51), M(    0,    0), M(   -6,  -51), M(  -27,    6),
        M(   -8,    3), M(   -6,    4), M(   -7,    9), M(  -15,   17), M(  -21,   27),
        M(   -9,   20), M(   17,    6), M(   13,    5), M(   16,   -3), M(   27,   -1),
        M(   30,    0), M(  -74,  -21), M(  -75,  -27), M(  -71,  -23), M(   11,    4),
        M(    4,    9), M(    3,    8), M(   -4,   15), M(   -9,   21), M(  -14,   28),
        M(    6,   12), M(    4,   13), M(    7,    8), M(   12,    5), M(   27,   -1),
        M(   23,    6), M(   40,    1), M(   43,   -6), M(   46,    3), M(   15,    9),
        M(    7,    8), M(    1,   15), M(   -2,   17), M(   -1,   22), M(   -4,   20),
        M(   -8,   19), M(   11,   12), M(    1,   14), M(   10,    9), M(   24,    2),
        M(   25,    3), M(   23,    5), M(    6,    3), M(   25,    6), M(   17,    7),
        M(    5,   10), M(    8,   14), M(    3,   19), M(    5,   19), M(   -1,   21),
        M(   -9,   18), M(    6,   15), M(    5,   16), M(    2,   14), M(   12,    8),
        M(   13,    3), M(    8,    5), M(    2,   -1), M(   11,    6), M(   12,    5),
        M(    9,   10), M(    6,   15), M(   10,   17), M(   10,   20), M(    5,   19),
        M(   -4,   17), M(    8,   19), M(    8,   16), M(    4,   18), M(    2,   13),
        M(    5,   10), M(   -7,   11), M(  -10,    8), M(   -3,   15), M(    3,   12),
        M(    5,   11), M(    6,   20), M(    8,   20), M(   12,   20), M(    5,   19),
        M(    2,   20), M(   17,   11), M(    9,   15), M(   -4,   20), M(   -5,   19),
        M(   -7,   16), M(  -10,    6), M(  -16,    9), M(  -10,   21), M(   -5,   13),
        M(    1,   15), M(    0,   24), M(    6,   22), M(   11,   20), M(    9,   18),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   -0,    4), M(   22,   19), M(   14,   40), M(   -3,   44),
            M(   -5,   30), M(   -7,   26), M(  -10,   26), M(  -15,   38),
            M(   -6,   17), M(    0,   22), M(   -2,   38), M(   -2,   34),
            M(   -2,   22), M(   -9,   25), M(  -14,   26), M(  -15,   34),
            M(   -8,   26), M(    3,   35), M(    6,   32), M(   18,   26),
            M(   13,   21), M(    8,   22), M(  -10,   39), M(  -13,   46),
            M(   12,   41), M(   18,   50), M(   38,   37), M(   40,   29),
            M(   33,   19), M(   16,   40), M(    7,   55), M(    2,   69),
            M(   17,   67), M(   79,   58), M(  105,   42), M(   72,   32),
            M(   57,   42), M(   51,   73), M(   39,   97), M(    1,  112),
            M(   71,  144), M(   96,  137), M(  203,   94), M(  218,  103),
            M(  191,  140), M(  191,  168), M(  154,  204), M(  174,  196),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {
            
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   13,   17), M(   38,   12), M(   22,   25), M(    2,   35),
            M(    2,   38), M(   -2,   41), M(  -11,   46), M(  -13,   46),
            M(   15,   21), M(   21,   20), M(    0,   33), M(   -0,   32),
            M(    3,   32), M(   -1,   36), M(  -20,   41), M(  -23,   45),
            M(   24,   43), M(   21,   47), M(   16,   37), M(   17,   32),
            M(   22,   27), M(   15,   32), M(  -10,   44), M(  -28,   46),
            M(   40,   87), M(   39,   79), M(   34,   65), M(   39,   43),
            M(   54,   26), M(   47,   28), M(    0,   50), M(  -15,   48),
            M(   33,  165), M(   81,  154), M(   60,  130), M(   64,   76),
            M(   97,   23), M(  100,   17), M(   74,   25), M(    5,   48),
            M(  226,  248), M(  210,  260), M(  175,  236), M(  207,  175),
            M(  236,   99), M(  251,   50), M(  123,   87), M(   90,   92),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {
            
            M( -102,   23), M(  -72,   47), M(  -64,   49), M(  -63,   66),
            M(  -65,   68), M(  -72,   41), M(  -75,   25), M( -112,   -1),
            M(  -75,   57), M(  -81,   65), M(  -63,   52), M(  -64,   70),
            M(  -62,   69), M(  -80,   49), M(  -96,   55), M( -100,   37),
            M(  -74,   49), M(  -61,   71), M(  -59,   75), M(  -55,   85),
            M(  -62,   85), M(  -74,   62), M(  -78,   46), M(  -91,   17),
            M(  -63,   75), M(  -33,   83), M(  -56,  101), M(  -50,  104),
            M(  -63,  101), M(  -69,   91), M(  -78,   71), M(  -84,   46),
            M(  -57,   70), M(  -62,   85), M(  -34,  102), M(  -62,  111),
            M(  -51,  113), M(  -58,   95), M(  -72,   65), M(  -80,   58),
            M(  -81,   62), M(  -48,   69), M(   -1,   89), M(  -13,   88),
            M(  -40,   97), M(  -46,   95), M(  -76,   65), M( -104,   46),
            M(  -57,   53), M( -104,   66), M(   -6,   48), M(  -30,   82),
            M(  -19,   84), M(  -45,   60), M(  -93,   62), M(  -91,   44),
            M( -193,   -8), M( -175,   77), M( -199,  108), M(  -81,   73),
            M( -116,   77), M( -217,  103), M( -203,   73), M( -280,   15),
        },
        {
            
            M(  -61,  -35), M(  -45,   19), M(  -18,   10), M(  -10,   31),
            M(  -14,   26), M(  -25,    9), M(  -32,   10), M(  -71,   -6),
            M(  -33,    9), M(  -38,   28), M(  -15,   12), M(  -10,   29),
            M(   -6,   32), M(  -21,   21), M(  -53,   32), M(  -54,    9),
            M(  -36,    4), M(  -19,   24), M(   -7,   32), M(   -4,   48),
            M(    2,   48), M(  -15,   31), M(  -16,   13), M(  -42,   -4),
            M(  -15,   27), M(    5,   36), M(    3,   55), M(    7,   59),
            M(   18,   54), M(    7,   47), M(   18,   28), M(  -10,   14),
            M(  -19,   32), M(   -1,   31), M(   21,   52), M(   29,   63),
            M(   14,   66), M(   26,   51), M(    4,   26), M(   -1,   15),
            M(  -55,   21), M(   10,   19), M(   27,   50), M(   38,   49),
            M(   53,   44), M(   65,   36), M(   20,    9), M(   -9,   -0),
            M(  -30,    1), M(  -26,   22), M(   37,    8), M(   62,   34),
            M(   39,   28), M(   36,    9), M(  -37,   13), M(   -5,   -5),
            M( -212,  -33), M( -161,   36), M( -140,   49), M(  -58,   33),
            M(  -42,   20), M( -130,   38), M(  -26,    3), M( -173,  -41),
        },
    },
    {
        {
            
            M(  -51,    6), M(  -63,   23), M(  -53,   26), M(  -55,   38),
            M(  -50,   35), M(  -48,   39), M(  -44,   36), M(  -38,   12),
            M(  -43,   -6), M(  -30,   11), M(  -40,   27), M(  -47,   37),
            M(  -50,   42), M(  -45,   31), M(  -40,   13), M(  -44,   11),
            M(  -33,   33), M(  -37,   42), M(  -39,   49), M(  -41,   53),
            M(  -42,   51), M(  -43,   46), M(  -38,   37), M(  -50,   26),
            M(  -41,   31), M(  -44,   45), M(  -47,   57), M(  -29,   57),
            M(  -31,   61), M(  -42,   56), M(  -46,   39), M(  -60,   23),
            M(  -56,   44), M(  -35,   51), M(  -31,   56), M(  -26,   66),
            M(  -12,   60), M(  -40,   53), M(  -39,   45), M(  -68,   41),
            M(  -43,   45), M(  -17,   56), M(  -13,   61), M(   -7,   53),
            M(  -28,   53), M(  -24,   52), M(  -51,   55), M(  -61,   37),
            M(  -81,   46), M(  -51,   52), M(  -36,   48), M(  -56,   55),
            M(  -71,   57), M(  -56,   56), M(  -62,   57), M( -108,   54),
            M( -103,   52), M(  -86,   48), M( -187,   67), M( -146,   66),
            M( -171,   77), M( -181,   70), M( -120,   67), M( -116,   65),
        },
        {
            
            M(   23,  -19), M(   -6,   -3), M(   13,   -2), M(    3,    4),
            M(    4,    6), M(   -1,    1), M(    0,    5), M(    5,  -16),
            M(   25,  -24), M(   55,  -18), M(   34,   -7), M(   24,    1),
            M(    8,    4), M(    5,   -1), M(    2,  -17), M(    7,  -21),
            M(   28,   -8), M(   45,    4), M(   46,    9), M(   28,    9),
            M(   22,   15), M(   10,   10), M(   11,    1), M(    3,   -6),
            M(   15,   -5), M(   29,   10), M(   31,   18), M(   52,   20),
            M(   32,   20), M(   24,   14), M(   21,    0), M(   14,   -8),
            M(    6,   12), M(   30,   14), M(   31,   26), M(   49,   27),
            M(   66,   20), M(   35,   10), M(   42,   10), M(   14,   -2),
            M(    2,   10), M(   31,   20), M(   36,   23), M(   45,   21),
            M(   74,   10), M(   85,    9), M(   57,    3), M(   23,   -2),
            M(  -37,   19), M(  -14,   32), M(   10,   26), M(  -21,   26),
            M(    7,   19), M(   50,    3), M(   22,   10), M(  -33,    1),
            M(  -43,   34), M(  -83,   32), M(  -96,   31), M(  -98,   37),
            M( -124,   31), M( -110,   27), M(   21,    6), M(  -12,   21),
        },
    },
    {
        {
            
            M(  -99,   60), M(  -73,   70), M(  -71,   79), M(  -73,   73),
            M(  -73,   73), M(  -81,   82), M(  -87,   78), M(  -90,   72),
            M( -159,   78), M(  -81,   65), M(  -72,   67), M(  -81,   74),
            M(  -82,   75), M(  -91,   82), M(  -95,   74), M( -128,   81),
            M( -102,   68), M(  -68,   86), M(  -84,   87), M(  -87,   84),
            M(  -87,   86), M( -101,   93), M(  -94,   94), M( -107,   83),
            M(  -95,   94), M(  -69,  102), M(  -85,  108), M(  -87,  104),
            M(  -86,  106), M(  -97,  114), M( -101,  115), M( -101,  100),
            M(  -61,  106), M(  -43,  101), M(  -42,  105), M(  -44,  104),
            M(  -38,  107), M(  -65,  116), M(  -75,  113), M(  -87,  114),
            M(  -44,  110), M(   14,   89), M(    5,  103), M(   -6,   95),
            M(  -25,  104), M(  -54,  119), M(  -44,  108), M(  -88,  123),
            M(  -59,  120), M(  -56,  121), M(   -8,  105), M(  -54,  135),
            M(  -55,  136), M(  -69,  137), M(  -93,  140), M(  -89,  133),
            M(  -23,  128), M(  -41,  135), M(  -35,  136), M(  -84,  140),
            M(  -94,  145), M( -104,  152), M(  -75,  142), M(  -71,  136),
        },
        {
            
            M(  -42,   29), M(  -17,   27), M(   -6,   30), M(   -5,   25),
            M(   -4,   19), M(    1,   23), M(    3,   21), M(  -20,   21),
            M(  -94,   36), M(  -34,   19), M(  -19,   25), M(  -22,   30),
            M(  -16,   27), M(  -11,   22), M(   -4,   14), M(  -52,   28),
            M(  -47,   27), M(   -8,   31), M(  -31,   39), M(  -24,   37),
            M(  -23,   33), M(  -21,   34), M(   -8,   33), M(  -27,   26),
            M(  -27,   46), M(   -3,   50), M(  -22,   60), M(  -18,   56),
            M(  -16,   47), M(  -13,   51), M(  -12,   49), M(  -22,   41),
            M(   -0,   59), M(   13,   54), M(   28,   53), M(   35,   54),
            M(   34,   45), M(   22,   51), M(   28,   42), M(   19,   43),
            M(   11,   60), M(   58,   41), M(   44,   58), M(   58,   46),
            M(   68,   41), M(   58,   44), M(   83,   31), M(   28,   48),
            M(    8,   67), M(   15,   69), M(   28,   69), M(   19,   81),
            M(   31,   68), M(   65,   44), M(   21,   58), M(   29,   52),
            M(   63,   53), M(   37,   70), M(    6,   84), M(  -10,   86),
            M(    1,   77), M(   66,   57), M(   60,   58), M(   39,   66),
        },
    },
    {
        {
            
            M( -155,  114), M( -146,   93), M( -138,  112), M( -131,  127),
            M( -130,  134), M( -137,  125), M( -142,  132), M( -143,  142),
            M( -152,  113), M( -128,   82), M( -120,   77), M( -129,  128),
            M( -131,  135), M( -129,  106), M( -136,  122), M( -145,  132),
            M( -123,  130), M( -119,  139), M( -131,  150), M( -133,  129),
            M( -137,  127), M( -137,  137), M( -133,  132), M( -147,  136),
            M( -119,  163), M( -121,  160), M( -133,  159), M( -144,  167),
            M( -149,  164), M( -146,  136), M( -143,  154), M( -148,  151),
            M( -130,  170), M( -122,  198), M( -140,  194), M( -152,  184),
            M( -161,  182), M( -159,  146), M( -158,  176), M( -160,  173),
            M( -171,  194), M( -129,  208), M( -139,  194), M( -133,  173),
            M( -149,  154), M( -160,  154), M( -165,  166), M( -174,  192),
            M( -138,  214), M( -191,  254), M(  -78,  152), M( -204,  225),
            M( -196,  205), M( -170,  181), M( -214,  226), M( -178,  207),
            M( -113,  162), M( -140,  203), M( -118,  167), M( -172,  180),
            M( -161,  173), M( -168,  197), M( -168,  210), M( -187,  226),
        },
        {
            
            M(   17,  -17), M(   36,  -36), M(   50,  -35), M(   49,    3),
            M(   49,    2), M(   44,  -14), M(   40,   20), M(   46,   -3),
            M(    8,  -12), M(   39,  -10), M(   71,  -48), M(   62,    8),
            M(   54,    4), M(   62,  -26), M(   63,  -18), M(   56,   -3),
            M(   26,   16), M(   53,   18), M(   51,   29), M(   51,   13),
            M(   49,   11), M(   57,    6), M(   64,   -2), M(   66,    1),
            M(   35,   35), M(   47,   44), M(   33,   48), M(   43,   61),
            M(   43,   46), M(   53,   30), M(   62,   17), M(   71,   -2),
            M(   35,   56), M(   28,   71), M(   26,   44), M(   34,   68),
            M(   53,   59), M(   57,   46), M(   80,   36), M(   63,   15),
            M(   25,   78), M(   45,   34), M(   51,   35), M(   44,   44),
            M(   69,   50), M(   56,   67), M(   84,   20), M(   40,   29),
            M(   25,   66), M(  -11,  105), M(   30,   64), M(   -9,   95),
            M(  -25,  113), M(   97,   27), M(   18,   74), M(   53,   24),
            M(   41,   62), M(   43,   70), M(   43,   56), M(   25,   66),
            M(   14,   64), M(  164,  -27), M(   33,   51), M(   59,   16),
        },
    },
    {
        {
            
            M(  216, -196), M(  291,  -94), M(  187,  -55), M(  214,  -32),
            M(  195,  -46), M(  165,  -52), M(  168,  -59), M(  165, -183),
            M(  122,  -78), M(  198,  -24), M(  236,  -36), M(  255,  -44),
            M(  223,  -41), M(  255,  -39), M(  142,  -14), M(  168,  -85),
            M(  134,  -40), M(  250,  -24), M(  279,  -32), M(  263,  -36),
            M(  254,  -36), M(  285,  -32), M(  230,  -22), M(  147,  -51),
            M(   67,  -28), M(  205,  -36), M(  210,  -21), M(  160,  -12),
            M(  186,  -16), M(  212,  -21), M(  180,  -31), M(   51,  -32),
            M(   18,  -42), M(  131,  -26), M(  150,  -12), M(   95,    3),
            M(  121,    2), M(  125,   -6), M(  129,  -18), M(   13,  -33),
            M(   -8,  -22), M(   31,   -6), M(   48,   -0), M(   36,   12),
            M(   58,   12), M(   55,    5), M(   34,    1), M(   -8,   -8),
            M(   50,  -19), M(   20,    3), M(    7,   10), M(  -41,   20),
            M(   -5,   16), M(   -4,   22), M(   25,    6), M(   37,  -11),
            M(   57,  -68), M(   44,  -16), M(   14,    2), M(   -7,  -13),
            M(    4,  -22), M(   -7,    7), M(   53,  -12), M(   56,  -61),
        },
        {
            
            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};

// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}