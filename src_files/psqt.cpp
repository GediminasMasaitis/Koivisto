//
// Created by Luecx on 06.12.2020.
//

#include "psqt.h"

EvalScore piece_square_tables[64][64][12][64]{};

// indexed by piece
EvalScore piece_values[6] = {
    M(90, 104), M(463, 326), M(474, 288), M(577, 594), M(1359, 1121), M(0, 0),
};


// indexed by piece, relation to king
EvalScore piece_our_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(   -4,   74), M(  -28,  -73), M(  -88,   -4), M(  -80,   17), M(  -69,   -3),
        M(  -65,  -16), M(  -48,  -24), M(  -30,  -64), M(  -10,  -37), M(  -67,   -4),
        M(  -40,  -12), M(  -77,   21), M(  -22,   27), M(  -31,   37), M(  -68,   48),
        M(  -43,   -7), M(  -27,  -12), M(  -25,  -12), M(  -32,   -5), M(  -37,  -12),
        M(  -49,  -15), M(  -10,  -14), M(  -48,   -6), M(  -28,  -26), M(  -24,  -21),
        M(  -23,  -18), M(  -17,    2), M(  -22,   10), M(   -4,   12), M(    2,    7),
        M(  -32,  -23), M(  -16,   -7), M(   -9,   -3), M(  -11,   -4), M(  -34,    1),
        M(  -24,  -11), M(  -19,  -11), M(   -6,  -16), M(  -12,  -27), M(  -18,  -13),
        M(   -9,  -15), M(  -14,    3), M(   -7,    1), M(   -7,   -1), M(   -7,  -11),
        M(  -49,   10), M(    5,   -8), M(   -3,    5), M(   -2,   -3), M(  -18,    6),
        M(   -9,   -2), M(    6,    3), M(   16,  -10), M(   -0,  -13), M(  -11,   -5),
        M(  -12,   -0), M(  -10,    2), M(   -6,   -1), M(   -3,   -3), M(    8,  -19),
        M(  -27,   -1), M(    3,    2), M(  -10,    3), M(   -0,    5), M(   -6,    6),
        M(   -0,    9), M(   24,    6), M(   35,    3), M(    8,    5), M(    4,    8),
        M(   -5,    3), M(   -4,    3), M(  -10,    5), M(   -5,   -1), M(    8,  -20),
        M(  -50,   15), M(   -3,   -6), M(   -8,    6), M(    2,   -1), M(    4,    7),
        M(   -0,   13), M(   -4,  -15), M(   12,   -9), M(   -6,   -7), M(    2,    9),
        M(   -2,    7), M(   -8,    3), M(   -9,    4), M(   -4,    0), M(    6,  -14),
        M(  -39,    5), M(    3,   -2), M(   -9,    4), M(   -0,    3), M(    6,    8),
        M(    1,   15), M(   -1,   -5), M(    0,    0), M(    9,   -3), M(    1,   15),
        M(   -4,   10), M(  -11,    8), M(  -10,    5), M(   -5,    1), M(   10,  -13),
        M(  -19,   17), M(    3,    1), M(    1,    4), M(    0,    1), M(    2,    9),
        M(   -8,   16), M(  -40,    4), M(  -32,   27), M(  -48,    0), M(  -13,   18),
        M(  -18,   11), M(  -20,   11), M(  -17,    9), M(   -9,    6), M(  -12,    4),
        M(  -11,   14), M(   18,   -7), M(  -66,   14), M(  -63,    7), M(  -40,   14),
        M(  -87,   20), M(  -63,   24), M(  -42,   15), M(  -67,   21), M(  -48,    7),
        M(  -81,   28), M(  -46,   13), M(  -44,   11), M(  -55,   18), M(  -82,   32),
        M(   19,  -10), M( -114,   24), M(  -48,   16), M(  -96,   12), M(  -84,   14),
        M( -105,   26), M(  -88,   22), M( -114,   34), M( -119,   25), M( -115,   19),
        M( -109,   30), M(  -85,   18), M( -124,   20), M(  -76,   20), M( -103,   28),
        M( -250,   34), M( -143,    8), M(   30,    4), M( -185,   29), M(  -63,   24),
        M(  -75,   22), M( -131,   35), M( -131,   44), M( -114,   25), M(  -62,   17),
        M( -149,   43), M( -165,   17), M(  -80,    6), M(  -40,    4), M( -465,   80),
        M( -223,   43), M( -276,   49), M(  -73,   32), M( -239,   69), M( -247,   43),
        M( -126,   44), M(  -79,   55), M( -138,   43), M( -122,   37), M( -131,   43),
        M(   60,   -4), M( -170,   15), M( -124,   -0), M( -109,   63), M( -417,    1),
        M(   -3,   86), M(-1271,  238), M(  -13,   83), M( -596,  136), M(  237,   36),
        M( -385,  148), M( -314,   66), M( -314,  152), M( -332,   76), M( -305,   11),
        M(  -65,   64), M(  -79,  -40), M(  412,  -79), M(  -71,  -17), M( -262,  102),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};
EvalScore piece_opp_king_square_table[5][15*15]{
    {
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(  -38,   49), M( -501,  195), M( -262,  147), M( -279,  153), M( -234,  209),
        M( -286,  212), M(   54,  209), M( -217,  323), M(  -70,  249), M(  -52,  207),
        M(    6,  163), M( -696,  242), M( -548,  158), M( -289,  111), M( -368,  103),
        M( -190,  135), M( -436,  124), M( -325,  106), M( -357,  129), M( -264,  144),
        M( -268,  200), M( -219,  200), M( -207,  174), M(  -94,  160), M( -206,  169),
        M( -107,  119), M( -328,  103), M( -458,  111), M( -604,  159), M( -268,   73),
        M( -245,   99), M( -264,   83), M( -252,   67), M( -202,   50), M( -102,   67),
        M( -104,  105), M( -121,  122), M(  -86,  106), M( -101,  102), M( -104,   98),
        M(  -84,   60), M( -141,   25), M( -194,   35), M( -300,   70), M( -297,   42),
        M( -230,   52), M( -145,   36), M(  -99,   22), M( -108,   22), M(  -54,   31),
        M(  -68,   51), M(  -88,   64), M(  -79,   50), M(    6,   45), M(  -84,   48),
        M(  -77,   27), M(  -81,    3), M(  -95,   19), M( -163,   30), M( -232,   57),
        M( -117,   36), M(  -65,   19), M(  -64,   14), M(  -49,    2), M(  -21,   15),
        M(  -53,   16), M(  -81,   24), M(  -95,   16), M(  -75,   20), M(  -56,   11),
        M(  -45,   22), M(  -70,    4), M(  -60,   12), M(  -64,   22), M(  -68,   34),
        M(  -37,   23), M(   -9,   11), M(  -14,    3), M(   -4,   -3), M(   33,   -2),
        M(  -31,    8), M(  -65,   -1), M( -102,    0), M(  -95,    2), M(  -44,    9),
        M(  -17,    8), M(  -14,    2), M(  -15,    8), M(  -36,   26), M(  -44,   29),
        M(    8,   21), M(    2,    6), M(   21,    1), M(   10,   -5), M(   18,   -1),
        M(    7,    1), M(   23,  -49), M(    0,    0), M(   -8,  -49), M(  -25,    8),
        M(   -4,    5), M(   -5,    7), M(   -2,   11), M(  -10,   19), M(  -21,   31),
        M(   -6,   21), M(   15,   10), M(   13,    6), M(   17,   -0), M(   26,    2),
        M(   31,    3), M(  -79,  -18), M(  -81,  -24), M(  -81,  -20), M(   13,    6),
        M(    5,   12), M(    4,   11), M(   -1,   19), M(   -6,   24), M(  -12,   32),
        M(    6,   17), M(    4,   17), M(    8,   11), M(   13,    8), M(   26,    2),
        M(   24,    9), M(   40,    3), M(   44,   -3), M(   46,    6), M(   16,   12),
        M(    8,   11), M(    2,   18), M(    0,   20), M(    1,   26), M(   -2,   24),
        M(   -8,   25), M(   11,   17), M(    1,   18), M(   12,   13), M(   24,    5),
        M(   24,    7), M(   22,    9), M(    6,    6), M(   24,   10), M(   18,   11),
        M(    6,   13), M(    9,   18), M(    6,   23), M(    8,   23), M(    1,   26),
        M(   -4,   21), M(    9,   19), M(    7,   19), M(    4,   18), M(   13,   12),
        M(   14,    6), M(    8,    8), M(    2,    2), M(   10,    9), M(   13,    8),
        M(   10,   13), M(    8,   19), M(   12,   22), M(   13,   24), M(    7,   23),
        M(   -0,   21), M(   10,   23), M(   11,   20), M(    8,   21), M(    5,   16),
        M(    7,   13), M(   -5,   13), M(   -9,   11), M(   -1,   19), M(    4,   16),
        M(    6,   15), M(    8,   23), M(   10,   24), M(   15,   23), M(    8,   23),
        M(    7,   22), M(   19,   14), M(   12,   19), M(   -2,   24), M(   -2,   23),
        M(   -6,   19), M(   -9,    9), M(  -14,   12), M(   -8,   25), M(   -3,   17),
        M(    3,   19), M(    2,   28), M(    9,   27), M(   15,   24), M(   11,   23),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
    },
    {
    
    },
    {
    
    },
    {
    
    },
    {
    
    },
};



// indexed by piece, sameSideCastle, square
EvalScore piece_square_table[6][2][64]{
    {
        {

            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    2,    6), M(   25,   20), M(   17,   42), M(   -2,   47),
            M(   -5,   32), M(   -9,   28), M(  -12,   27), M(  -15,   38),
            M(   -2,   18), M(    3,   23), M(    1,   39), M(   -1,   36),
            M(   -2,   23), M(  -10,   26), M(  -16,   27), M(  -15,   34),
            M(   -7,   27), M(    4,   36), M(    8,   34), M(   18,   27),
            M(   12,   23), M(    6,   23), M(  -10,   40), M(  -14,   46),
            M(   10,   44), M(   16,   53), M(   37,   39), M(   38,   31),
            M(   31,   21), M(   12,   43), M(    5,   56), M(    0,   70),
            M(   11,   70), M(   74,   60), M(  106,   44), M(   65,   35),
            M(   49,   45), M(   45,   76), M(   34,  100), M(   -3,  114),
            M(   61,  146), M(   90,  136), M(  209,   91), M(  212,  104),
            M(  187,  140), M(  187,  170), M(  151,  204), M(  170,  197),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
        {

            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(   15,   18), M(   42,   13), M(   25,   27), M(    2,   38),
            M(    1,   41), M(   -3,   44), M(  -12,   49), M(  -15,   49),
            M(   18,   22), M(   24,   21), M(    4,   35), M(    0,   34),
            M(    4,   35), M(   -0,   38), M(  -21,   44), M(  -24,   47),
            M(   25,   45), M(   21,   50), M(   16,   39), M(   16,   35),
            M(   22,   29), M(   16,   35), M(   -9,   46), M(  -29,   48),
            M(   37,   91), M(   37,   82), M(   31,   69), M(   35,   47),
            M(   52,   28), M(   46,   31), M(   -0,   52), M(  -18,   50),
            M(   28,  171), M(   73,  161), M(   56,  135), M(   58,   81),
            M(   89,   26), M(   96,   19), M(   69,   28), M(   -0,   51),
            M(  225,  253), M(  206,  266), M(  169,  242), M(  205,  178),
            M(  235,  100), M(  255,   48), M(  120,   85), M(   86,   91),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
            M(    0,    0), M(    0,    0), M(    0,    0), M(    0,    0),
        },
    },
    {
        {

            M( -103,   25), M(  -70,   50), M(  -62,   54), M(  -61,   72),
            M(  -64,   74), M(  -71,   46), M(  -74,   30), M( -111,    1),
            M(  -74,   63), M(  -80,   72), M(  -62,   58), M(  -63,   76),
            M(  -60,   75), M(  -79,   55), M(  -94,   60), M(  -99,   41),
            M(  -72,   53), M(  -59,   77), M(  -57,   80), M(  -53,   92),
            M(  -60,   92), M(  -72,   68), M(  -76,   52), M(  -90,   21),
            M(  -61,   80), M(  -31,   89), M(  -54,  108), M(  -48,  111),
            M(  -62,  108), M(  -67,   98), M(  -77,   78), M(  -83,   51),
            M(  -55,   76), M(  -62,   89), M(  -31,  108), M(  -62,  118),
            M(  -49,  121), M(  -56,  102), M(  -70,   71), M(  -78,   64),
            M(  -81,   67), M(  -51,   76), M(   -5,   98), M(  -13,   95),
            M(  -39,  104), M(  -44,  102), M(  -75,   71), M( -102,   52),
            M(  -60,   60), M( -109,   72), M(  -11,   55), M(  -29,   89),
            M(  -19,   91), M(  -41,   66), M(  -92,   68), M(  -88,   48),
            M( -203,   -1), M( -167,   81), M( -210,  117), M(  -80,   78),
            M( -116,   83), M( -218,  110), M( -206,   81), M( -282,   17),
        },
        {

            M(  -61,  -28), M(  -45,   26), M(  -15,   17), M(   -7,   39),
            M(  -12,   32), M(  -25,   14), M(  -31,   15), M(  -71,    4),
            M(  -32,   15), M(  -39,   36), M(  -13,   19), M(   -9,   36),
            M(   -5,   38), M(  -20,   28), M(  -54,   37), M(  -55,   14),
            M(  -33,   10), M(  -17,   32), M(   -5,   39), M(   -2,   55),
            M(    5,   56), M(  -14,   36), M(  -13,   19), M(  -41,    2),
            M(  -13,   34), M(    8,   44), M(    6,   63), M(    9,   66),
            M(   20,   62), M(    9,   55), M(   20,   35), M(  -10,   21),
            M(  -17,   39), M(    2,   38), M(   25,   59), M(   32,   71),
            M(   15,   72), M(   28,   59), M(    5,   32), M(    3,   22),
            M(  -53,   27), M(   12,   26), M(   29,   57), M(   40,   57),
            M(   52,   52), M(   62,   44), M(   18,   16), M(  -10,    6),
            M(  -27,    6), M(  -24,   29), M(   42,   14), M(   68,   41),
            M(   36,   36), M(   27,   17), M(  -40,   20), M(   -7,    1),
            M( -214,  -27), M( -161,   43), M( -141,   55), M(  -63,   43),
            M(  -44,   26), M( -136,   46), M(  -24,    7), M( -180,  -39),
        },
    },
    {
        {

            M(  -50,   10), M(  -62,   27), M(  -53,   30), M(  -54,   42),
            M(  -49,   39), M(  -47,   43), M(  -43,   39), M(  -36,   14),
            M(  -42,   -5), M(  -28,   14), M(  -39,   30), M(  -47,   41),
            M(  -49,   46), M(  -44,   34), M(  -39,   16), M(  -43,   14),
            M(  -31,   37), M(  -36,   46), M(  -38,   53), M(  -40,   57),
            M(  -42,   54), M(  -41,   50), M(  -37,   39), M(  -49,   28),
            M(  -39,   34), M(  -42,   49), M(  -46,   61), M(  -28,   61),
            M(  -29,   65), M(  -41,   59), M(  -44,   42), M(  -60,   26),
            M(  -55,   46), M(  -34,   54), M(  -30,   59), M(  -26,   69),
            M(  -11,   64), M(  -40,   57), M(  -37,   49), M(  -68,   45),
            M(  -43,   48), M(  -20,   60), M(  -16,   65), M(   -8,   56),
            M(  -27,   57), M(  -21,   56), M(  -51,   60), M(  -61,   41),
            M(  -86,   50), M(  -60,   57), M(  -38,   51), M(  -57,   59),
            M(  -71,   61), M(  -55,   60), M(  -61,   61), M( -108,   60),
            M( -107,   55), M(  -95,   53), M( -198,   71), M( -151,   70),
            M( -174,   81), M( -183,   75), M( -122,   72), M( -115,   68),
        },
        {

            M(   24,  -15), M(   -5,    2), M(   13,    3), M(    5,   10),
            M(    5,   10), M(   -1,    6), M(    1,    9), M(    4,  -10),
            M(   28,  -22), M(   58,  -14), M(   35,   -3), M(   25,    5),
            M(    8,    9), M(    7,    3), M(    3,  -12), M(    9,  -18),
            M(   28,   -5), M(   46,    8), M(   49,   13), M(   29,   14),
            M(   24,   20), M(   11,   14), M(   12,    5), M(    4,   -2),
            M(   17,   -2), M(   31,   14), M(   31,   22), M(   55,   24),
            M(   34,   25), M(   25,   19), M(   21,    4), M(   16,   -6),
            M(    9,   17), M(   32,   18), M(   34,   30), M(   50,   31),
            M(   68,   24), M(   36,   13), M(   43,   13), M(   14,    0),
            M(    2,   15), M(   35,   24), M(   39,   27), M(   46,   26),
            M(   74,   14), M(   80,   14), M(   58,    6), M(   21,    1),
            M(  -37,   25), M(  -13,   36), M(   12,   31), M(  -20,   31),
            M(    5,   23), M(   45,    8), M(   15,   14), M(  -35,    5),
            M(  -39,   38), M(  -84,   37), M(  -85,   34), M(  -93,   40),
            M( -128,   35), M( -117,   30), M(   17,   10), M(  -16,   26),
        },
    },
    {
        {

            M(  -94,   70), M(  -66,   80), M(  -66,   91), M(  -69,   84),
            M(  -70,   84), M(  -79,   92), M(  -84,   88), M(  -87,   83),
            M( -152,   89), M(  -73,   75), M(  -66,   77), M(  -78,   85),
            M(  -78,   87), M(  -89,   93), M(  -93,   85), M( -125,   92),
            M(  -97,   80), M(  -61,   98), M(  -77,   98), M(  -83,   95),
            M(  -84,   98), M(  -98,  104), M(  -91,  106), M( -104,   94),
            M(  -88,  105), M(  -61,  113), M(  -78,  119), M(  -84,  116),
            M(  -83,  119), M(  -95,  127), M(  -99,  127), M(  -98,  111),
            M(  -51,  117), M(  -33,  111), M(  -32,  116), M(  -40,  116),
            M(  -34,  119), M(  -61,  129), M(  -72,  125), M(  -84,  127),
            M(  -30,  120), M(   32,   97), M(   25,  110), M(    1,  106),
            M(  -20,  117), M(  -49,  131), M(  -40,  120), M(  -86,  136),
            M(  -41,  130), M(  -38,  129), M(   17,  110), M(  -41,  145),
            M(  -45,  148), M(  -61,  149), M(  -87,  152), M(  -83,  146),
            M(   -5,  138), M(  -22,  144), M(  -12,  143), M(  -68,  150),
            M(  -82,  156), M(  -93,  163), M(  -64,  153), M(  -63,  148),
        },
        {

            M(  -40,   42), M(  -14,   39), M(   -4,   43), M(   -2,   37),
            M(   -0,   31), M(    6,   36), M(    9,   32), M(  -15,   32),
            M(  -92,   49), M(  -35,   34), M(  -18,   39), M(  -20,   44),
            M(  -12,   39), M(   -4,   34), M(    4,   25), M(  -46,   40),
            M(  -44,   39), M(   -6,   45), M(  -28,   53), M(  -22,   50),
            M(  -22,   47), M(  -14,   46), M(   -2,   47), M(  -20,   38),
            M(  -25,   60), M(    4,   62), M(  -18,   74), M(  -16,   70),
            M(  -12,   60), M(   -8,   64), M(   -5,   63), M(  -16,   54),
            M(    6,   71), M(   17,   68), M(   32,   66), M(   40,   68),
            M(   38,   58), M(   31,   63), M(   36,   54), M(   26,   56),
            M(   16,   73), M(   67,   52), M(   50,   72), M(   67,   58),
            M(   79,   53), M(   82,   51), M(   99,   41), M(   40,   61),
            M(   19,   80), M(   28,   80), M(   39,   81), M(   31,   93),
            M(   45,   80), M(   87,   52), M(   38,   68), M(   43,   64),
            M(   74,   66), M(   43,   84), M(   25,   94), M(    7,   97),
            M(   22,   87), M(   93,   65), M(   79,   68), M(   50,   79),
        },
    },
    {
        {

            M( -153,  118), M( -143,   97), M( -136,  116), M( -128,  131),
            M( -127,  139), M( -134,  129), M( -140,  136), M( -140,  146),
            M( -150,  118), M( -125,   85), M( -117,   83), M( -126,  136),
            M( -128,  143), M( -126,  113), M( -134,  129), M( -143,  140),
            M( -119,  135), M( -116,  147), M( -128,  160), M( -131,  139),
            M( -135,  137), M( -135,  148), M( -130,  140), M( -145,  144),
            M( -117,  174), M( -119,  170), M( -130,  170), M( -144,  181),
            M( -147,  177), M( -143,  147), M( -141,  163), M( -146,  159),
            M( -126,  178), M( -118,  206), M( -137,  205), M( -150,  197),
            M( -160,  197), M( -156,  157), M( -156,  187), M( -158,  181),
            M( -168,  202), M( -117,  208), M( -129,  191), M( -129,  183),
            M( -147,  165), M( -158,  166), M( -161,  175), M( -170,  198),
            M( -134,  222), M( -188,  261), M(  -62,  147), M( -201,  234),
            M( -195,  218), M( -166,  189), M( -211,  233), M( -175,  212),
            M( -108,  172), M( -143,  215), M( -118,  176), M( -171,  189),
            M( -158,  184), M( -164,  203), M( -161,  210), M( -183,  225),
        },
        {

            M(   15,   -1), M(   36,  -28), M(   49,  -24), M(   47,   16),
            M(   49,   11), M(   43,   -3), M(   39,   31), M(   45,   11),
            M(    8,    2), M(   38,   -2), M(   71,  -35), M(   62,   21),
            M(   54,   14), M(   62,  -13), M(   65,   -5), M(   55,   12),
            M(   26,   28), M(   54,   30), M(   51,   44), M(   50,   29),
            M(   48,   27), M(   57,   23), M(   64,   15), M(   65,   14),
            M(   36,   48), M(   46,   61), M(   32,   66), M(   42,   82),
            M(   40,   66), M(   53,   46), M(   61,   38), M(   71,   16),
            M(   39,   63), M(   27,   89), M(   26,   62), M(   30,   90),
            M(   50,   78), M(   57,   61), M(   80,   55), M(   63,   31),
            M(   27,   86), M(   46,   48), M(   52,   52), M(   41,   63),
            M(   71,   65), M(   54,   80), M(   86,   32), M(   41,   41),
            M(   29,   74), M(   -9,  117), M(   34,   76), M(   -8,  113),
            M(  -22,  127), M(  109,   31), M(   20,   86), M(   49,   43),
            M(   44,   66), M(   47,   78), M(   36,   74), M(   14,   89),
            M(   13,   80), M(  165,  -16), M(   33,   64), M(   57,   33),
        },
    },
    {
        {

            M(  190, -194), M(  268,  -87), M(  148,  -51), M(  197,  -31),
            M(  187,  -48), M(  137,  -49), M(  146,  -55), M(  177, -187),
            M(   92,  -76), M(  184,  -21), M(  231,  -36), M(  248,  -43),
            M(  224,  -44), M(  247,  -39), M(  128,  -12), M(  155,  -85),
            M(  115,  -39), M(  238,  -23), M(  269,  -31), M(  266,  -37),
            M(  262,  -38), M(  285,  -32), M(  225,  -22), M(  132,  -49),
            M(   60,  -28), M(  202,  -37), M(  208,  -21), M(  163,  -13),
            M(  182,  -15), M(  210,  -20), M(  169,  -30), M(   32,  -29),
            M(   12,  -42), M(  130,  -26), M(  151,  -12), M(   96,    3),
            M(  121,    3), M(  122,   -5), M(  126,  -17), M(    4,  -32),
            M(   -9,  -24), M(   31,   -7), M(   48,   -1), M(   35,   12),
            M(   54,   14), M(   52,    7), M(   35,    1), M(   -9,   -9),
            M(   49,  -22), M(   21,   -0), M(    8,    8), M(  -44,   20),
            M(   -8,   17), M(   -8,   22), M(   23,    5), M(   36,  -13),
            M(   54,  -74), M(   43,  -21), M(   14,   -2), M(  -11,  -16),
            M(   -2,  -24), M(  -15,    6), M(   51,  -15), M(   56,  -66),
        },
        {

            M(  192, -182), M(  223,  -64), M(  152,  -44), M(  182,  -22),
            M(  150,  -42), M(  106,  -44), M(  114,  -49), M(  175, -188),
            M(   80,  -63), M(  169,  -16), M(  204,  -31), M(  246,  -44),
            M(  216,  -42), M(  242,  -36), M(   88,   -5), M(  129,  -81),
            M(  100,  -32), M(  217,  -19), M(  250,  -27), M(  259,  -35),
            M(  263,  -36), M(  280,  -29), M(  193,  -15), M(   97,  -39),
            M(   32,  -21), M(  185,  -32), M(  200,  -20), M(  164,  -12),
            M(  175,  -13), M(  206,  -18), M(  147,  -24), M(   20,  -24),
            M(   11,  -37), M(  122,  -23), M(  152,  -12), M(   95,    3),
            M(  119,    4), M(  124,   -4), M(  122,  -15), M(   -1,  -29),
            M(   -7,  -20), M(   33,   -6), M(   57,   -2), M(   42,   12),
            M(   58,   14), M(   58,    7), M(   42,    1), M(   -8,   -9),
            M(   41,  -17), M(   26,   -1), M(   17,    6), M(  -38,   19),
            M(   -3,   17), M(   -4,   22), M(   27,    5), M(   38,  -14),
            M(   44,  -68), M(   41,  -23), M(   14,   -3), M(  -14,  -15),
            M(   -3,  -23), M(  -18,    6), M(   50,  -17), M(   55,  -68),
        },
    },
};
// indexed by wking, bking, piece, square
EvalScore piece_kk_square_tables[64][64][12][64];

void psqt_init() {
    for(Square wKingSq = 0; wKingSq < 64; wKingSq++){
        for(Square bKingSq = 0; bKingSq < 64; bKingSq++){
            
            bool   wKSide            = (fileIndex(wKingSq) > 3 ? 0 : 1);
            bool   bKSide            = (fileIndex(bKingSq) > 3 ? 0 : 1);
            bool   sameSideCastle    = wKSide == bKSide;
            
            // pawn, knight, bishop, rook, queen
            for(Piece p = 0; p < 5; p++){
                for(Square sq = 0; sq < 64; sq++){

                    piece_kk_square_tables[wKingSq][bKingSq][p]  [sq] =
                          + piece_square_table              [p][!sameSideCastle][pst_index_white(sq, wKSide)]
                          + piece_values                    [p]
                          + piece_our_king_square_table     [p]     [pst_index_relative_white(sq, wKingSq)]
                          + piece_opp_king_square_table     [p]     [pst_index_relative_white(sq, bKingSq)];

                    piece_kk_square_tables[wKingSq][bKingSq][p+6][sq] =
                          - piece_square_table              [p][!sameSideCastle][pst_index_black(sq, bKSide)]
                          - piece_values                    [p]
                          - piece_our_king_square_table     [p]     [pst_index_relative_black(sq, bKingSq)]
                          - piece_opp_king_square_table     [p]     [pst_index_relative_black(sq, wKingSq)];
                }
            }

            // kings
            for(Square sq = 0; sq < 64; sq++){
                piece_kk_square_tables[wKingSq][bKingSq][WHITE_KING][sq]
                    = + piece_square_table[KING][0][pst_index_white_s(sq)];
                piece_kk_square_tables[wKingSq][bKingSq][BLACK_KING][sq]
                    = - piece_square_table[KING][0][pst_index_black_s(sq)];
            }
            
        }
    }
}